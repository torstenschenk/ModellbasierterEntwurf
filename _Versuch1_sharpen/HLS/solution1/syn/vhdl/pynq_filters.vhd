-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pynq_filters is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_data_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    in_data_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    in_data_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    in_data_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_data_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    in_data_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_data_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    out_data_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_data_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_data_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_data_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_data_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    in_data_TVALID : IN STD_LOGIC;
    in_data_TREADY : OUT STD_LOGIC;
    out_data_TVALID : OUT STD_LOGIC;
    out_data_TREADY : IN STD_LOGIC );
end;


architecture behav of pynq_filters is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "pynq_filters,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=10.840000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=71,HLS_SYN_DSP=35,HLS_SYN_FF=9096,HLS_SYN_LUT=14176}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal reduce : STD_LOGIC_VECTOR (31 downto 0);
    signal pynq_filters_pynq_filters_entry3_U0_ap_start : STD_LOGIC;
    signal pynq_filters_pynq_filters_entry3_U0_ap_done : STD_LOGIC;
    signal pynq_filters_pynq_filters_entry3_U0_ap_continue : STD_LOGIC;
    signal pynq_filters_pynq_filters_entry3_U0_ap_idle : STD_LOGIC;
    signal pynq_filters_pynq_filters_entry3_U0_ap_ready : STD_LOGIC;
    signal pynq_filters_pynq_filters_entry3_U0_reduce_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal pynq_filters_pynq_filters_entry3_U0_reduce_out_write : STD_LOGIC;
    signal pynq_filters_pynq_filters_entry211_U0_ap_start : STD_LOGIC := '0';
    signal pynq_filters_pynq_filters_entry211_U0_ap_done : STD_LOGIC;
    signal pynq_filters_pynq_filters_entry211_U0_ap_continue : STD_LOGIC;
    signal pynq_filters_pynq_filters_entry211_U0_ap_idle : STD_LOGIC;
    signal pynq_filters_pynq_filters_entry211_U0_ap_ready : STD_LOGIC;
    signal pynq_filters_pynq_filters_entry211_U0_reduce_read : STD_LOGIC;
    signal pynq_filters_pynq_filters_entry211_U0_reduce_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal pynq_filters_pynq_filters_entry211_U0_reduce_out_write : STD_LOGIC;
    signal pynq_filters_Block_proc_U0_ap_start : STD_LOGIC;
    signal pynq_filters_Block_proc_U0_ap_done : STD_LOGIC;
    signal pynq_filters_Block_proc_U0_ap_continue : STD_LOGIC;
    signal pynq_filters_Block_proc_U0_ap_idle : STD_LOGIC;
    signal pynq_filters_Block_proc_U0_ap_ready : STD_LOGIC;
    signal pynq_filters_Block_proc_U0_input_image_8U3_rows_V_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal pynq_filters_Block_proc_U0_input_image_8U3_rows_V_out_write : STD_LOGIC;
    signal pynq_filters_Block_proc_U0_input_image_8U3_cols_V_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal pynq_filters_Block_proc_U0_input_image_8U3_cols_V_out_write : STD_LOGIC;
    signal pynq_filters_AXIvideo2Mat_U0_ap_start : STD_LOGIC;
    signal pynq_filters_AXIvideo2Mat_U0_ap_done : STD_LOGIC;
    signal pynq_filters_AXIvideo2Mat_U0_ap_continue : STD_LOGIC;
    signal pynq_filters_AXIvideo2Mat_U0_ap_idle : STD_LOGIC;
    signal pynq_filters_AXIvideo2Mat_U0_ap_ready : STD_LOGIC;
    signal pynq_filters_AXIvideo2Mat_U0_in_data_TREADY : STD_LOGIC;
    signal pynq_filters_AXIvideo2Mat_U0_img_rows_V_read : STD_LOGIC;
    signal pynq_filters_AXIvideo2Mat_U0_img_cols_V_read : STD_LOGIC;
    signal pynq_filters_AXIvideo2Mat_U0_img_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal pynq_filters_AXIvideo2Mat_U0_img_data_stream_0_V_write : STD_LOGIC;
    signal pynq_filters_AXIvideo2Mat_U0_img_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal pynq_filters_AXIvideo2Mat_U0_img_data_stream_1_V_write : STD_LOGIC;
    signal pynq_filters_AXIvideo2Mat_U0_img_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal pynq_filters_AXIvideo2Mat_U0_img_data_stream_2_V_write : STD_LOGIC;
    signal pynq_filters_AXIvideo2Mat_U0_img_rows_V_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal pynq_filters_AXIvideo2Mat_U0_img_rows_V_out_write : STD_LOGIC;
    signal pynq_filters_AXIvideo2Mat_U0_img_cols_V_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal pynq_filters_AXIvideo2Mat_U0_img_cols_V_out_write : STD_LOGIC;
    signal pynq_filters_Duplicate_U0_ap_start : STD_LOGIC := '0';
    signal pynq_filters_Duplicate_U0_ap_done : STD_LOGIC;
    signal pynq_filters_Duplicate_U0_ap_continue : STD_LOGIC;
    signal pynq_filters_Duplicate_U0_ap_idle : STD_LOGIC;
    signal pynq_filters_Duplicate_U0_ap_ready : STD_LOGIC;
    signal pynq_filters_Duplicate_U0_src_rows_V_read : STD_LOGIC;
    signal pynq_filters_Duplicate_U0_src_cols_V_read : STD_LOGIC;
    signal pynq_filters_Duplicate_U0_src_data_stream_0_V_read : STD_LOGIC;
    signal pynq_filters_Duplicate_U0_src_data_stream_1_V_read : STD_LOGIC;
    signal pynq_filters_Duplicate_U0_src_data_stream_2_V_read : STD_LOGIC;
    signal pynq_filters_Duplicate_U0_dst1_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal pynq_filters_Duplicate_U0_dst1_data_stream_0_V_write : STD_LOGIC;
    signal pynq_filters_Duplicate_U0_dst1_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal pynq_filters_Duplicate_U0_dst1_data_stream_1_V_write : STD_LOGIC;
    signal pynq_filters_Duplicate_U0_dst1_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal pynq_filters_Duplicate_U0_dst1_data_stream_2_V_write : STD_LOGIC;
    signal pynq_filters_Duplicate_U0_dst2_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal pynq_filters_Duplicate_U0_dst2_data_stream_0_V_write : STD_LOGIC;
    signal pynq_filters_Duplicate_U0_dst2_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal pynq_filters_Duplicate_U0_dst2_data_stream_1_V_write : STD_LOGIC;
    signal pynq_filters_Duplicate_U0_dst2_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal pynq_filters_Duplicate_U0_dst2_data_stream_2_V_write : STD_LOGIC;
    signal pynq_filters_CvtColor_1_U0_ap_start : STD_LOGIC := '0';
    signal pynq_filters_CvtColor_1_U0_ap_done : STD_LOGIC;
    signal pynq_filters_CvtColor_1_U0_ap_continue : STD_LOGIC;
    signal pynq_filters_CvtColor_1_U0_ap_idle : STD_LOGIC;
    signal pynq_filters_CvtColor_1_U0_ap_ready : STD_LOGIC;
    signal pynq_filters_CvtColor_1_U0_p_src_data_stream_0_V_read : STD_LOGIC;
    signal pynq_filters_CvtColor_1_U0_p_src_data_stream_1_V_read : STD_LOGIC;
    signal pynq_filters_CvtColor_1_U0_p_src_data_stream_2_V_read : STD_LOGIC;
    signal pynq_filters_CvtColor_1_U0_p_dst_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal pynq_filters_CvtColor_1_U0_p_dst_data_stream_V_write : STD_LOGIC;
    signal pynq_filters_gaussianBlur_U0_ap_start : STD_LOGIC := '0';
    signal pynq_filters_gaussianBlur_U0_ap_done : STD_LOGIC;
    signal pynq_filters_gaussianBlur_U0_ap_continue : STD_LOGIC;
    signal pynq_filters_gaussianBlur_U0_ap_idle : STD_LOGIC;
    signal pynq_filters_gaussianBlur_U0_ap_ready : STD_LOGIC;
    signal pynq_filters_gaussianBlur_U0_img_in_data_stream_V_read : STD_LOGIC;
    signal pynq_filters_gaussianBlur_U0_img_out_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal pynq_filters_gaussianBlur_U0_img_out_data_stream_V_write : STD_LOGIC;
    signal pynq_filters_convertToSigned_U0_ap_start : STD_LOGIC := '0';
    signal pynq_filters_convertToSigned_U0_ap_done : STD_LOGIC;
    signal pynq_filters_convertToSigned_U0_ap_continue : STD_LOGIC;
    signal pynq_filters_convertToSigned_U0_ap_idle : STD_LOGIC;
    signal pynq_filters_convertToSigned_U0_ap_ready : STD_LOGIC;
    signal pynq_filters_convertToSigned_U0_img_in0_data_stream_V_read : STD_LOGIC;
    signal pynq_filters_convertToSigned_U0_img_out_data_stream_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal pynq_filters_convertToSigned_U0_img_out_data_stream_V_V_write : STD_LOGIC;
    signal pynq_filters_laplacian_U0_ap_start : STD_LOGIC := '0';
    signal pynq_filters_laplacian_U0_ap_done : STD_LOGIC;
    signal pynq_filters_laplacian_U0_ap_continue : STD_LOGIC;
    signal pynq_filters_laplacian_U0_ap_idle : STD_LOGIC;
    signal pynq_filters_laplacian_U0_ap_ready : STD_LOGIC;
    signal pynq_filters_laplacian_U0_img_in_data_stream_V_V_read : STD_LOGIC;
    signal pynq_filters_laplacian_U0_img_out_data_stream_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal pynq_filters_laplacian_U0_img_out_data_stream_V_V_write : STD_LOGIC;
    signal pynq_filters_Block_proc208_U0_ap_start : STD_LOGIC := '0';
    signal pynq_filters_Block_proc208_U0_ap_done : STD_LOGIC;
    signal pynq_filters_Block_proc208_U0_ap_continue : STD_LOGIC;
    signal pynq_filters_Block_proc208_U0_ap_idle : STD_LOGIC;
    signal pynq_filters_Block_proc208_U0_ap_ready : STD_LOGIC;
    signal pynq_filters_Block_proc208_U0_reduce_read : STD_LOGIC;
    signal pynq_filters_Block_proc208_U0_tmp_1_out_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal pynq_filters_Block_proc208_U0_tmp_1_out_out_write : STD_LOGIC;
    signal pynq_filters_Scale_480_640_9_9_double_1_U0_ap_start : STD_LOGIC := '0';
    signal pynq_filters_Scale_480_640_9_9_double_1_U0_ap_done : STD_LOGIC;
    signal pynq_filters_Scale_480_640_9_9_double_1_U0_ap_continue : STD_LOGIC;
    signal pynq_filters_Scale_480_640_9_9_double_1_U0_ap_idle : STD_LOGIC;
    signal pynq_filters_Scale_480_640_9_9_double_1_U0_ap_ready : STD_LOGIC;
    signal pynq_filters_Scale_480_640_9_9_double_1_U0_src_data_stream_V_V_read : STD_LOGIC;
    signal pynq_filters_Scale_480_640_9_9_double_1_U0_dst_data_stream_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal pynq_filters_Scale_480_640_9_9_double_1_U0_dst_data_stream_V_V_write : STD_LOGIC;
    signal pynq_filters_Scale_480_640_9_9_double_1_U0_scale_read : STD_LOGIC;
    signal pynq_filters_CvtColor_U0_ap_start : STD_LOGIC := '0';
    signal pynq_filters_CvtColor_U0_ap_done : STD_LOGIC;
    signal pynq_filters_CvtColor_U0_ap_continue : STD_LOGIC;
    signal pynq_filters_CvtColor_U0_ap_idle : STD_LOGIC;
    signal pynq_filters_CvtColor_U0_ap_ready : STD_LOGIC;
    signal pynq_filters_CvtColor_U0_p_src_data_stream_V_V_read : STD_LOGIC;
    signal pynq_filters_CvtColor_U0_p_dst_data_stream_0_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal pynq_filters_CvtColor_U0_p_dst_data_stream_0_V_V_write : STD_LOGIC;
    signal pynq_filters_CvtColor_U0_p_dst_data_stream_1_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal pynq_filters_CvtColor_U0_p_dst_data_stream_1_V_V_write : STD_LOGIC;
    signal pynq_filters_CvtColor_U0_p_dst_data_stream_2_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal pynq_filters_CvtColor_U0_p_dst_data_stream_2_V_V_write : STD_LOGIC;
    signal pynq_filters_convertToSigned_1_U0_ap_start : STD_LOGIC := '0';
    signal pynq_filters_convertToSigned_1_U0_ap_done : STD_LOGIC;
    signal pynq_filters_convertToSigned_1_U0_ap_continue : STD_LOGIC;
    signal pynq_filters_convertToSigned_1_U0_ap_idle : STD_LOGIC;
    signal pynq_filters_convertToSigned_1_U0_ap_ready : STD_LOGIC;
    signal pynq_filters_convertToSigned_1_U0_img_in0_data_stream_0_V_read : STD_LOGIC;
    signal pynq_filters_convertToSigned_1_U0_img_in0_data_stream_1_V_read : STD_LOGIC;
    signal pynq_filters_convertToSigned_1_U0_img_in0_data_stream_2_V_read : STD_LOGIC;
    signal pynq_filters_convertToSigned_1_U0_img_out_data_stream_0_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal pynq_filters_convertToSigned_1_U0_img_out_data_stream_0_V_V_write : STD_LOGIC;
    signal pynq_filters_convertToSigned_1_U0_img_out_data_stream_1_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal pynq_filters_convertToSigned_1_U0_img_out_data_stream_1_V_V_write : STD_LOGIC;
    signal pynq_filters_convertToSigned_1_U0_img_out_data_stream_2_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal pynq_filters_convertToSigned_1_U0_img_out_data_stream_2_V_V_write : STD_LOGIC;
    signal pynq_filters_AddWeighted_U0_ap_start : STD_LOGIC := '0';
    signal pynq_filters_AddWeighted_U0_ap_done : STD_LOGIC;
    signal pynq_filters_AddWeighted_U0_ap_continue : STD_LOGIC;
    signal pynq_filters_AddWeighted_U0_ap_idle : STD_LOGIC;
    signal pynq_filters_AddWeighted_U0_ap_ready : STD_LOGIC;
    signal pynq_filters_AddWeighted_U0_src1_data_stream_0_V_V_read : STD_LOGIC;
    signal pynq_filters_AddWeighted_U0_src1_data_stream_1_V_V_read : STD_LOGIC;
    signal pynq_filters_AddWeighted_U0_src1_data_stream_2_V_V_read : STD_LOGIC;
    signal pynq_filters_AddWeighted_U0_src2_data_stream_0_V_V_read : STD_LOGIC;
    signal pynq_filters_AddWeighted_U0_src2_data_stream_1_V_V_read : STD_LOGIC;
    signal pynq_filters_AddWeighted_U0_src2_data_stream_2_V_V_read : STD_LOGIC;
    signal pynq_filters_AddWeighted_U0_dst_data_stream_0_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal pynq_filters_AddWeighted_U0_dst_data_stream_0_V_V_write : STD_LOGIC;
    signal pynq_filters_AddWeighted_U0_dst_data_stream_1_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal pynq_filters_AddWeighted_U0_dst_data_stream_1_V_V_write : STD_LOGIC;
    signal pynq_filters_AddWeighted_U0_dst_data_stream_2_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal pynq_filters_AddWeighted_U0_dst_data_stream_2_V_V_write : STD_LOGIC;
    signal pynq_filters_convertToUnsigned_U0_ap_start : STD_LOGIC := '0';
    signal pynq_filters_convertToUnsigned_U0_ap_done : STD_LOGIC;
    signal pynq_filters_convertToUnsigned_U0_ap_continue : STD_LOGIC;
    signal pynq_filters_convertToUnsigned_U0_ap_idle : STD_LOGIC;
    signal pynq_filters_convertToUnsigned_U0_ap_ready : STD_LOGIC;
    signal pynq_filters_convertToUnsigned_U0_img_in0_data_stream_0_V_V_read : STD_LOGIC;
    signal pynq_filters_convertToUnsigned_U0_img_in0_data_stream_1_V_V_read : STD_LOGIC;
    signal pynq_filters_convertToUnsigned_U0_img_in0_data_stream_2_V_V_read : STD_LOGIC;
    signal pynq_filters_convertToUnsigned_U0_img_out_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal pynq_filters_convertToUnsigned_U0_img_out_data_stream_0_V_write : STD_LOGIC;
    signal pynq_filters_convertToUnsigned_U0_img_out_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal pynq_filters_convertToUnsigned_U0_img_out_data_stream_1_V_write : STD_LOGIC;
    signal pynq_filters_convertToUnsigned_U0_img_out_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal pynq_filters_convertToUnsigned_U0_img_out_data_stream_2_V_write : STD_LOGIC;
    signal pynq_filters_Mat2AXIvideo_U0_ap_start : STD_LOGIC := '0';
    signal pynq_filters_Mat2AXIvideo_U0_ap_done : STD_LOGIC;
    signal pynq_filters_Mat2AXIvideo_U0_ap_continue : STD_LOGIC;
    signal pynq_filters_Mat2AXIvideo_U0_ap_idle : STD_LOGIC;
    signal pynq_filters_Mat2AXIvideo_U0_ap_ready : STD_LOGIC;
    signal pynq_filters_Mat2AXIvideo_U0_img_data_stream_0_V_read : STD_LOGIC;
    signal pynq_filters_Mat2AXIvideo_U0_img_data_stream_1_V_read : STD_LOGIC;
    signal pynq_filters_Mat2AXIvideo_U0_img_data_stream_2_V_read : STD_LOGIC;
    signal pynq_filters_Mat2AXIvideo_U0_out_data_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal pynq_filters_Mat2AXIvideo_U0_out_data_TVALID : STD_LOGIC;
    signal pynq_filters_Mat2AXIvideo_U0_out_data_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal pynq_filters_Mat2AXIvideo_U0_out_data_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal pynq_filters_Mat2AXIvideo_U0_out_data_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal pynq_filters_Mat2AXIvideo_U0_out_data_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal pynq_filters_Mat2AXIvideo_U0_out_data_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal pynq_filters_Mat2AXIvideo_U0_out_data_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_hs_continue : STD_LOGIC;
    signal reduce_channel1_full_n : STD_LOGIC;
    signal reduce_channel1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reduce_channel1_empty_n : STD_LOGIC;
    signal reduce_channel_full_n : STD_LOGIC;
    signal reduce_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reduce_channel_empty_n : STD_LOGIC;
    signal input_image_8U3_rows_V_channel_full_n : STD_LOGIC;
    signal input_image_8U3_rows_V_channel_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal input_image_8U3_rows_V_channel_empty_n : STD_LOGIC;
    signal input_image_8U3_cols_V_channel_full_n : STD_LOGIC;
    signal input_image_8U3_cols_V_channel_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal input_image_8U3_cols_V_channel_empty_n : STD_LOGIC;
    signal input_image_8U3_data_stream_0_full_n : STD_LOGIC;
    signal input_image_8U3_data_stream_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal input_image_8U3_data_stream_0_empty_n : STD_LOGIC;
    signal input_image_8U3_data_stream_1_full_n : STD_LOGIC;
    signal input_image_8U3_data_stream_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal input_image_8U3_data_stream_1_empty_n : STD_LOGIC;
    signal input_image_8U3_data_stream_2_full_n : STD_LOGIC;
    signal input_image_8U3_data_stream_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal input_image_8U3_data_stream_2_empty_n : STD_LOGIC;
    signal input_image_8U3_rows_V_channel_1_full_n : STD_LOGIC;
    signal input_image_8U3_rows_V_channel_1_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal input_image_8U3_rows_V_channel_1_empty_n : STD_LOGIC;
    signal input_image_8U3_cols_V_channel_1_full_n : STD_LOGIC;
    signal input_image_8U3_cols_V_channel_1_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal input_image_8U3_cols_V_channel_1_empty_n : STD_LOGIC;
    signal input_image_8U3_copy1_data_str_full_n : STD_LOGIC;
    signal input_image_8U3_copy1_data_str_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal input_image_8U3_copy1_data_str_empty_n : STD_LOGIC;
    signal input_image_8U3_copy1_data_str_1_full_n : STD_LOGIC;
    signal input_image_8U3_copy1_data_str_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal input_image_8U3_copy1_data_str_1_empty_n : STD_LOGIC;
    signal input_image_8U3_copy1_data_str_2_full_n : STD_LOGIC;
    signal input_image_8U3_copy1_data_str_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal input_image_8U3_copy1_data_str_2_empty_n : STD_LOGIC;
    signal input_image_8U3_copy2_data_str_full_n : STD_LOGIC;
    signal input_image_8U3_copy2_data_str_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal input_image_8U3_copy2_data_str_empty_n : STD_LOGIC;
    signal input_image_8U3_copy2_data_str_1_full_n : STD_LOGIC;
    signal input_image_8U3_copy2_data_str_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal input_image_8U3_copy2_data_str_1_empty_n : STD_LOGIC;
    signal input_image_8U3_copy2_data_str_2_full_n : STD_LOGIC;
    signal input_image_8U3_copy2_data_str_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal input_image_8U3_copy2_data_str_2_empty_n : STD_LOGIC;
    signal input_image_8U1_data_stream_0_full_n : STD_LOGIC;
    signal input_image_8U1_data_stream_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal input_image_8U1_data_stream_0_empty_n : STD_LOGIC;
    signal image_blur_data_stream_0_V_full_n : STD_LOGIC;
    signal image_blur_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal image_blur_data_stream_0_V_empty_n : STD_LOGIC;
    signal image_blur_10S1_data_stream_0_full_n : STD_LOGIC;
    signal image_blur_10S1_data_stream_0_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal image_blur_10S1_data_stream_0_empty_n : STD_LOGIC;
    signal image_laplacian_10S1_data_stre_full_n : STD_LOGIC;
    signal image_laplacian_10S1_data_stre_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal image_laplacian_10S1_data_stre_empty_n : STD_LOGIC;
    signal tmp_1_loc_channel_full_n : STD_LOGIC;
    signal tmp_1_loc_channel_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_loc_channel_empty_n : STD_LOGIC;
    signal image_laplacian_reduced_10S1_d_full_n : STD_LOGIC;
    signal image_laplacian_reduced_10S1_d_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal image_laplacian_reduced_10S1_d_empty_n : STD_LOGIC;
    signal image_laplacian_10S3_data_stre_full_n : STD_LOGIC;
    signal image_laplacian_10S3_data_stre_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal image_laplacian_10S3_data_stre_empty_n : STD_LOGIC;
    signal image_laplacian_10S3_data_stre_1_full_n : STD_LOGIC;
    signal image_laplacian_10S3_data_stre_1_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal image_laplacian_10S3_data_stre_1_empty_n : STD_LOGIC;
    signal image_laplacian_10S3_data_stre_2_full_n : STD_LOGIC;
    signal image_laplacian_10S3_data_stre_2_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal image_laplacian_10S3_data_stre_2_empty_n : STD_LOGIC;
    signal input_image_10S3_data_stream_0_full_n : STD_LOGIC;
    signal input_image_10S3_data_stream_0_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal input_image_10S3_data_stream_0_empty_n : STD_LOGIC;
    signal input_image_10S3_data_stream_1_full_n : STD_LOGIC;
    signal input_image_10S3_data_stream_1_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal input_image_10S3_data_stream_1_empty_n : STD_LOGIC;
    signal input_image_10S3_data_stream_2_full_n : STD_LOGIC;
    signal input_image_10S3_data_stream_2_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal input_image_10S3_data_stream_2_empty_n : STD_LOGIC;
    signal ouput_image_10S3_data_stream_0_full_n : STD_LOGIC;
    signal ouput_image_10S3_data_stream_0_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal ouput_image_10S3_data_stream_0_empty_n : STD_LOGIC;
    signal ouput_image_10S3_data_stream_1_full_n : STD_LOGIC;
    signal ouput_image_10S3_data_stream_1_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal ouput_image_10S3_data_stream_1_empty_n : STD_LOGIC;
    signal ouput_image_10S3_data_stream_2_full_n : STD_LOGIC;
    signal ouput_image_10S3_data_stream_2_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal ouput_image_10S3_data_stream_2_empty_n : STD_LOGIC;
    signal output_image_8U3_data_stream_0_full_n : STD_LOGIC;
    signal output_image_8U3_data_stream_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal output_image_8U3_data_stream_0_empty_n : STD_LOGIC;
    signal output_image_8U3_data_stream_1_full_n : STD_LOGIC;
    signal output_image_8U3_data_stream_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal output_image_8U3_data_stream_1_empty_n : STD_LOGIC;
    signal output_image_8U3_data_stream_2_full_n : STD_LOGIC;
    signal output_image_8U3_data_stream_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal output_image_8U3_data_stream_2_empty_n : STD_LOGIC;

    component pynq_filters_pynq_filters_entry3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        reduce : IN STD_LOGIC_VECTOR (31 downto 0);
        reduce_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        reduce_out_full_n : IN STD_LOGIC;
        reduce_out_write : OUT STD_LOGIC );
    end component;


    component pynq_filters_pynq_filters_entry211 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        reduce_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        reduce_empty_n : IN STD_LOGIC;
        reduce_read : OUT STD_LOGIC;
        reduce_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        reduce_out_full_n : IN STD_LOGIC;
        reduce_out_write : OUT STD_LOGIC );
    end component;


    component pynq_filters_Block_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_image_8U3_rows_V_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_image_8U3_rows_V_out_full_n : IN STD_LOGIC;
        input_image_8U3_rows_V_out_write : OUT STD_LOGIC;
        input_image_8U3_cols_V_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_image_8U3_cols_V_out_full_n : IN STD_LOGIC;
        input_image_8U3_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component pynq_filters_AXIvideo2Mat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_data_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        in_data_TVALID : IN STD_LOGIC;
        in_data_TREADY : OUT STD_LOGIC;
        in_data_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        in_data_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        in_data_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        in_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        in_data_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        in_data_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_rows_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        img_rows_V_empty_n : IN STD_LOGIC;
        img_rows_V_read : OUT STD_LOGIC;
        img_cols_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        img_cols_V_empty_n : IN STD_LOGIC;
        img_cols_V_read : OUT STD_LOGIC;
        img_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_0_V_full_n : IN STD_LOGIC;
        img_data_stream_0_V_write : OUT STD_LOGIC;
        img_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_1_V_full_n : IN STD_LOGIC;
        img_data_stream_1_V_write : OUT STD_LOGIC;
        img_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_2_V_full_n : IN STD_LOGIC;
        img_data_stream_2_V_write : OUT STD_LOGIC;
        img_rows_V_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        img_rows_V_out_full_n : IN STD_LOGIC;
        img_rows_V_out_write : OUT STD_LOGIC;
        img_cols_V_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        img_cols_V_out_full_n : IN STD_LOGIC;
        img_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component pynq_filters_Duplicate IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_rows_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        src_rows_V_empty_n : IN STD_LOGIC;
        src_rows_V_read : OUT STD_LOGIC;
        src_cols_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        src_cols_V_empty_n : IN STD_LOGIC;
        src_cols_V_read : OUT STD_LOGIC;
        src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_0_V_empty_n : IN STD_LOGIC;
        src_data_stream_0_V_read : OUT STD_LOGIC;
        src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_1_V_empty_n : IN STD_LOGIC;
        src_data_stream_1_V_read : OUT STD_LOGIC;
        src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_2_V_empty_n : IN STD_LOGIC;
        src_data_stream_2_V_read : OUT STD_LOGIC;
        dst1_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst1_data_stream_0_V_full_n : IN STD_LOGIC;
        dst1_data_stream_0_V_write : OUT STD_LOGIC;
        dst1_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst1_data_stream_1_V_full_n : IN STD_LOGIC;
        dst1_data_stream_1_V_write : OUT STD_LOGIC;
        dst1_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst1_data_stream_2_V_full_n : IN STD_LOGIC;
        dst1_data_stream_2_V_write : OUT STD_LOGIC;
        dst2_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst2_data_stream_0_V_full_n : IN STD_LOGIC;
        dst2_data_stream_0_V_write : OUT STD_LOGIC;
        dst2_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst2_data_stream_1_V_full_n : IN STD_LOGIC;
        dst2_data_stream_1_V_write : OUT STD_LOGIC;
        dst2_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst2_data_stream_2_V_full_n : IN STD_LOGIC;
        dst2_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component pynq_filters_CvtColor_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_0_V_read : OUT STD_LOGIC;
        p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_1_V_read : OUT STD_LOGIC;
        p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_2_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component pynq_filters_gaussianBlur IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_in_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_in_data_stream_V_empty_n : IN STD_LOGIC;
        img_in_data_stream_V_read : OUT STD_LOGIC;
        img_out_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_out_data_stream_V_full_n : IN STD_LOGIC;
        img_out_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component pynq_filters_convertToSigned IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_in0_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_in0_data_stream_V_empty_n : IN STD_LOGIC;
        img_in0_data_stream_V_read : OUT STD_LOGIC;
        img_out_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        img_out_data_stream_V_V_full_n : IN STD_LOGIC;
        img_out_data_stream_V_V_write : OUT STD_LOGIC );
    end component;


    component pynq_filters_laplacian IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_in_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        img_in_data_stream_V_V_empty_n : IN STD_LOGIC;
        img_in_data_stream_V_V_read : OUT STD_LOGIC;
        img_out_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        img_out_data_stream_V_V_full_n : IN STD_LOGIC;
        img_out_data_stream_V_V_write : OUT STD_LOGIC );
    end component;


    component pynq_filters_Block_proc208 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        reduce_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        reduce_empty_n : IN STD_LOGIC;
        reduce_read : OUT STD_LOGIC;
        tmp_1_out_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        tmp_1_out_out_full_n : IN STD_LOGIC;
        tmp_1_out_out_write : OUT STD_LOGIC );
    end component;


    component pynq_filters_Scale_480_640_9_9_double_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        src_data_stream_V_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_V_read : OUT STD_LOGIC;
        dst_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        dst_data_stream_V_V_full_n : IN STD_LOGIC;
        dst_data_stream_V_V_write : OUT STD_LOGIC;
        scale_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        scale_empty_n : IN STD_LOGIC;
        scale_read : OUT STD_LOGIC );
    end component;


    component pynq_filters_CvtColor IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        p_src_data_stream_V_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_V_V_read : OUT STD_LOGIC;
        p_dst_data_stream_0_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        p_dst_data_stream_0_V_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_0_V_V_write : OUT STD_LOGIC;
        p_dst_data_stream_1_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        p_dst_data_stream_1_V_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_1_V_V_write : OUT STD_LOGIC;
        p_dst_data_stream_2_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        p_dst_data_stream_2_V_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_2_V_V_write : OUT STD_LOGIC );
    end component;


    component pynq_filters_convertToSigned_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_in0_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_in0_data_stream_0_V_empty_n : IN STD_LOGIC;
        img_in0_data_stream_0_V_read : OUT STD_LOGIC;
        img_in0_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_in0_data_stream_1_V_empty_n : IN STD_LOGIC;
        img_in0_data_stream_1_V_read : OUT STD_LOGIC;
        img_in0_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_in0_data_stream_2_V_empty_n : IN STD_LOGIC;
        img_in0_data_stream_2_V_read : OUT STD_LOGIC;
        img_out_data_stream_0_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        img_out_data_stream_0_V_V_full_n : IN STD_LOGIC;
        img_out_data_stream_0_V_V_write : OUT STD_LOGIC;
        img_out_data_stream_1_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        img_out_data_stream_1_V_V_full_n : IN STD_LOGIC;
        img_out_data_stream_1_V_V_write : OUT STD_LOGIC;
        img_out_data_stream_2_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        img_out_data_stream_2_V_V_full_n : IN STD_LOGIC;
        img_out_data_stream_2_V_V_write : OUT STD_LOGIC );
    end component;


    component pynq_filters_AddWeighted IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src1_data_stream_0_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        src1_data_stream_0_V_V_empty_n : IN STD_LOGIC;
        src1_data_stream_0_V_V_read : OUT STD_LOGIC;
        src1_data_stream_1_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        src1_data_stream_1_V_V_empty_n : IN STD_LOGIC;
        src1_data_stream_1_V_V_read : OUT STD_LOGIC;
        src1_data_stream_2_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        src1_data_stream_2_V_V_empty_n : IN STD_LOGIC;
        src1_data_stream_2_V_V_read : OUT STD_LOGIC;
        src2_data_stream_0_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        src2_data_stream_0_V_V_empty_n : IN STD_LOGIC;
        src2_data_stream_0_V_V_read : OUT STD_LOGIC;
        src2_data_stream_1_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        src2_data_stream_1_V_V_empty_n : IN STD_LOGIC;
        src2_data_stream_1_V_V_read : OUT STD_LOGIC;
        src2_data_stream_2_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        src2_data_stream_2_V_V_empty_n : IN STD_LOGIC;
        src2_data_stream_2_V_V_read : OUT STD_LOGIC;
        dst_data_stream_0_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        dst_data_stream_0_V_V_full_n : IN STD_LOGIC;
        dst_data_stream_0_V_V_write : OUT STD_LOGIC;
        dst_data_stream_1_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        dst_data_stream_1_V_V_full_n : IN STD_LOGIC;
        dst_data_stream_1_V_V_write : OUT STD_LOGIC;
        dst_data_stream_2_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        dst_data_stream_2_V_V_full_n : IN STD_LOGIC;
        dst_data_stream_2_V_V_write : OUT STD_LOGIC );
    end component;


    component pynq_filters_convertToUnsigned IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_in0_data_stream_0_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        img_in0_data_stream_0_V_V_empty_n : IN STD_LOGIC;
        img_in0_data_stream_0_V_V_read : OUT STD_LOGIC;
        img_in0_data_stream_1_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        img_in0_data_stream_1_V_V_empty_n : IN STD_LOGIC;
        img_in0_data_stream_1_V_V_read : OUT STD_LOGIC;
        img_in0_data_stream_2_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        img_in0_data_stream_2_V_V_empty_n : IN STD_LOGIC;
        img_in0_data_stream_2_V_V_read : OUT STD_LOGIC;
        img_out_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_out_data_stream_0_V_full_n : IN STD_LOGIC;
        img_out_data_stream_0_V_write : OUT STD_LOGIC;
        img_out_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_out_data_stream_1_V_full_n : IN STD_LOGIC;
        img_out_data_stream_1_V_write : OUT STD_LOGIC;
        img_out_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_out_data_stream_2_V_full_n : IN STD_LOGIC;
        img_out_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component pynq_filters_Mat2AXIvideo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_0_V_empty_n : IN STD_LOGIC;
        img_data_stream_0_V_read : OUT STD_LOGIC;
        img_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_1_V_empty_n : IN STD_LOGIC;
        img_data_stream_1_V_read : OUT STD_LOGIC;
        img_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_2_V_empty_n : IN STD_LOGIC;
        img_data_stream_2_V_read : OUT STD_LOGIC;
        out_data_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        out_data_TVALID : OUT STD_LOGIC;
        out_data_TREADY : IN STD_LOGIC;
        out_data_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
        out_data_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
        out_data_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_data_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_data_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component FIFO_pynq_filters_reduce_channel1 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_reduce_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_input_image_8U3_rows_V_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_input_image_8U3_cols_V_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (10 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_input_image_8U3_data_stream_0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_input_image_8U3_data_stream_1 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_input_image_8U3_data_stream_2 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_input_image_8U3_rows_V_channel_1 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_input_image_8U3_cols_V_channel_1 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (10 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_input_image_8U3_copy1_data_str IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_input_image_8U3_copy1_data_str_1 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_input_image_8U3_copy1_data_str_2 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_input_image_8U3_copy2_data_str IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_input_image_8U3_copy2_data_str_1 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_input_image_8U3_copy2_data_str_2 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_input_image_8U1_data_stream_0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_image_blur_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_image_blur_10S1_data_stream_0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_image_laplacian_10S1_data_stre IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_tmp_1_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_image_laplacian_reduced_10S1_d IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_image_laplacian_10S3_data_stre IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_image_laplacian_10S3_data_stre_1 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_image_laplacian_10S3_data_stre_2 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_input_image_10S3_data_stream_0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_input_image_10S3_data_stream_1 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_input_image_10S3_data_stream_2 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_ouput_image_10S3_data_stream_0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_ouput_image_10S3_data_stream_1 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_ouput_image_10S3_data_stream_2 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_output_image_8U3_data_stream_0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_output_image_8U3_data_stream_1 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_pynq_filters_output_image_8U3_data_stream_2 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component pynq_filters_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        reduce : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    pynq_filters_control_s_axi_U : component pynq_filters_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        reduce => reduce);

    pynq_filters_pynq_filters_entry3_U0 : component pynq_filters_pynq_filters_entry3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pynq_filters_pynq_filters_entry3_U0_ap_start,
        ap_done => pynq_filters_pynq_filters_entry3_U0_ap_done,
        ap_continue => pynq_filters_pynq_filters_entry3_U0_ap_continue,
        ap_idle => pynq_filters_pynq_filters_entry3_U0_ap_idle,
        ap_ready => pynq_filters_pynq_filters_entry3_U0_ap_ready,
        reduce => reduce,
        reduce_out_din => pynq_filters_pynq_filters_entry3_U0_reduce_out_din,
        reduce_out_full_n => reduce_channel1_full_n,
        reduce_out_write => pynq_filters_pynq_filters_entry3_U0_reduce_out_write);

    pynq_filters_pynq_filters_entry211_U0 : component pynq_filters_pynq_filters_entry211
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pynq_filters_pynq_filters_entry211_U0_ap_start,
        ap_done => pynq_filters_pynq_filters_entry211_U0_ap_done,
        ap_continue => pynq_filters_pynq_filters_entry211_U0_ap_continue,
        ap_idle => pynq_filters_pynq_filters_entry211_U0_ap_idle,
        ap_ready => pynq_filters_pynq_filters_entry211_U0_ap_ready,
        reduce_dout => reduce_channel1_dout,
        reduce_empty_n => reduce_channel1_empty_n,
        reduce_read => pynq_filters_pynq_filters_entry211_U0_reduce_read,
        reduce_out_din => pynq_filters_pynq_filters_entry211_U0_reduce_out_din,
        reduce_out_full_n => reduce_channel_full_n,
        reduce_out_write => pynq_filters_pynq_filters_entry211_U0_reduce_out_write);

    pynq_filters_Block_proc_U0 : component pynq_filters_Block_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pynq_filters_Block_proc_U0_ap_start,
        ap_done => pynq_filters_Block_proc_U0_ap_done,
        ap_continue => pynq_filters_Block_proc_U0_ap_continue,
        ap_idle => pynq_filters_Block_proc_U0_ap_idle,
        ap_ready => pynq_filters_Block_proc_U0_ap_ready,
        input_image_8U3_rows_V_out_din => pynq_filters_Block_proc_U0_input_image_8U3_rows_V_out_din,
        input_image_8U3_rows_V_out_full_n => input_image_8U3_rows_V_channel_full_n,
        input_image_8U3_rows_V_out_write => pynq_filters_Block_proc_U0_input_image_8U3_rows_V_out_write,
        input_image_8U3_cols_V_out_din => pynq_filters_Block_proc_U0_input_image_8U3_cols_V_out_din,
        input_image_8U3_cols_V_out_full_n => input_image_8U3_cols_V_channel_full_n,
        input_image_8U3_cols_V_out_write => pynq_filters_Block_proc_U0_input_image_8U3_cols_V_out_write);

    pynq_filters_AXIvideo2Mat_U0 : component pynq_filters_AXIvideo2Mat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pynq_filters_AXIvideo2Mat_U0_ap_start,
        ap_done => pynq_filters_AXIvideo2Mat_U0_ap_done,
        ap_continue => pynq_filters_AXIvideo2Mat_U0_ap_continue,
        ap_idle => pynq_filters_AXIvideo2Mat_U0_ap_idle,
        ap_ready => pynq_filters_AXIvideo2Mat_U0_ap_ready,
        in_data_TDATA => in_data_TDATA,
        in_data_TVALID => in_data_TVALID,
        in_data_TREADY => pynq_filters_AXIvideo2Mat_U0_in_data_TREADY,
        in_data_TKEEP => in_data_TKEEP,
        in_data_TSTRB => in_data_TSTRB,
        in_data_TUSER => in_data_TUSER,
        in_data_TLAST => in_data_TLAST,
        in_data_TID => in_data_TID,
        in_data_TDEST => in_data_TDEST,
        img_rows_V_dout => input_image_8U3_rows_V_channel_dout,
        img_rows_V_empty_n => input_image_8U3_rows_V_channel_empty_n,
        img_rows_V_read => pynq_filters_AXIvideo2Mat_U0_img_rows_V_read,
        img_cols_V_dout => input_image_8U3_cols_V_channel_dout,
        img_cols_V_empty_n => input_image_8U3_cols_V_channel_empty_n,
        img_cols_V_read => pynq_filters_AXIvideo2Mat_U0_img_cols_V_read,
        img_data_stream_0_V_din => pynq_filters_AXIvideo2Mat_U0_img_data_stream_0_V_din,
        img_data_stream_0_V_full_n => input_image_8U3_data_stream_0_full_n,
        img_data_stream_0_V_write => pynq_filters_AXIvideo2Mat_U0_img_data_stream_0_V_write,
        img_data_stream_1_V_din => pynq_filters_AXIvideo2Mat_U0_img_data_stream_1_V_din,
        img_data_stream_1_V_full_n => input_image_8U3_data_stream_1_full_n,
        img_data_stream_1_V_write => pynq_filters_AXIvideo2Mat_U0_img_data_stream_1_V_write,
        img_data_stream_2_V_din => pynq_filters_AXIvideo2Mat_U0_img_data_stream_2_V_din,
        img_data_stream_2_V_full_n => input_image_8U3_data_stream_2_full_n,
        img_data_stream_2_V_write => pynq_filters_AXIvideo2Mat_U0_img_data_stream_2_V_write,
        img_rows_V_out_din => pynq_filters_AXIvideo2Mat_U0_img_rows_V_out_din,
        img_rows_V_out_full_n => input_image_8U3_rows_V_channel_1_full_n,
        img_rows_V_out_write => pynq_filters_AXIvideo2Mat_U0_img_rows_V_out_write,
        img_cols_V_out_din => pynq_filters_AXIvideo2Mat_U0_img_cols_V_out_din,
        img_cols_V_out_full_n => input_image_8U3_cols_V_channel_1_full_n,
        img_cols_V_out_write => pynq_filters_AXIvideo2Mat_U0_img_cols_V_out_write);

    pynq_filters_Duplicate_U0 : component pynq_filters_Duplicate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pynq_filters_Duplicate_U0_ap_start,
        ap_done => pynq_filters_Duplicate_U0_ap_done,
        ap_continue => pynq_filters_Duplicate_U0_ap_continue,
        ap_idle => pynq_filters_Duplicate_U0_ap_idle,
        ap_ready => pynq_filters_Duplicate_U0_ap_ready,
        src_rows_V_dout => input_image_8U3_rows_V_channel_1_dout,
        src_rows_V_empty_n => input_image_8U3_rows_V_channel_1_empty_n,
        src_rows_V_read => pynq_filters_Duplicate_U0_src_rows_V_read,
        src_cols_V_dout => input_image_8U3_cols_V_channel_1_dout,
        src_cols_V_empty_n => input_image_8U3_cols_V_channel_1_empty_n,
        src_cols_V_read => pynq_filters_Duplicate_U0_src_cols_V_read,
        src_data_stream_0_V_dout => input_image_8U3_data_stream_0_dout,
        src_data_stream_0_V_empty_n => input_image_8U3_data_stream_0_empty_n,
        src_data_stream_0_V_read => pynq_filters_Duplicate_U0_src_data_stream_0_V_read,
        src_data_stream_1_V_dout => input_image_8U3_data_stream_1_dout,
        src_data_stream_1_V_empty_n => input_image_8U3_data_stream_1_empty_n,
        src_data_stream_1_V_read => pynq_filters_Duplicate_U0_src_data_stream_1_V_read,
        src_data_stream_2_V_dout => input_image_8U3_data_stream_2_dout,
        src_data_stream_2_V_empty_n => input_image_8U3_data_stream_2_empty_n,
        src_data_stream_2_V_read => pynq_filters_Duplicate_U0_src_data_stream_2_V_read,
        dst1_data_stream_0_V_din => pynq_filters_Duplicate_U0_dst1_data_stream_0_V_din,
        dst1_data_stream_0_V_full_n => input_image_8U3_copy1_data_str_full_n,
        dst1_data_stream_0_V_write => pynq_filters_Duplicate_U0_dst1_data_stream_0_V_write,
        dst1_data_stream_1_V_din => pynq_filters_Duplicate_U0_dst1_data_stream_1_V_din,
        dst1_data_stream_1_V_full_n => input_image_8U3_copy1_data_str_1_full_n,
        dst1_data_stream_1_V_write => pynq_filters_Duplicate_U0_dst1_data_stream_1_V_write,
        dst1_data_stream_2_V_din => pynq_filters_Duplicate_U0_dst1_data_stream_2_V_din,
        dst1_data_stream_2_V_full_n => input_image_8U3_copy1_data_str_2_full_n,
        dst1_data_stream_2_V_write => pynq_filters_Duplicate_U0_dst1_data_stream_2_V_write,
        dst2_data_stream_0_V_din => pynq_filters_Duplicate_U0_dst2_data_stream_0_V_din,
        dst2_data_stream_0_V_full_n => input_image_8U3_copy2_data_str_full_n,
        dst2_data_stream_0_V_write => pynq_filters_Duplicate_U0_dst2_data_stream_0_V_write,
        dst2_data_stream_1_V_din => pynq_filters_Duplicate_U0_dst2_data_stream_1_V_din,
        dst2_data_stream_1_V_full_n => input_image_8U3_copy2_data_str_1_full_n,
        dst2_data_stream_1_V_write => pynq_filters_Duplicate_U0_dst2_data_stream_1_V_write,
        dst2_data_stream_2_V_din => pynq_filters_Duplicate_U0_dst2_data_stream_2_V_din,
        dst2_data_stream_2_V_full_n => input_image_8U3_copy2_data_str_2_full_n,
        dst2_data_stream_2_V_write => pynq_filters_Duplicate_U0_dst2_data_stream_2_V_write);

    pynq_filters_CvtColor_1_U0 : component pynq_filters_CvtColor_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pynq_filters_CvtColor_1_U0_ap_start,
        ap_done => pynq_filters_CvtColor_1_U0_ap_done,
        ap_continue => pynq_filters_CvtColor_1_U0_ap_continue,
        ap_idle => pynq_filters_CvtColor_1_U0_ap_idle,
        ap_ready => pynq_filters_CvtColor_1_U0_ap_ready,
        p_src_data_stream_0_V_dout => input_image_8U3_copy1_data_str_dout,
        p_src_data_stream_0_V_empty_n => input_image_8U3_copy1_data_str_empty_n,
        p_src_data_stream_0_V_read => pynq_filters_CvtColor_1_U0_p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout => input_image_8U3_copy1_data_str_1_dout,
        p_src_data_stream_1_V_empty_n => input_image_8U3_copy1_data_str_1_empty_n,
        p_src_data_stream_1_V_read => pynq_filters_CvtColor_1_U0_p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout => input_image_8U3_copy1_data_str_2_dout,
        p_src_data_stream_2_V_empty_n => input_image_8U3_copy1_data_str_2_empty_n,
        p_src_data_stream_2_V_read => pynq_filters_CvtColor_1_U0_p_src_data_stream_2_V_read,
        p_dst_data_stream_V_din => pynq_filters_CvtColor_1_U0_p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n => input_image_8U1_data_stream_0_full_n,
        p_dst_data_stream_V_write => pynq_filters_CvtColor_1_U0_p_dst_data_stream_V_write);

    pynq_filters_gaussianBlur_U0 : component pynq_filters_gaussianBlur
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pynq_filters_gaussianBlur_U0_ap_start,
        ap_done => pynq_filters_gaussianBlur_U0_ap_done,
        ap_continue => pynq_filters_gaussianBlur_U0_ap_continue,
        ap_idle => pynq_filters_gaussianBlur_U0_ap_idle,
        ap_ready => pynq_filters_gaussianBlur_U0_ap_ready,
        img_in_data_stream_V_dout => input_image_8U1_data_stream_0_dout,
        img_in_data_stream_V_empty_n => input_image_8U1_data_stream_0_empty_n,
        img_in_data_stream_V_read => pynq_filters_gaussianBlur_U0_img_in_data_stream_V_read,
        img_out_data_stream_V_din => pynq_filters_gaussianBlur_U0_img_out_data_stream_V_din,
        img_out_data_stream_V_full_n => image_blur_data_stream_0_V_full_n,
        img_out_data_stream_V_write => pynq_filters_gaussianBlur_U0_img_out_data_stream_V_write);

    pynq_filters_convertToSigned_U0 : component pynq_filters_convertToSigned
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pynq_filters_convertToSigned_U0_ap_start,
        ap_done => pynq_filters_convertToSigned_U0_ap_done,
        ap_continue => pynq_filters_convertToSigned_U0_ap_continue,
        ap_idle => pynq_filters_convertToSigned_U0_ap_idle,
        ap_ready => pynq_filters_convertToSigned_U0_ap_ready,
        img_in0_data_stream_V_dout => image_blur_data_stream_0_V_dout,
        img_in0_data_stream_V_empty_n => image_blur_data_stream_0_V_empty_n,
        img_in0_data_stream_V_read => pynq_filters_convertToSigned_U0_img_in0_data_stream_V_read,
        img_out_data_stream_V_V_din => pynq_filters_convertToSigned_U0_img_out_data_stream_V_V_din,
        img_out_data_stream_V_V_full_n => image_blur_10S1_data_stream_0_full_n,
        img_out_data_stream_V_V_write => pynq_filters_convertToSigned_U0_img_out_data_stream_V_V_write);

    pynq_filters_laplacian_U0 : component pynq_filters_laplacian
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pynq_filters_laplacian_U0_ap_start,
        ap_done => pynq_filters_laplacian_U0_ap_done,
        ap_continue => pynq_filters_laplacian_U0_ap_continue,
        ap_idle => pynq_filters_laplacian_U0_ap_idle,
        ap_ready => pynq_filters_laplacian_U0_ap_ready,
        img_in_data_stream_V_V_dout => image_blur_10S1_data_stream_0_dout,
        img_in_data_stream_V_V_empty_n => image_blur_10S1_data_stream_0_empty_n,
        img_in_data_stream_V_V_read => pynq_filters_laplacian_U0_img_in_data_stream_V_V_read,
        img_out_data_stream_V_V_din => pynq_filters_laplacian_U0_img_out_data_stream_V_V_din,
        img_out_data_stream_V_V_full_n => image_laplacian_10S1_data_stre_full_n,
        img_out_data_stream_V_V_write => pynq_filters_laplacian_U0_img_out_data_stream_V_V_write);

    pynq_filters_Block_proc208_U0 : component pynq_filters_Block_proc208
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pynq_filters_Block_proc208_U0_ap_start,
        ap_done => pynq_filters_Block_proc208_U0_ap_done,
        ap_continue => pynq_filters_Block_proc208_U0_ap_continue,
        ap_idle => pynq_filters_Block_proc208_U0_ap_idle,
        ap_ready => pynq_filters_Block_proc208_U0_ap_ready,
        reduce_dout => reduce_channel_dout,
        reduce_empty_n => reduce_channel_empty_n,
        reduce_read => pynq_filters_Block_proc208_U0_reduce_read,
        tmp_1_out_out_din => pynq_filters_Block_proc208_U0_tmp_1_out_out_din,
        tmp_1_out_out_full_n => tmp_1_loc_channel_full_n,
        tmp_1_out_out_write => pynq_filters_Block_proc208_U0_tmp_1_out_out_write);

    pynq_filters_Scale_480_640_9_9_double_1_U0 : component pynq_filters_Scale_480_640_9_9_double_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pynq_filters_Scale_480_640_9_9_double_1_U0_ap_start,
        ap_done => pynq_filters_Scale_480_640_9_9_double_1_U0_ap_done,
        ap_continue => pynq_filters_Scale_480_640_9_9_double_1_U0_ap_continue,
        ap_idle => pynq_filters_Scale_480_640_9_9_double_1_U0_ap_idle,
        ap_ready => pynq_filters_Scale_480_640_9_9_double_1_U0_ap_ready,
        src_data_stream_V_V_dout => image_laplacian_10S1_data_stre_dout,
        src_data_stream_V_V_empty_n => image_laplacian_10S1_data_stre_empty_n,
        src_data_stream_V_V_read => pynq_filters_Scale_480_640_9_9_double_1_U0_src_data_stream_V_V_read,
        dst_data_stream_V_V_din => pynq_filters_Scale_480_640_9_9_double_1_U0_dst_data_stream_V_V_din,
        dst_data_stream_V_V_full_n => image_laplacian_reduced_10S1_d_full_n,
        dst_data_stream_V_V_write => pynq_filters_Scale_480_640_9_9_double_1_U0_dst_data_stream_V_V_write,
        scale_dout => tmp_1_loc_channel_dout,
        scale_empty_n => tmp_1_loc_channel_empty_n,
        scale_read => pynq_filters_Scale_480_640_9_9_double_1_U0_scale_read);

    pynq_filters_CvtColor_U0 : component pynq_filters_CvtColor
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pynq_filters_CvtColor_U0_ap_start,
        ap_done => pynq_filters_CvtColor_U0_ap_done,
        ap_continue => pynq_filters_CvtColor_U0_ap_continue,
        ap_idle => pynq_filters_CvtColor_U0_ap_idle,
        ap_ready => pynq_filters_CvtColor_U0_ap_ready,
        p_src_data_stream_V_V_dout => image_laplacian_reduced_10S1_d_dout,
        p_src_data_stream_V_V_empty_n => image_laplacian_reduced_10S1_d_empty_n,
        p_src_data_stream_V_V_read => pynq_filters_CvtColor_U0_p_src_data_stream_V_V_read,
        p_dst_data_stream_0_V_V_din => pynq_filters_CvtColor_U0_p_dst_data_stream_0_V_V_din,
        p_dst_data_stream_0_V_V_full_n => image_laplacian_10S3_data_stre_full_n,
        p_dst_data_stream_0_V_V_write => pynq_filters_CvtColor_U0_p_dst_data_stream_0_V_V_write,
        p_dst_data_stream_1_V_V_din => pynq_filters_CvtColor_U0_p_dst_data_stream_1_V_V_din,
        p_dst_data_stream_1_V_V_full_n => image_laplacian_10S3_data_stre_1_full_n,
        p_dst_data_stream_1_V_V_write => pynq_filters_CvtColor_U0_p_dst_data_stream_1_V_V_write,
        p_dst_data_stream_2_V_V_din => pynq_filters_CvtColor_U0_p_dst_data_stream_2_V_V_din,
        p_dst_data_stream_2_V_V_full_n => image_laplacian_10S3_data_stre_2_full_n,
        p_dst_data_stream_2_V_V_write => pynq_filters_CvtColor_U0_p_dst_data_stream_2_V_V_write);

    pynq_filters_convertToSigned_1_U0 : component pynq_filters_convertToSigned_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pynq_filters_convertToSigned_1_U0_ap_start,
        ap_done => pynq_filters_convertToSigned_1_U0_ap_done,
        ap_continue => pynq_filters_convertToSigned_1_U0_ap_continue,
        ap_idle => pynq_filters_convertToSigned_1_U0_ap_idle,
        ap_ready => pynq_filters_convertToSigned_1_U0_ap_ready,
        img_in0_data_stream_0_V_dout => input_image_8U3_copy2_data_str_dout,
        img_in0_data_stream_0_V_empty_n => input_image_8U3_copy2_data_str_empty_n,
        img_in0_data_stream_0_V_read => pynq_filters_convertToSigned_1_U0_img_in0_data_stream_0_V_read,
        img_in0_data_stream_1_V_dout => input_image_8U3_copy2_data_str_1_dout,
        img_in0_data_stream_1_V_empty_n => input_image_8U3_copy2_data_str_1_empty_n,
        img_in0_data_stream_1_V_read => pynq_filters_convertToSigned_1_U0_img_in0_data_stream_1_V_read,
        img_in0_data_stream_2_V_dout => input_image_8U3_copy2_data_str_2_dout,
        img_in0_data_stream_2_V_empty_n => input_image_8U3_copy2_data_str_2_empty_n,
        img_in0_data_stream_2_V_read => pynq_filters_convertToSigned_1_U0_img_in0_data_stream_2_V_read,
        img_out_data_stream_0_V_V_din => pynq_filters_convertToSigned_1_U0_img_out_data_stream_0_V_V_din,
        img_out_data_stream_0_V_V_full_n => input_image_10S3_data_stream_0_full_n,
        img_out_data_stream_0_V_V_write => pynq_filters_convertToSigned_1_U0_img_out_data_stream_0_V_V_write,
        img_out_data_stream_1_V_V_din => pynq_filters_convertToSigned_1_U0_img_out_data_stream_1_V_V_din,
        img_out_data_stream_1_V_V_full_n => input_image_10S3_data_stream_1_full_n,
        img_out_data_stream_1_V_V_write => pynq_filters_convertToSigned_1_U0_img_out_data_stream_1_V_V_write,
        img_out_data_stream_2_V_V_din => pynq_filters_convertToSigned_1_U0_img_out_data_stream_2_V_V_din,
        img_out_data_stream_2_V_V_full_n => input_image_10S3_data_stream_2_full_n,
        img_out_data_stream_2_V_V_write => pynq_filters_convertToSigned_1_U0_img_out_data_stream_2_V_V_write);

    pynq_filters_AddWeighted_U0 : component pynq_filters_AddWeighted
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pynq_filters_AddWeighted_U0_ap_start,
        ap_done => pynq_filters_AddWeighted_U0_ap_done,
        ap_continue => pynq_filters_AddWeighted_U0_ap_continue,
        ap_idle => pynq_filters_AddWeighted_U0_ap_idle,
        ap_ready => pynq_filters_AddWeighted_U0_ap_ready,
        src1_data_stream_0_V_V_dout => image_laplacian_10S3_data_stre_dout,
        src1_data_stream_0_V_V_empty_n => image_laplacian_10S3_data_stre_empty_n,
        src1_data_stream_0_V_V_read => pynq_filters_AddWeighted_U0_src1_data_stream_0_V_V_read,
        src1_data_stream_1_V_V_dout => image_laplacian_10S3_data_stre_1_dout,
        src1_data_stream_1_V_V_empty_n => image_laplacian_10S3_data_stre_1_empty_n,
        src1_data_stream_1_V_V_read => pynq_filters_AddWeighted_U0_src1_data_stream_1_V_V_read,
        src1_data_stream_2_V_V_dout => image_laplacian_10S3_data_stre_2_dout,
        src1_data_stream_2_V_V_empty_n => image_laplacian_10S3_data_stre_2_empty_n,
        src1_data_stream_2_V_V_read => pynq_filters_AddWeighted_U0_src1_data_stream_2_V_V_read,
        src2_data_stream_0_V_V_dout => input_image_10S3_data_stream_0_dout,
        src2_data_stream_0_V_V_empty_n => input_image_10S3_data_stream_0_empty_n,
        src2_data_stream_0_V_V_read => pynq_filters_AddWeighted_U0_src2_data_stream_0_V_V_read,
        src2_data_stream_1_V_V_dout => input_image_10S3_data_stream_1_dout,
        src2_data_stream_1_V_V_empty_n => input_image_10S3_data_stream_1_empty_n,
        src2_data_stream_1_V_V_read => pynq_filters_AddWeighted_U0_src2_data_stream_1_V_V_read,
        src2_data_stream_2_V_V_dout => input_image_10S3_data_stream_2_dout,
        src2_data_stream_2_V_V_empty_n => input_image_10S3_data_stream_2_empty_n,
        src2_data_stream_2_V_V_read => pynq_filters_AddWeighted_U0_src2_data_stream_2_V_V_read,
        dst_data_stream_0_V_V_din => pynq_filters_AddWeighted_U0_dst_data_stream_0_V_V_din,
        dst_data_stream_0_V_V_full_n => ouput_image_10S3_data_stream_0_full_n,
        dst_data_stream_0_V_V_write => pynq_filters_AddWeighted_U0_dst_data_stream_0_V_V_write,
        dst_data_stream_1_V_V_din => pynq_filters_AddWeighted_U0_dst_data_stream_1_V_V_din,
        dst_data_stream_1_V_V_full_n => ouput_image_10S3_data_stream_1_full_n,
        dst_data_stream_1_V_V_write => pynq_filters_AddWeighted_U0_dst_data_stream_1_V_V_write,
        dst_data_stream_2_V_V_din => pynq_filters_AddWeighted_U0_dst_data_stream_2_V_V_din,
        dst_data_stream_2_V_V_full_n => ouput_image_10S3_data_stream_2_full_n,
        dst_data_stream_2_V_V_write => pynq_filters_AddWeighted_U0_dst_data_stream_2_V_V_write);

    pynq_filters_convertToUnsigned_U0 : component pynq_filters_convertToUnsigned
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pynq_filters_convertToUnsigned_U0_ap_start,
        ap_done => pynq_filters_convertToUnsigned_U0_ap_done,
        ap_continue => pynq_filters_convertToUnsigned_U0_ap_continue,
        ap_idle => pynq_filters_convertToUnsigned_U0_ap_idle,
        ap_ready => pynq_filters_convertToUnsigned_U0_ap_ready,
        img_in0_data_stream_0_V_V_dout => ouput_image_10S3_data_stream_0_dout,
        img_in0_data_stream_0_V_V_empty_n => ouput_image_10S3_data_stream_0_empty_n,
        img_in0_data_stream_0_V_V_read => pynq_filters_convertToUnsigned_U0_img_in0_data_stream_0_V_V_read,
        img_in0_data_stream_1_V_V_dout => ouput_image_10S3_data_stream_1_dout,
        img_in0_data_stream_1_V_V_empty_n => ouput_image_10S3_data_stream_1_empty_n,
        img_in0_data_stream_1_V_V_read => pynq_filters_convertToUnsigned_U0_img_in0_data_stream_1_V_V_read,
        img_in0_data_stream_2_V_V_dout => ouput_image_10S3_data_stream_2_dout,
        img_in0_data_stream_2_V_V_empty_n => ouput_image_10S3_data_stream_2_empty_n,
        img_in0_data_stream_2_V_V_read => pynq_filters_convertToUnsigned_U0_img_in0_data_stream_2_V_V_read,
        img_out_data_stream_0_V_din => pynq_filters_convertToUnsigned_U0_img_out_data_stream_0_V_din,
        img_out_data_stream_0_V_full_n => output_image_8U3_data_stream_0_full_n,
        img_out_data_stream_0_V_write => pynq_filters_convertToUnsigned_U0_img_out_data_stream_0_V_write,
        img_out_data_stream_1_V_din => pynq_filters_convertToUnsigned_U0_img_out_data_stream_1_V_din,
        img_out_data_stream_1_V_full_n => output_image_8U3_data_stream_1_full_n,
        img_out_data_stream_1_V_write => pynq_filters_convertToUnsigned_U0_img_out_data_stream_1_V_write,
        img_out_data_stream_2_V_din => pynq_filters_convertToUnsigned_U0_img_out_data_stream_2_V_din,
        img_out_data_stream_2_V_full_n => output_image_8U3_data_stream_2_full_n,
        img_out_data_stream_2_V_write => pynq_filters_convertToUnsigned_U0_img_out_data_stream_2_V_write);

    pynq_filters_Mat2AXIvideo_U0 : component pynq_filters_Mat2AXIvideo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pynq_filters_Mat2AXIvideo_U0_ap_start,
        ap_done => pynq_filters_Mat2AXIvideo_U0_ap_done,
        ap_continue => pynq_filters_Mat2AXIvideo_U0_ap_continue,
        ap_idle => pynq_filters_Mat2AXIvideo_U0_ap_idle,
        ap_ready => pynq_filters_Mat2AXIvideo_U0_ap_ready,
        img_data_stream_0_V_dout => output_image_8U3_data_stream_0_dout,
        img_data_stream_0_V_empty_n => output_image_8U3_data_stream_0_empty_n,
        img_data_stream_0_V_read => pynq_filters_Mat2AXIvideo_U0_img_data_stream_0_V_read,
        img_data_stream_1_V_dout => output_image_8U3_data_stream_1_dout,
        img_data_stream_1_V_empty_n => output_image_8U3_data_stream_1_empty_n,
        img_data_stream_1_V_read => pynq_filters_Mat2AXIvideo_U0_img_data_stream_1_V_read,
        img_data_stream_2_V_dout => output_image_8U3_data_stream_2_dout,
        img_data_stream_2_V_empty_n => output_image_8U3_data_stream_2_empty_n,
        img_data_stream_2_V_read => pynq_filters_Mat2AXIvideo_U0_img_data_stream_2_V_read,
        out_data_TDATA => pynq_filters_Mat2AXIvideo_U0_out_data_TDATA,
        out_data_TVALID => pynq_filters_Mat2AXIvideo_U0_out_data_TVALID,
        out_data_TREADY => out_data_TREADY,
        out_data_TKEEP => pynq_filters_Mat2AXIvideo_U0_out_data_TKEEP,
        out_data_TSTRB => pynq_filters_Mat2AXIvideo_U0_out_data_TSTRB,
        out_data_TUSER => pynq_filters_Mat2AXIvideo_U0_out_data_TUSER,
        out_data_TLAST => pynq_filters_Mat2AXIvideo_U0_out_data_TLAST,
        out_data_TID => pynq_filters_Mat2AXIvideo_U0_out_data_TID,
        out_data_TDEST => pynq_filters_Mat2AXIvideo_U0_out_data_TDEST);

    reduce_channel1_U : component FIFO_pynq_filters_reduce_channel1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_pynq_filters_entry3_U0_reduce_out_din,
        if_full_n => reduce_channel1_full_n,
        if_write => pynq_filters_pynq_filters_entry3_U0_reduce_out_write,
        if_dout => reduce_channel1_dout,
        if_empty_n => reduce_channel1_empty_n,
        if_read => pynq_filters_pynq_filters_entry211_U0_reduce_read);

    reduce_channel_U : component FIFO_pynq_filters_reduce_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_pynq_filters_entry211_U0_reduce_out_din,
        if_full_n => reduce_channel_full_n,
        if_write => pynq_filters_pynq_filters_entry211_U0_reduce_out_write,
        if_dout => reduce_channel_dout,
        if_empty_n => reduce_channel_empty_n,
        if_read => pynq_filters_Block_proc208_U0_reduce_read);

    input_image_8U3_rows_V_channel_U : component FIFO_pynq_filters_input_image_8U3_rows_V_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_Block_proc_U0_input_image_8U3_rows_V_out_din,
        if_full_n => input_image_8U3_rows_V_channel_full_n,
        if_write => pynq_filters_Block_proc_U0_input_image_8U3_rows_V_out_write,
        if_dout => input_image_8U3_rows_V_channel_dout,
        if_empty_n => input_image_8U3_rows_V_channel_empty_n,
        if_read => pynq_filters_AXIvideo2Mat_U0_img_rows_V_read);

    input_image_8U3_cols_V_channel_U : component FIFO_pynq_filters_input_image_8U3_cols_V_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_Block_proc_U0_input_image_8U3_cols_V_out_din,
        if_full_n => input_image_8U3_cols_V_channel_full_n,
        if_write => pynq_filters_Block_proc_U0_input_image_8U3_cols_V_out_write,
        if_dout => input_image_8U3_cols_V_channel_dout,
        if_empty_n => input_image_8U3_cols_V_channel_empty_n,
        if_read => pynq_filters_AXIvideo2Mat_U0_img_cols_V_read);

    input_image_8U3_data_stream_0_U : component FIFO_pynq_filters_input_image_8U3_data_stream_0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_AXIvideo2Mat_U0_img_data_stream_0_V_din,
        if_full_n => input_image_8U3_data_stream_0_full_n,
        if_write => pynq_filters_AXIvideo2Mat_U0_img_data_stream_0_V_write,
        if_dout => input_image_8U3_data_stream_0_dout,
        if_empty_n => input_image_8U3_data_stream_0_empty_n,
        if_read => pynq_filters_Duplicate_U0_src_data_stream_0_V_read);

    input_image_8U3_data_stream_1_U : component FIFO_pynq_filters_input_image_8U3_data_stream_1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_AXIvideo2Mat_U0_img_data_stream_1_V_din,
        if_full_n => input_image_8U3_data_stream_1_full_n,
        if_write => pynq_filters_AXIvideo2Mat_U0_img_data_stream_1_V_write,
        if_dout => input_image_8U3_data_stream_1_dout,
        if_empty_n => input_image_8U3_data_stream_1_empty_n,
        if_read => pynq_filters_Duplicate_U0_src_data_stream_1_V_read);

    input_image_8U3_data_stream_2_U : component FIFO_pynq_filters_input_image_8U3_data_stream_2
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_AXIvideo2Mat_U0_img_data_stream_2_V_din,
        if_full_n => input_image_8U3_data_stream_2_full_n,
        if_write => pynq_filters_AXIvideo2Mat_U0_img_data_stream_2_V_write,
        if_dout => input_image_8U3_data_stream_2_dout,
        if_empty_n => input_image_8U3_data_stream_2_empty_n,
        if_read => pynq_filters_Duplicate_U0_src_data_stream_2_V_read);

    input_image_8U3_rows_V_channel_1_U : component FIFO_pynq_filters_input_image_8U3_rows_V_channel_1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_AXIvideo2Mat_U0_img_rows_V_out_din,
        if_full_n => input_image_8U3_rows_V_channel_1_full_n,
        if_write => pynq_filters_AXIvideo2Mat_U0_img_rows_V_out_write,
        if_dout => input_image_8U3_rows_V_channel_1_dout,
        if_empty_n => input_image_8U3_rows_V_channel_1_empty_n,
        if_read => pynq_filters_Duplicate_U0_src_rows_V_read);

    input_image_8U3_cols_V_channel_1_U : component FIFO_pynq_filters_input_image_8U3_cols_V_channel_1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_AXIvideo2Mat_U0_img_cols_V_out_din,
        if_full_n => input_image_8U3_cols_V_channel_1_full_n,
        if_write => pynq_filters_AXIvideo2Mat_U0_img_cols_V_out_write,
        if_dout => input_image_8U3_cols_V_channel_1_dout,
        if_empty_n => input_image_8U3_cols_V_channel_1_empty_n,
        if_read => pynq_filters_Duplicate_U0_src_cols_V_read);

    input_image_8U3_copy1_data_str_U : component FIFO_pynq_filters_input_image_8U3_copy1_data_str
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_Duplicate_U0_dst1_data_stream_0_V_din,
        if_full_n => input_image_8U3_copy1_data_str_full_n,
        if_write => pynq_filters_Duplicate_U0_dst1_data_stream_0_V_write,
        if_dout => input_image_8U3_copy1_data_str_dout,
        if_empty_n => input_image_8U3_copy1_data_str_empty_n,
        if_read => pynq_filters_CvtColor_1_U0_p_src_data_stream_0_V_read);

    input_image_8U3_copy1_data_str_1_U : component FIFO_pynq_filters_input_image_8U3_copy1_data_str_1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_Duplicate_U0_dst1_data_stream_1_V_din,
        if_full_n => input_image_8U3_copy1_data_str_1_full_n,
        if_write => pynq_filters_Duplicate_U0_dst1_data_stream_1_V_write,
        if_dout => input_image_8U3_copy1_data_str_1_dout,
        if_empty_n => input_image_8U3_copy1_data_str_1_empty_n,
        if_read => pynq_filters_CvtColor_1_U0_p_src_data_stream_1_V_read);

    input_image_8U3_copy1_data_str_2_U : component FIFO_pynq_filters_input_image_8U3_copy1_data_str_2
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_Duplicate_U0_dst1_data_stream_2_V_din,
        if_full_n => input_image_8U3_copy1_data_str_2_full_n,
        if_write => pynq_filters_Duplicate_U0_dst1_data_stream_2_V_write,
        if_dout => input_image_8U3_copy1_data_str_2_dout,
        if_empty_n => input_image_8U3_copy1_data_str_2_empty_n,
        if_read => pynq_filters_CvtColor_1_U0_p_src_data_stream_2_V_read);

    input_image_8U3_copy2_data_str_U : component FIFO_pynq_filters_input_image_8U3_copy2_data_str
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_Duplicate_U0_dst2_data_stream_0_V_din,
        if_full_n => input_image_8U3_copy2_data_str_full_n,
        if_write => pynq_filters_Duplicate_U0_dst2_data_stream_0_V_write,
        if_dout => input_image_8U3_copy2_data_str_dout,
        if_empty_n => input_image_8U3_copy2_data_str_empty_n,
        if_read => pynq_filters_convertToSigned_1_U0_img_in0_data_stream_0_V_read);

    input_image_8U3_copy2_data_str_1_U : component FIFO_pynq_filters_input_image_8U3_copy2_data_str_1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_Duplicate_U0_dst2_data_stream_1_V_din,
        if_full_n => input_image_8U3_copy2_data_str_1_full_n,
        if_write => pynq_filters_Duplicate_U0_dst2_data_stream_1_V_write,
        if_dout => input_image_8U3_copy2_data_str_1_dout,
        if_empty_n => input_image_8U3_copy2_data_str_1_empty_n,
        if_read => pynq_filters_convertToSigned_1_U0_img_in0_data_stream_1_V_read);

    input_image_8U3_copy2_data_str_2_U : component FIFO_pynq_filters_input_image_8U3_copy2_data_str_2
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_Duplicate_U0_dst2_data_stream_2_V_din,
        if_full_n => input_image_8U3_copy2_data_str_2_full_n,
        if_write => pynq_filters_Duplicate_U0_dst2_data_stream_2_V_write,
        if_dout => input_image_8U3_copy2_data_str_2_dout,
        if_empty_n => input_image_8U3_copy2_data_str_2_empty_n,
        if_read => pynq_filters_convertToSigned_1_U0_img_in0_data_stream_2_V_read);

    input_image_8U1_data_stream_0_U : component FIFO_pynq_filters_input_image_8U1_data_stream_0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_CvtColor_1_U0_p_dst_data_stream_V_din,
        if_full_n => input_image_8U1_data_stream_0_full_n,
        if_write => pynq_filters_CvtColor_1_U0_p_dst_data_stream_V_write,
        if_dout => input_image_8U1_data_stream_0_dout,
        if_empty_n => input_image_8U1_data_stream_0_empty_n,
        if_read => pynq_filters_gaussianBlur_U0_img_in_data_stream_V_read);

    image_blur_data_stream_0_V_U : component FIFO_pynq_filters_image_blur_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_gaussianBlur_U0_img_out_data_stream_V_din,
        if_full_n => image_blur_data_stream_0_V_full_n,
        if_write => pynq_filters_gaussianBlur_U0_img_out_data_stream_V_write,
        if_dout => image_blur_data_stream_0_V_dout,
        if_empty_n => image_blur_data_stream_0_V_empty_n,
        if_read => pynq_filters_convertToSigned_U0_img_in0_data_stream_V_read);

    image_blur_10S1_data_stream_0_U : component FIFO_pynq_filters_image_blur_10S1_data_stream_0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_convertToSigned_U0_img_out_data_stream_V_V_din,
        if_full_n => image_blur_10S1_data_stream_0_full_n,
        if_write => pynq_filters_convertToSigned_U0_img_out_data_stream_V_V_write,
        if_dout => image_blur_10S1_data_stream_0_dout,
        if_empty_n => image_blur_10S1_data_stream_0_empty_n,
        if_read => pynq_filters_laplacian_U0_img_in_data_stream_V_V_read);

    image_laplacian_10S1_data_stre_U : component FIFO_pynq_filters_image_laplacian_10S1_data_stre
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_laplacian_U0_img_out_data_stream_V_V_din,
        if_full_n => image_laplacian_10S1_data_stre_full_n,
        if_write => pynq_filters_laplacian_U0_img_out_data_stream_V_V_write,
        if_dout => image_laplacian_10S1_data_stre_dout,
        if_empty_n => image_laplacian_10S1_data_stre_empty_n,
        if_read => pynq_filters_Scale_480_640_9_9_double_1_U0_src_data_stream_V_V_read);

    tmp_1_loc_channel_U : component FIFO_pynq_filters_tmp_1_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_Block_proc208_U0_tmp_1_out_out_din,
        if_full_n => tmp_1_loc_channel_full_n,
        if_write => pynq_filters_Block_proc208_U0_tmp_1_out_out_write,
        if_dout => tmp_1_loc_channel_dout,
        if_empty_n => tmp_1_loc_channel_empty_n,
        if_read => pynq_filters_Scale_480_640_9_9_double_1_U0_scale_read);

    image_laplacian_reduced_10S1_d_U : component FIFO_pynq_filters_image_laplacian_reduced_10S1_d
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_Scale_480_640_9_9_double_1_U0_dst_data_stream_V_V_din,
        if_full_n => image_laplacian_reduced_10S1_d_full_n,
        if_write => pynq_filters_Scale_480_640_9_9_double_1_U0_dst_data_stream_V_V_write,
        if_dout => image_laplacian_reduced_10S1_d_dout,
        if_empty_n => image_laplacian_reduced_10S1_d_empty_n,
        if_read => pynq_filters_CvtColor_U0_p_src_data_stream_V_V_read);

    image_laplacian_10S3_data_stre_U : component FIFO_pynq_filters_image_laplacian_10S3_data_stre
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_CvtColor_U0_p_dst_data_stream_0_V_V_din,
        if_full_n => image_laplacian_10S3_data_stre_full_n,
        if_write => pynq_filters_CvtColor_U0_p_dst_data_stream_0_V_V_write,
        if_dout => image_laplacian_10S3_data_stre_dout,
        if_empty_n => image_laplacian_10S3_data_stre_empty_n,
        if_read => pynq_filters_AddWeighted_U0_src1_data_stream_0_V_V_read);

    image_laplacian_10S3_data_stre_1_U : component FIFO_pynq_filters_image_laplacian_10S3_data_stre_1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_CvtColor_U0_p_dst_data_stream_1_V_V_din,
        if_full_n => image_laplacian_10S3_data_stre_1_full_n,
        if_write => pynq_filters_CvtColor_U0_p_dst_data_stream_1_V_V_write,
        if_dout => image_laplacian_10S3_data_stre_1_dout,
        if_empty_n => image_laplacian_10S3_data_stre_1_empty_n,
        if_read => pynq_filters_AddWeighted_U0_src1_data_stream_1_V_V_read);

    image_laplacian_10S3_data_stre_2_U : component FIFO_pynq_filters_image_laplacian_10S3_data_stre_2
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_CvtColor_U0_p_dst_data_stream_2_V_V_din,
        if_full_n => image_laplacian_10S3_data_stre_2_full_n,
        if_write => pynq_filters_CvtColor_U0_p_dst_data_stream_2_V_V_write,
        if_dout => image_laplacian_10S3_data_stre_2_dout,
        if_empty_n => image_laplacian_10S3_data_stre_2_empty_n,
        if_read => pynq_filters_AddWeighted_U0_src1_data_stream_2_V_V_read);

    input_image_10S3_data_stream_0_U : component FIFO_pynq_filters_input_image_10S3_data_stream_0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_convertToSigned_1_U0_img_out_data_stream_0_V_V_din,
        if_full_n => input_image_10S3_data_stream_0_full_n,
        if_write => pynq_filters_convertToSigned_1_U0_img_out_data_stream_0_V_V_write,
        if_dout => input_image_10S3_data_stream_0_dout,
        if_empty_n => input_image_10S3_data_stream_0_empty_n,
        if_read => pynq_filters_AddWeighted_U0_src2_data_stream_0_V_V_read);

    input_image_10S3_data_stream_1_U : component FIFO_pynq_filters_input_image_10S3_data_stream_1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_convertToSigned_1_U0_img_out_data_stream_1_V_V_din,
        if_full_n => input_image_10S3_data_stream_1_full_n,
        if_write => pynq_filters_convertToSigned_1_U0_img_out_data_stream_1_V_V_write,
        if_dout => input_image_10S3_data_stream_1_dout,
        if_empty_n => input_image_10S3_data_stream_1_empty_n,
        if_read => pynq_filters_AddWeighted_U0_src2_data_stream_1_V_V_read);

    input_image_10S3_data_stream_2_U : component FIFO_pynq_filters_input_image_10S3_data_stream_2
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_convertToSigned_1_U0_img_out_data_stream_2_V_V_din,
        if_full_n => input_image_10S3_data_stream_2_full_n,
        if_write => pynq_filters_convertToSigned_1_U0_img_out_data_stream_2_V_V_write,
        if_dout => input_image_10S3_data_stream_2_dout,
        if_empty_n => input_image_10S3_data_stream_2_empty_n,
        if_read => pynq_filters_AddWeighted_U0_src2_data_stream_2_V_V_read);

    ouput_image_10S3_data_stream_0_U : component FIFO_pynq_filters_ouput_image_10S3_data_stream_0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_AddWeighted_U0_dst_data_stream_0_V_V_din,
        if_full_n => ouput_image_10S3_data_stream_0_full_n,
        if_write => pynq_filters_AddWeighted_U0_dst_data_stream_0_V_V_write,
        if_dout => ouput_image_10S3_data_stream_0_dout,
        if_empty_n => ouput_image_10S3_data_stream_0_empty_n,
        if_read => pynq_filters_convertToUnsigned_U0_img_in0_data_stream_0_V_V_read);

    ouput_image_10S3_data_stream_1_U : component FIFO_pynq_filters_ouput_image_10S3_data_stream_1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_AddWeighted_U0_dst_data_stream_1_V_V_din,
        if_full_n => ouput_image_10S3_data_stream_1_full_n,
        if_write => pynq_filters_AddWeighted_U0_dst_data_stream_1_V_V_write,
        if_dout => ouput_image_10S3_data_stream_1_dout,
        if_empty_n => ouput_image_10S3_data_stream_1_empty_n,
        if_read => pynq_filters_convertToUnsigned_U0_img_in0_data_stream_1_V_V_read);

    ouput_image_10S3_data_stream_2_U : component FIFO_pynq_filters_ouput_image_10S3_data_stream_2
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_AddWeighted_U0_dst_data_stream_2_V_V_din,
        if_full_n => ouput_image_10S3_data_stream_2_full_n,
        if_write => pynq_filters_AddWeighted_U0_dst_data_stream_2_V_V_write,
        if_dout => ouput_image_10S3_data_stream_2_dout,
        if_empty_n => ouput_image_10S3_data_stream_2_empty_n,
        if_read => pynq_filters_convertToUnsigned_U0_img_in0_data_stream_2_V_V_read);

    output_image_8U3_data_stream_0_U : component FIFO_pynq_filters_output_image_8U3_data_stream_0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_convertToUnsigned_U0_img_out_data_stream_0_V_din,
        if_full_n => output_image_8U3_data_stream_0_full_n,
        if_write => pynq_filters_convertToUnsigned_U0_img_out_data_stream_0_V_write,
        if_dout => output_image_8U3_data_stream_0_dout,
        if_empty_n => output_image_8U3_data_stream_0_empty_n,
        if_read => pynq_filters_Mat2AXIvideo_U0_img_data_stream_0_V_read);

    output_image_8U3_data_stream_1_U : component FIFO_pynq_filters_output_image_8U3_data_stream_1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_convertToUnsigned_U0_img_out_data_stream_1_V_din,
        if_full_n => output_image_8U3_data_stream_1_full_n,
        if_write => pynq_filters_convertToUnsigned_U0_img_out_data_stream_1_V_write,
        if_dout => output_image_8U3_data_stream_1_dout,
        if_empty_n => output_image_8U3_data_stream_1_empty_n,
        if_read => pynq_filters_Mat2AXIvideo_U0_img_data_stream_1_V_read);

    output_image_8U3_data_stream_2_U : component FIFO_pynq_filters_output_image_8U3_data_stream_2
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pynq_filters_convertToUnsigned_U0_img_out_data_stream_2_V_din,
        if_full_n => output_image_8U3_data_stream_2_full_n,
        if_write => pynq_filters_convertToUnsigned_U0_img_out_data_stream_2_V_write,
        if_dout => output_image_8U3_data_stream_2_dout,
        if_empty_n => output_image_8U3_data_stream_2_empty_n,
        if_read => pynq_filters_Mat2AXIvideo_U0_img_data_stream_2_V_read);





    pynq_filters_AddWeighted_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pynq_filters_AddWeighted_U0_ap_start <= ap_const_logic_0;
            else
                pynq_filters_AddWeighted_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    pynq_filters_Block_proc208_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pynq_filters_Block_proc208_U0_ap_start <= ap_const_logic_0;
            else
                pynq_filters_Block_proc208_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    pynq_filters_CvtColor_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pynq_filters_CvtColor_1_U0_ap_start <= ap_const_logic_0;
            else
                pynq_filters_CvtColor_1_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    pynq_filters_CvtColor_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pynq_filters_CvtColor_U0_ap_start <= ap_const_logic_0;
            else
                pynq_filters_CvtColor_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    pynq_filters_Duplicate_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pynq_filters_Duplicate_U0_ap_start <= ap_const_logic_0;
            else
                pynq_filters_Duplicate_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    pynq_filters_Mat2AXIvideo_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pynq_filters_Mat2AXIvideo_U0_ap_start <= ap_const_logic_0;
            else
                pynq_filters_Mat2AXIvideo_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    pynq_filters_Scale_480_640_9_9_double_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pynq_filters_Scale_480_640_9_9_double_1_U0_ap_start <= ap_const_logic_0;
            else
                pynq_filters_Scale_480_640_9_9_double_1_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    pynq_filters_convertToSigned_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pynq_filters_convertToSigned_1_U0_ap_start <= ap_const_logic_0;
            else
                pynq_filters_convertToSigned_1_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    pynq_filters_convertToSigned_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pynq_filters_convertToSigned_U0_ap_start <= ap_const_logic_0;
            else
                pynq_filters_convertToSigned_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    pynq_filters_convertToUnsigned_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pynq_filters_convertToUnsigned_U0_ap_start <= ap_const_logic_0;
            else
                pynq_filters_convertToUnsigned_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    pynq_filters_gaussianBlur_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pynq_filters_gaussianBlur_U0_ap_start <= ap_const_logic_0;
            else
                pynq_filters_gaussianBlur_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    pynq_filters_laplacian_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pynq_filters_laplacian_U0_ap_start <= ap_const_logic_0;
            else
                pynq_filters_laplacian_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    pynq_filters_pynq_filters_entry211_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pynq_filters_pynq_filters_entry211_U0_ap_start <= ap_const_logic_0;
            else
                pynq_filters_pynq_filters_entry211_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sig_hs_continue <= ap_const_logic_0;
    in_data_TREADY <= pynq_filters_AXIvideo2Mat_U0_in_data_TREADY;
    out_data_TDATA <= pynq_filters_Mat2AXIvideo_U0_out_data_TDATA;
    out_data_TDEST <= pynq_filters_Mat2AXIvideo_U0_out_data_TDEST;
    out_data_TID <= pynq_filters_Mat2AXIvideo_U0_out_data_TID;
    out_data_TKEEP <= pynq_filters_Mat2AXIvideo_U0_out_data_TKEEP;
    out_data_TLAST <= pynq_filters_Mat2AXIvideo_U0_out_data_TLAST;
    out_data_TSTRB <= pynq_filters_Mat2AXIvideo_U0_out_data_TSTRB;
    out_data_TUSER <= pynq_filters_Mat2AXIvideo_U0_out_data_TUSER;
    out_data_TVALID <= pynq_filters_Mat2AXIvideo_U0_out_data_TVALID;
    pynq_filters_AXIvideo2Mat_U0_ap_continue <= ap_const_logic_1;
    pynq_filters_AXIvideo2Mat_U0_ap_start <= ap_const_logic_1;
    pynq_filters_AddWeighted_U0_ap_continue <= ap_const_logic_1;
    pynq_filters_Block_proc208_U0_ap_continue <= ap_const_logic_1;
    pynq_filters_Block_proc_U0_ap_continue <= ap_const_logic_1;
    pynq_filters_Block_proc_U0_ap_start <= ap_const_logic_1;
    pynq_filters_CvtColor_1_U0_ap_continue <= ap_const_logic_1;
    pynq_filters_CvtColor_U0_ap_continue <= ap_const_logic_1;
    pynq_filters_Duplicate_U0_ap_continue <= ap_const_logic_1;
    pynq_filters_Mat2AXIvideo_U0_ap_continue <= ap_const_logic_1;
    pynq_filters_Scale_480_640_9_9_double_1_U0_ap_continue <= ap_const_logic_1;
    pynq_filters_convertToSigned_1_U0_ap_continue <= ap_const_logic_1;
    pynq_filters_convertToSigned_U0_ap_continue <= ap_const_logic_1;
    pynq_filters_convertToUnsigned_U0_ap_continue <= ap_const_logic_1;
    pynq_filters_gaussianBlur_U0_ap_continue <= ap_const_logic_1;
    pynq_filters_laplacian_U0_ap_continue <= ap_const_logic_1;
    pynq_filters_pynq_filters_entry211_U0_ap_continue <= ap_const_logic_1;
    pynq_filters_pynq_filters_entry3_U0_ap_continue <= ap_const_logic_1;
    pynq_filters_pynq_filters_entry3_U0_ap_start <= ap_const_logic_1;
end behav;
