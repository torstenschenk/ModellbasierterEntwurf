-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pynq_filters_CvtColor_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_0_V_read : OUT STD_LOGIC;
    p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_1_V_read : OUT STD_LOGIC;
    p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_2_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of pynq_filters_CvtColor_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st8_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv28_74BC6 : STD_LOGIC_VECTOR (27 downto 0) := "0000000001110100101111000110";
    constant ap_const_lv30_259168 : STD_LOGIC_VECTOR (29 downto 0) := "000000001001011001000101101000";
    constant ap_const_lv29_1322D0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000100110010001011010000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_22 : BOOLEAN;
    signal p_src_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_51 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal exitcond_reg_266 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_src_data_stream_1_V_blk_n : STD_LOGIC;
    signal p_src_data_stream_2_V_blk_n : STD_LOGIC;
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_reg_ppstg_exitcond_reg_266_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_reg_126 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond2_fu_137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_83 : BOOLEAN;
    signal i_1_fu_143_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_1_reg_261 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond_fu_149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_96 : BOOLEAN;
    signal ap_sig_100 : BOOLEAN;
    signal ap_reg_ppstg_exitcond_reg_266_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_266_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_155_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_132_reg_275 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_133_reg_280 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_133_reg_280_pp0_iter2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_134_reg_285 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_134_reg_285_pp0_iter2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_i_fu_251_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_i_reg_290 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_241_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_1_reg_295 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_23_reg_300 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_128_reg_305 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_115 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_150 : BOOLEAN;
    signal ap_sig_cseq_ST_st8_fsm_3 : STD_LOGIC;
    signal ap_sig_158 : BOOLEAN;
    signal grp_fu_233_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_7_i_i_i_fu_189_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_24_fu_199_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_129_fu_192_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_130_fu_204_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_i_i_i_not_fu_212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_carry_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_233_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_233_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_241_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_241_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_241_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_i_fu_251_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_i_fu_251_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_233_p00 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_241_p00 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_241_p20 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_i_fu_251_p00 : STD_LOGIC_VECTOR (28 downto 0);

    component pynq_filters_mac_muladd_8ns_20ns_29ns_29_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        din2 : IN STD_LOGIC_VECTOR (28 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component pynq_filters_mac_muladd_8ns_23ns_29ns_30_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        din2 : IN STD_LOGIC_VECTOR (28 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component pynq_filters_mul_mul_8ns_22ns_29_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;



begin
    pynq_filters_mac_muladd_8ns_20ns_29ns_29_1_U31 : component pynq_filters_mac_muladd_8ns_20ns_29ns_29_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 20,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        din0 => grp_fu_233_p0,
        din1 => grp_fu_233_p1,
        din2 => r_V_i_reg_290,
        dout => grp_fu_233_p3);

    pynq_filters_mac_muladd_8ns_23ns_29ns_30_1_U32 : component pynq_filters_mac_muladd_8ns_23ns_29ns_30_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 23,
        din2_WIDTH => 29,
        dout_WIDTH => 30)
    port map (
        din0 => grp_fu_241_p0,
        din1 => grp_fu_241_p1,
        din2 => grp_fu_241_p2,
        dout => grp_fu_241_p3);

    pynq_filters_mul_mul_8ns_22ns_29_1_U33 : component pynq_filters_mul_mul_8ns_22ns_29_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 22,
        dout_WIDTH => 29)
    port map (
        din0 => r_V_i_fu_251_p0,
        din1 => r_V_i_fu_251_p1,
        dout => r_V_i_fu_251_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond2_fu_137_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100))) and not((ap_const_lv1_0 = exitcond_fu_149_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_137_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100))) and (ap_const_lv1_0 = exitcond_fu_149_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_137_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100))) and not((ap_const_lv1_0 = exitcond_fu_149_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100)))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100)))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_137_p2))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_115_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_3)) then 
                i_reg_115 <= i_1_reg_261;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_150))) then 
                i_reg_115 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    j_reg_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100))) and (ap_const_lv1_0 = exitcond_fu_149_p2))) then 
                j_reg_126 <= j_1_fu_155_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_137_p2))) then 
                j_reg_126 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100))))) then
                ap_reg_ppstg_exitcond_reg_266_pp0_iter1 <= exitcond_reg_266;
                exitcond_reg_266 <= exitcond_fu_149_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100)))) then
                ap_reg_ppstg_exitcond_reg_266_pp0_iter2 <= ap_reg_ppstg_exitcond_reg_266_pp0_iter1;
                ap_reg_ppstg_exitcond_reg_266_pp0_iter3 <= ap_reg_ppstg_exitcond_reg_266_pp0_iter2;
                ap_reg_ppstg_tmp_133_reg_280_pp0_iter2 <= tmp_133_reg_280;
                ap_reg_ppstg_tmp_134_reg_285_pp0_iter2 <= tmp_134_reg_285;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                i_1_reg_261 <= i_1_fu_143_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_266_pp0_iter2))) then
                p_Val2_23_reg_300 <= grp_fu_241_p3(29 downto 22);
                tmp_128_reg_305 <= grp_fu_241_p3(21 downto 21);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_266_pp0_iter2))) then
                r_V_1_reg_295 <= grp_fu_241_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_266_pp0_iter1))) then
                r_V_i_reg_290 <= r_V_i_fu_251_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_reg_266 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100))))) then
                tmp_132_reg_275 <= p_src_data_stream_0_V_dout;
                tmp_133_reg_280 <= p_src_data_stream_1_V_dout;
                tmp_134_reg_285 <= p_src_data_stream_2_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, exitcond2_fu_137_p2, exitcond_fu_149_p2, ap_sig_96, ap_sig_100, ap_sig_150)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_150)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond2_fu_137_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100))) and not((ap_const_lv1_0 = exitcond_fu_149_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100))) and not((ap_const_lv1_0 = exitcond_fu_149_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st8_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_done_reg, exitcond2_fu_137_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond2_fu_137_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond2_fu_137_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond2_fu_137_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_100_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_ppstg_exitcond_reg_266_pp0_iter3)
    begin
                ap_sig_100 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_266_pp0_iter3) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_sig_150_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_150 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_sig_158_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_158 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_51_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_51 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_83_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_83 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_96_assign_proc : process(p_src_data_stream_0_V_empty_n, p_src_data_stream_1_V_empty_n, p_src_data_stream_2_V_empty_n, exitcond_reg_266)
    begin
                ap_sig_96 <= (((exitcond_reg_266 = ap_const_lv1_0) and (p_src_data_stream_0_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_266 = ap_const_lv1_0) and (p_src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_266 = ap_const_lv1_0) and (p_src_data_stream_2_V_empty_n = ap_const_logic_0)));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_51)
    begin
        if (ap_sig_51) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_22)
    begin
        if (ap_sig_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_83)
    begin
        if (ap_sig_83) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_3_assign_proc : process(ap_sig_158)
    begin
        if (ap_sig_158) then 
            ap_sig_cseq_ST_st8_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond2_fu_137_p2 <= "1" when (i_reg_115 = ap_const_lv9_1E0) else "0";
    exitcond_fu_149_p2 <= "1" when (j_reg_126 = ap_const_lv10_280) else "0";
    grp_fu_233_p0 <= grp_fu_233_p00(8 - 1 downto 0);
    grp_fu_233_p00 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_134_reg_285_pp0_iter2),28));
    grp_fu_233_p1 <= ap_const_lv28_74BC6(20 - 1 downto 0);
    grp_fu_241_p0 <= grp_fu_241_p00(8 - 1 downto 0);
    grp_fu_241_p00 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_133_reg_280_pp0_iter2),30));
    grp_fu_241_p1 <= ap_const_lv30_259168(23 - 1 downto 0);
    grp_fu_241_p2 <= grp_fu_241_p20(29 - 1 downto 0);
    grp_fu_241_p20 <= std_logic_vector(resize(unsigned(grp_fu_233_p3),30));
    i_1_fu_143_p2 <= std_logic_vector(unsigned(i_reg_115) + unsigned(ap_const_lv9_1));
    j_1_fu_155_p2 <= std_logic_vector(unsigned(j_reg_126) + unsigned(ap_const_lv10_1));
    not_carry_fu_218_p2 <= (tmp_130_fu_204_p3 or p_Result_2_i_i_i_not_fu_212_p2);
    p_Result_2_i_i_i_not_fu_212_p2 <= (tmp_129_fu_192_p3 xor ap_const_lv1_1);
    p_Val2_24_fu_199_p2 <= std_logic_vector(unsigned(p_Val2_23_reg_300) + unsigned(tmp_7_i_i_i_fu_189_p1));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_ppiten_pp0_it4, ap_reg_ppstg_exitcond_reg_266_pp0_iter3)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_266_pp0_iter3))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        p_Val2_24_fu_199_p2 when (not_carry_fu_218_p2(0) = '1') else 
        ap_const_lv8_FF;

    p_dst_data_stream_V_write_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, ap_reg_ppstg_exitcond_reg_266_pp0_iter3, ap_sig_96, ap_sig_100)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_266_pp0_iter3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100))))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_0_V_blk_n_assign_proc : process(p_src_data_stream_0_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_266)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_266 = ap_const_lv1_0))) then 
            p_src_data_stream_0_V_blk_n <= p_src_data_stream_0_V_empty_n;
        else 
            p_src_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_0_V_read_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, exitcond_reg_266, ap_sig_96, ap_sig_100)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_266 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100))))) then 
            p_src_data_stream_0_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_1_V_blk_n_assign_proc : process(p_src_data_stream_1_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_266)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_266 = ap_const_lv1_0))) then 
            p_src_data_stream_1_V_blk_n <= p_src_data_stream_1_V_empty_n;
        else 
            p_src_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_1_V_read_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, exitcond_reg_266, ap_sig_96, ap_sig_100)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_266 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100))))) then 
            p_src_data_stream_1_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_2_V_blk_n_assign_proc : process(p_src_data_stream_2_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_266)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_266 = ap_const_lv1_0))) then 
            p_src_data_stream_2_V_blk_n <= p_src_data_stream_2_V_empty_n;
        else 
            p_src_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_2_V_read_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, exitcond_reg_266, ap_sig_96, ap_sig_100)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_266 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_96) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_100))))) then 
            p_src_data_stream_2_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_i_fu_251_p0 <= r_V_i_fu_251_p00(8 - 1 downto 0);
    r_V_i_fu_251_p00 <= std_logic_vector(resize(unsigned(tmp_132_reg_275),29));
    r_V_i_fu_251_p1 <= ap_const_lv29_1322D0(22 - 1 downto 0);
    tmp_129_fu_192_p3 <= r_V_1_reg_295(29 downto 29);
    tmp_130_fu_204_p3 <= p_Val2_24_fu_199_p2(7 downto 7);
    tmp_7_i_i_i_fu_189_p1 <= std_logic_vector(resize(unsigned(tmp_128_reg_305),8));
end behav;
