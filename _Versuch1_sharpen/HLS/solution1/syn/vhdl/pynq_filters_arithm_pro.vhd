-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pynq_filters_arithm_pro is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    src_data_stream_V_V_empty_n : IN STD_LOGIC;
    src_data_stream_V_V_read : OUT STD_LOGIC;
    dst_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    dst_data_stream_V_V_full_n : IN STD_LOGIC;
    dst_data_stream_V_V_write : OUT STD_LOGIC;
    p0 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of pynq_filters_arithm_pro is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st27_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_21 : BOOLEAN;
    signal src_data_stream_V_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_41 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it16 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it17 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it18 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it19 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it20 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it21 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it22 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it23 : STD_LOGIC := '0';
    signal exitcond_reg_170 : STD_LOGIC_VECTOR (0 downto 0);
    signal dst_data_stream_V_V_blk_n : STD_LOGIC;
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter22 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_1_reg_100 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond2_fu_128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_114 : BOOLEAN;
    signal i_V_fu_134_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_V_reg_165 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_121 : BOOLEAN;
    signal ap_sig_125 : BOOLEAN;
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_170_pp0_iter21 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_146_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_V_reg_179 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_125_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_reg_189 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_121_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mult_t_reg_194 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_116_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_t_reg_199 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_pynq_filters_operator_s_fu_111_ap_return : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_V11_reg_204 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_pynq_filters_operator_s_fu_111_ap_ce : STD_LOGIC;
    signal p_s_reg_89 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st27_fsm_3 : STD_LOGIC;
    signal ap_sig_219 : BOOLEAN;
    signal grp_fu_125_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_116_ce : STD_LOGIC;
    signal grp_fu_121_ce : STD_LOGIC;
    signal grp_fu_125_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);

    component pynq_filters_operator_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        v : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (9 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component pynq_filters_dadd_64ns_64ns_64_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component pynq_filters_dmul_64ns_64ns_64_6_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component pynq_filters_sitodp_32s_64_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_pynq_filters_operator_s_fu_111 : component pynq_filters_operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        v => sum_t_reg_199,
        ap_return => grp_pynq_filters_operator_s_fu_111_ap_return,
        ap_ce => grp_pynq_filters_operator_s_fu_111_ap_ce);

    pynq_filters_dadd_64ns_64ns_64_5_full_dsp_U107 : component pynq_filters_dadd_64ns_64ns_64_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => mult_t_reg_194,
        din1 => ap_const_lv64_0,
        ce => grp_fu_116_ce,
        dout => grp_fu_116_p2);

    pynq_filters_dmul_64ns_64ns_64_6_max_dsp_U108 : component pynq_filters_dmul_64ns_64ns_64_6_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_s_reg_189,
        din1 => p0,
        ce => grp_fu_121_ce,
        dout => grp_fu_121_p2);

    pynq_filters_sitodp_32s_64_6_U109 : component pynq_filters_sitodp_32s_64_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_125_p0,
        ce => grp_fu_125_ce,
        dout => grp_fu_125_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))) and not((ap_const_lv1_0 = exitcond_fu_140_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_128_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))) and (ap_const_lv1_0 = exitcond_fu_140_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_128_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))) and not((ap_const_lv1_0 = exitcond_fu_140_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_128_p2))) then 
                    ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    p_1_reg_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))) and (ap_const_lv1_0 = exitcond_fu_140_p2))) then 
                p_1_reg_100 <= j_V_fu_146_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_128_p2))) then 
                p_1_reg_100 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    p_s_reg_89_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                p_s_reg_89 <= ap_const_lv9_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_3)) then 
                p_s_reg_89 <= i_V_reg_165;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))))) then
                ap_reg_ppstg_exitcond_reg_170_pp0_iter1 <= exitcond_reg_170;
                exitcond_reg_170 <= exitcond_fu_140_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125)))) then
                ap_reg_ppstg_exitcond_reg_170_pp0_iter10 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter9;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter11 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter10;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter12 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter11;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter13 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter12;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter14 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter13;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter15 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter14;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter16 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter15;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter17 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter16;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter18 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter17;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter19 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter18;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter2 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter1;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter20 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter19;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter21 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter20;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter22 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter21;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter3 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter2;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter4 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter3;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter5 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter4;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter6 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter5;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter7 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter6;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter8 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter7;
                ap_reg_ppstg_exitcond_reg_170_pp0_iter9 <= ap_reg_ppstg_exitcond_reg_170_pp0_iter8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                i_V_reg_165 <= i_V_fu_134_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_170_pp0_iter12))) then
                mult_t_reg_194 <= grp_fu_121_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_170_pp0_iter17))) then
                sum_t_reg_199 <= grp_fu_116_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_170_pp0_iter21))) then
                tmp_V11_reg_204 <= grp_pynq_filters_operator_s_fu_111_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_reg_170 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))))) then
                tmp_V_reg_179 <= src_data_stream_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_170_pp0_iter6))) then
                tmp_s_reg_189 <= grp_fu_125_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it22, ap_reg_ppiten_pp0_it23, exitcond2_fu_128_p2, exitcond_fu_140_p2, ap_sig_121, ap_sig_125)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond2_fu_128_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it22)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))) and not((ap_const_lv1_0 = exitcond_fu_140_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it22))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))) and not((ap_const_lv1_0 = exitcond_fu_140_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st27_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st27_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, exitcond2_fu_128_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond2_fu_128_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond2_fu_128_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond2_fu_128_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_114_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_114 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_121_assign_proc : process(src_data_stream_V_V_empty_n, exitcond_reg_170)
    begin
                ap_sig_121 <= ((exitcond_reg_170 = ap_const_lv1_0) and (src_data_stream_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_sig_125_assign_proc : process(dst_data_stream_V_V_full_n, ap_reg_ppstg_exitcond_reg_170_pp0_iter22)
    begin
                ap_sig_125 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_170_pp0_iter22) and (dst_data_stream_V_V_full_n = ap_const_logic_0));
    end process;


    ap_sig_21_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_21 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_219_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_219 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_41_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_41 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_41)
    begin
        if (ap_sig_41) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_21)
    begin
        if (ap_sig_21) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st27_fsm_3_assign_proc : process(ap_sig_219)
    begin
        if (ap_sig_219) then 
            ap_sig_cseq_ST_st27_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st27_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_114)
    begin
        if (ap_sig_114) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_data_stream_V_V_blk_n_assign_proc : process(dst_data_stream_V_V_full_n, ap_reg_ppiten_pp0_it23, ap_reg_ppstg_exitcond_reg_170_pp0_iter22)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_170_pp0_iter22))) then 
            dst_data_stream_V_V_blk_n <= dst_data_stream_V_V_full_n;
        else 
            dst_data_stream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_data_stream_V_V_din <= tmp_V11_reg_204;

    dst_data_stream_V_V_write_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it23, ap_reg_ppstg_exitcond_reg_170_pp0_iter22, ap_sig_121, ap_sig_125)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_170_pp0_iter22) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))))) then 
            dst_data_stream_V_V_write <= ap_const_logic_1;
        else 
            dst_data_stream_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    exitcond2_fu_128_p2 <= "1" when (p_s_reg_89 = ap_const_lv9_1E0) else "0";
    exitcond_fu_140_p2 <= "1" when (p_1_reg_100 = ap_const_lv10_280) else "0";

    grp_fu_116_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it23, ap_sig_121, ap_sig_125)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))))) then 
            grp_fu_116_ce <= ap_const_logic_1;
        else 
            grp_fu_116_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_121_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it23, ap_sig_121, ap_sig_125)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))))) then 
            grp_fu_121_ce <= ap_const_logic_1;
        else 
            grp_fu_121_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_125_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it23, ap_sig_121, ap_sig_125)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))))) then 
            grp_fu_125_ce <= ap_const_logic_1;
        else 
            grp_fu_125_ce <= ap_const_logic_0;
        end if; 
    end process;

        grp_fu_125_p0 <= std_logic_vector(resize(signed(tmp_V_reg_179),32));


    grp_pynq_filters_operator_s_fu_111_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it23, ap_sig_121, ap_sig_125)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))))) then 
            grp_pynq_filters_operator_s_fu_111_ap_ce <= ap_const_logic_1;
        else 
            grp_pynq_filters_operator_s_fu_111_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    i_V_fu_134_p2 <= std_logic_vector(unsigned(p_s_reg_89) + unsigned(ap_const_lv9_1));
    j_V_fu_146_p2 <= std_logic_vector(unsigned(p_1_reg_100) + unsigned(ap_const_lv10_1));

    src_data_stream_V_V_blk_n_assign_proc : process(src_data_stream_V_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_170)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_170 = ap_const_lv1_0))) then 
            src_data_stream_V_V_blk_n <= src_data_stream_V_V_empty_n;
        else 
            src_data_stream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_data_stream_V_V_read_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it23, exitcond_reg_170, ap_sig_121, ap_sig_125)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_170 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_121) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and ap_sig_125))))) then 
            src_data_stream_V_V_read <= ap_const_logic_1;
        else 
            src_data_stream_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
