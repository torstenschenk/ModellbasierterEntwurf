// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _resize_HH_
#define _resize_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "resize_Loop_1_proc59.h"
#include "xFresize60.h"
#include "resize_Loop_2_proc61.h"
#include "fifo_w24_d2_A.h"
#include "start_for_xFresizJfO.h"
#include "start_for_resize_KfY.h"

namespace ap_rtl {

struct resize : public sc_module {
    // Port declarations 24
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<24> > p_src_data_V_dout;
    sc_in< sc_logic > p_src_data_V_empty_n;
    sc_out< sc_logic > p_src_data_V_read;
    sc_out< sc_lv<24> > p_dst_data_V_din;
    sc_in< sc_logic > p_dst_data_V_full_n;
    sc_out< sc_logic > p_dst_data_V_write;
    sc_out< sc_lv<32> > xc_out;
    sc_out< sc_lv<32> > yc_out;
    sc_out< sc_lv<32> > anglexcomp;
    sc_out< sc_lv<32> > angleycomp;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_out< sc_logic > xc_out_ap_vld;
    sc_out< sc_logic > yc_out_ap_vld;
    sc_out< sc_logic > anglexcomp_ap_vld;
    sc_out< sc_logic > angleycomp_ap_vld;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_in< sc_logic > ap_continue;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    resize(sc_module_name name);
    SC_HAS_PROCESS(resize);

    ~resize();

    sc_trace_file* mVcdFile;

    resize_Loop_1_proc59* resize_Loop_1_proc59_U0;
    xFresize60* xFresize60_U0;
    resize_Loop_2_proc61* resize_Loop_2_proc61_U0;
    fifo_w24_d2_A* in_image_V_V_U;
    fifo_w24_d2_A* out_image_V_V_U;
    start_for_xFresizJfO* start_for_xFresizJfO_U;
    start_for_resize_KfY* start_for_resize_KfY_U;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > resize_Loop_1_proc59_U0_ap_start;
    sc_signal< sc_logic > resize_Loop_1_proc59_U0_ap_done;
    sc_signal< sc_logic > resize_Loop_1_proc59_U0_ap_continue;
    sc_signal< sc_logic > resize_Loop_1_proc59_U0_ap_idle;
    sc_signal< sc_logic > resize_Loop_1_proc59_U0_ap_ready;
    sc_signal< sc_logic > resize_Loop_1_proc59_U0_start_out;
    sc_signal< sc_logic > resize_Loop_1_proc59_U0_start_write;
    sc_signal< sc_logic > resize_Loop_1_proc59_U0_p_src_data_V_read;
    sc_signal< sc_lv<24> > resize_Loop_1_proc59_U0_in_image_V_V_din;
    sc_signal< sc_logic > resize_Loop_1_proc59_U0_in_image_V_V_write;
    sc_signal< sc_logic > xFresize60_U0_ap_start;
    sc_signal< sc_logic > xFresize60_U0_ap_done;
    sc_signal< sc_logic > xFresize60_U0_ap_continue;
    sc_signal< sc_logic > xFresize60_U0_ap_idle;
    sc_signal< sc_logic > xFresize60_U0_ap_ready;
    sc_signal< sc_logic > xFresize60_U0_start_out;
    sc_signal< sc_logic > xFresize60_U0_start_write;
    sc_signal< sc_logic > xFresize60_U0_p_in_mat_V_V_read;
    sc_signal< sc_lv<24> > xFresize60_U0_p_out_mat_V_V_din;
    sc_signal< sc_logic > xFresize60_U0_p_out_mat_V_V_write;
    sc_signal< sc_lv<32> > xFresize60_U0_xc_out;
    sc_signal< sc_logic > xFresize60_U0_xc_out_ap_vld;
    sc_signal< sc_lv<32> > xFresize60_U0_yc_out;
    sc_signal< sc_logic > xFresize60_U0_yc_out_ap_vld;
    sc_signal< sc_lv<32> > xFresize60_U0_anglexcomp;
    sc_signal< sc_logic > xFresize60_U0_anglexcomp_ap_vld;
    sc_signal< sc_lv<32> > xFresize60_U0_angleycomp;
    sc_signal< sc_logic > xFresize60_U0_angleycomp_ap_vld;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > resize_Loop_2_proc61_U0_ap_start;
    sc_signal< sc_logic > resize_Loop_2_proc61_U0_ap_done;
    sc_signal< sc_logic > resize_Loop_2_proc61_U0_ap_continue;
    sc_signal< sc_logic > resize_Loop_2_proc61_U0_ap_idle;
    sc_signal< sc_logic > resize_Loop_2_proc61_U0_ap_ready;
    sc_signal< sc_logic > resize_Loop_2_proc61_U0_out_image_V_V_read;
    sc_signal< sc_lv<24> > resize_Loop_2_proc61_U0_p_dst_data_V_din;
    sc_signal< sc_logic > resize_Loop_2_proc61_U0_p_dst_data_V_write;
    sc_signal< sc_logic > in_image_V_V_full_n;
    sc_signal< sc_lv<24> > in_image_V_V_dout;
    sc_signal< sc_logic > in_image_V_V_empty_n;
    sc_signal< sc_logic > out_image_V_V_full_n;
    sc_signal< sc_lv<24> > out_image_V_V_dout;
    sc_signal< sc_logic > out_image_V_V_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_lv<1> > start_for_xFresize60_U0_din;
    sc_signal< sc_logic > start_for_xFresize60_U0_full_n;
    sc_signal< sc_lv<1> > start_for_xFresize60_U0_dout;
    sc_signal< sc_logic > start_for_xFresize60_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_resize_Loop_2_proc61_U0_din;
    sc_signal< sc_logic > start_for_resize_Loop_2_proc61_U0_full_n;
    sc_signal< sc_lv<1> > start_for_resize_Loop_2_proc61_U0_dout;
    sc_signal< sc_logic > start_for_resize_Loop_2_proc61_U0_empty_n;
    sc_signal< sc_logic > resize_Loop_2_proc61_U0_start_full_n;
    sc_signal< sc_logic > resize_Loop_2_proc61_U0_start_write;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<32> ap_const_lv32_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_anglexcomp();
    void thread_anglexcomp_ap_vld();
    void thread_angleycomp();
    void thread_angleycomp_ap_vld();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_internal_ap_ready();
    void thread_p_dst_data_V_din();
    void thread_p_dst_data_V_write();
    void thread_p_src_data_V_read();
    void thread_real_start();
    void thread_resize_Loop_1_proc59_U0_ap_continue();
    void thread_resize_Loop_1_proc59_U0_ap_start();
    void thread_resize_Loop_2_proc61_U0_ap_continue();
    void thread_resize_Loop_2_proc61_U0_ap_start();
    void thread_resize_Loop_2_proc61_U0_start_full_n();
    void thread_resize_Loop_2_proc61_U0_start_write();
    void thread_start_for_resize_Loop_2_proc61_U0_din();
    void thread_start_for_xFresize60_U0_din();
    void thread_start_out();
    void thread_start_write();
    void thread_xFresize60_U0_ap_continue();
    void thread_xFresize60_U0_ap_start();
    void thread_xc_out();
    void thread_xc_out_ap_vld();
    void thread_yc_out();
    void thread_yc_out_ap_vld();
};

}

using namespace ap_rtl;

#endif
