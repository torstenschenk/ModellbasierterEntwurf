// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Inverse_HH_
#define _Inverse_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Inverse_xf_divisibkb.h"

namespace ap_rtl {

struct Inverse : public sc_module {
    // Port declarations 10
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > x;
    sc_in< sc_lv<8> > N_read;
    sc_out< sc_lv<32> > ap_return_0;
    sc_out< sc_lv<8> > ap_return_1;


    // Module declarations
    Inverse(sc_module_name name);
    SC_HAS_PROCESS(Inverse);

    ~Inverse();

    sc_trace_file* mVcdFile;

    Inverse_xf_divisibkb* xf_division_lut_U;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<12> > xf_division_lut_address0;
    sc_signal< sc_logic > xf_division_lut_ce0;
    sc_signal< sc_lv<16> > xf_division_lut_q0;
    sc_signal< sc_lv<4> > tmpx_fu_254_p4;
    sc_signal< sc_lv<4> > tmpx_reg_558;
    sc_signal< sc_lv<4> > tmpx_4_fu_264_p4;
    sc_signal< sc_lv<4> > tmpx_4_reg_563;
    sc_signal< sc_lv<4> > tmpx_5_fu_274_p4;
    sc_signal< sc_lv<4> > tmpx_5_reg_568;
    sc_signal< sc_lv<4> > tmpx_6_fu_284_p1;
    sc_signal< sc_lv<4> > tmpx_6_reg_573;
    sc_signal< sc_lv<1> > tmp_8_fu_288_p2;
    sc_signal< sc_lv<1> > tmp_8_reg_578;
    sc_signal< sc_lv<1> > tmp_9_fu_294_p2;
    sc_signal< sc_lv<1> > tmp_9_reg_582;
    sc_signal< sc_lv<1> > tmp_10_fu_300_p2;
    sc_signal< sc_lv<1> > tmp_10_reg_586;
    sc_signal< sc_lv<1> > tmp_11_fu_306_p2;
    sc_signal< sc_lv<1> > tmp_11_reg_590;
    sc_signal< sc_lv<3> > pos_fu_320_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > B_L_fu_355_p2;
    sc_signal< sc_lv<5> > B_L_reg_606;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<5> > tmp_33_fu_361_p2;
    sc_signal< sc_lv<5> > tmp_33_reg_612;
    sc_signal< sc_lv<3> > pos_4_fu_375_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > pos_5_fu_410_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > pos_7_fu_445_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > tmp1_reg_111;
    sc_signal< sc_lv<1> > tmp_fu_312_p3;
    sc_signal< sc_lv<1> > tmp_17_fu_341_p2;
    sc_signal< sc_lv<3> > pos_6_ph1_reg_122;
    sc_signal< sc_lv<3> > pos_6_ph2_reg_133;
    sc_signal< sc_lv<1> > tmp_132_fu_367_p3;
    sc_signal< sc_lv<1> > tmp_23_fu_396_p2;
    sc_signal< sc_lv<3> > pos_6_ph3_reg_144;
    sc_signal< sc_lv<1> > tmp_134_fu_402_p3;
    sc_signal< sc_lv<1> > tmp_31_fu_431_p2;
    sc_signal< sc_lv<3> > pos_6_ph_reg_155;
    sc_signal< sc_lv<1> > tmp_133_fu_437_p3;
    sc_signal< sc_lv<1> > tmp_27_fu_466_p2;
    sc_signal< sc_lv<3> > ap_phi_mux_pos_6_phi_fu_169_p8;
    sc_signal< sc_lv<4> > ap_phi_mux_block_2_phi_fu_186_p8;
    sc_signal< sc_lv<3> > tmp_1_reg_200;
    sc_signal< sc_lv<3> > tmp_2_reg_211;
    sc_signal< sc_lv<3> > tmp_3_reg_222;
    sc_signal< sc_lv<8> > N_cast_fu_526_p1;
    sc_signal< sc_lv<8> > ap_phi_mux_N_write_assign_phi_fu_236_p4;
    sc_signal< sc_lv<8> > N_write_assign_reg_233;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<16> > ap_phi_mux_p_0_in_phi_fu_246_p4;
    sc_signal< sc_lv<16> > p_0_in_reg_242;
    sc_signal< sc_lv<64> > tmp_35_fu_516_p1;
    sc_signal< sc_lv<3> > tmp_15_fu_326_p2;
    sc_signal< sc_lv<4> > tmp_19_cast_fu_332_p1;
    sc_signal< sc_lv<4> > tmp_16_fu_336_p2;
    sc_signal< sc_lv<5> > pos_6_cast_fu_347_p1;
    sc_signal< sc_lv<5> > block_2_cast_fu_351_p1;
    sc_signal< sc_lv<3> > tmp_21_fu_381_p2;
    sc_signal< sc_lv<4> > tmp_25_cast_fu_387_p1;
    sc_signal< sc_lv<4> > tmp_22_fu_391_p2;
    sc_signal< sc_lv<3> > tmp_29_fu_416_p2;
    sc_signal< sc_lv<4> > tmp_33_cast_fu_422_p1;
    sc_signal< sc_lv<4> > tmp_30_fu_426_p2;
    sc_signal< sc_lv<3> > tmp_25_fu_451_p2;
    sc_signal< sc_lv<4> > tmp_29_cast_fu_457_p1;
    sc_signal< sc_lv<4> > tmp_26_fu_461_p2;
    sc_signal< sc_lv<15> > tmp_139_fu_477_p1;
    sc_signal< sc_lv<15> > tmp_40_cast_cast_fu_480_p1;
    sc_signal< sc_lv<15> > tmp_34_fu_483_p2;
    sc_signal< sc_lv<1> > tmp_32_fu_472_p2;
    sc_signal< sc_lv<11> > tmp_120_fu_489_p4;
    sc_signal< sc_lv<11> > tmp_121_fu_498_p4;
    sc_signal< sc_lv<11> > index_fu_508_p3;
    sc_signal< sc_lv<5> > N_fu_521_p2;
    sc_signal< sc_lv<32> > val_fu_531_p1;
    sc_signal< sc_lv<32> > ap_return_0_preg;
    sc_signal< sc_lv<8> > ap_return_1_preg;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< bool > ap_condition_171;
    sc_signal< bool > ap_condition_174;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<16> ap_const_lv16_FFFF;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<5> ap_const_lv5_14;
    static const sc_lv<8> ap_const_lv8_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_B_L_fu_355_p2();
    void thread_N_cast_fu_526_p1();
    void thread_N_fu_521_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_condition_171();
    void thread_ap_condition_174();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_N_write_assign_phi_fu_236_p4();
    void thread_ap_phi_mux_block_2_phi_fu_186_p8();
    void thread_ap_phi_mux_p_0_in_phi_fu_246_p4();
    void thread_ap_phi_mux_pos_6_phi_fu_169_p8();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_block_2_cast_fu_351_p1();
    void thread_index_fu_508_p3();
    void thread_pos_4_fu_375_p2();
    void thread_pos_5_fu_410_p2();
    void thread_pos_6_cast_fu_347_p1();
    void thread_pos_7_fu_445_p2();
    void thread_pos_fu_320_p2();
    void thread_tmp_10_fu_300_p2();
    void thread_tmp_11_fu_306_p2();
    void thread_tmp_120_fu_489_p4();
    void thread_tmp_121_fu_498_p4();
    void thread_tmp_132_fu_367_p3();
    void thread_tmp_133_fu_437_p3();
    void thread_tmp_134_fu_402_p3();
    void thread_tmp_139_fu_477_p1();
    void thread_tmp_15_fu_326_p2();
    void thread_tmp_16_fu_336_p2();
    void thread_tmp_17_fu_341_p2();
    void thread_tmp_19_cast_fu_332_p1();
    void thread_tmp_21_fu_381_p2();
    void thread_tmp_22_fu_391_p2();
    void thread_tmp_23_fu_396_p2();
    void thread_tmp_25_cast_fu_387_p1();
    void thread_tmp_25_fu_451_p2();
    void thread_tmp_26_fu_461_p2();
    void thread_tmp_27_fu_466_p2();
    void thread_tmp_29_cast_fu_457_p1();
    void thread_tmp_29_fu_416_p2();
    void thread_tmp_30_fu_426_p2();
    void thread_tmp_31_fu_431_p2();
    void thread_tmp_32_fu_472_p2();
    void thread_tmp_33_cast_fu_422_p1();
    void thread_tmp_33_fu_361_p2();
    void thread_tmp_34_fu_483_p2();
    void thread_tmp_35_fu_516_p1();
    void thread_tmp_40_cast_cast_fu_480_p1();
    void thread_tmp_8_fu_288_p2();
    void thread_tmp_9_fu_294_p2();
    void thread_tmp_fu_312_p3();
    void thread_tmpx_4_fu_264_p4();
    void thread_tmpx_5_fu_274_p4();
    void thread_tmpx_6_fu_284_p1();
    void thread_tmpx_fu_254_p4();
    void thread_val_fu_531_p1();
    void thread_xf_division_lut_address0();
    void thread_xf_division_lut_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
