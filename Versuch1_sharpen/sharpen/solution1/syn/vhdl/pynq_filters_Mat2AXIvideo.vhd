-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pynq_filters_Mat2AXIvideo is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_0_V_empty_n : IN STD_LOGIC;
    img_data_stream_0_V_read : OUT STD_LOGIC;
    img_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_1_V_empty_n : IN STD_LOGIC;
    img_data_stream_1_V_read : OUT STD_LOGIC;
    img_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_2_V_empty_n : IN STD_LOGIC;
    img_data_stream_2_V_read : OUT STD_LOGIC;
    out_data_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    out_data_TVALID : OUT STD_LOGIC;
    out_data_TREADY : IN STD_LOGIC;
    out_data_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_data_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_data_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_data_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_data_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of pynq_filters_Mat2AXIvideo is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st6_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_27F : STD_LOGIC_VECTOR (9 downto 0) := "1001111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_22 : BOOLEAN;
    signal AXI_video_strm_V_data_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_data_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_1_sRdy : STD_LOGIC;
    signal AXI_video_strm_V_data_V_1_mVld : STD_LOGIC := '0';
    signal AXI_video_strm_V_data_V_1_areset_d : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_sRdy : STD_LOGIC;
    signal AXI_video_strm_V_keep_V_1_mVld : STD_LOGIC := '0';
    signal AXI_video_strm_V_keep_V_1_areset_d : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_sRdy : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_1_mVld : STD_LOGIC := '0';
    signal AXI_video_strm_V_strb_V_1_areset_d : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_data_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_1_sRdy : STD_LOGIC;
    signal AXI_video_strm_V_user_V_1_mVld : STD_LOGIC := '0';
    signal AXI_video_strm_V_user_V_1_areset_d : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_data_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_1_sRdy : STD_LOGIC;
    signal AXI_video_strm_V_last_V_1_mVld : STD_LOGIC := '0';
    signal AXI_video_strm_V_last_V_1_areset_d : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_sRdy : STD_LOGIC;
    signal AXI_video_strm_V_id_V_1_mVld : STD_LOGIC := '0';
    signal AXI_video_strm_V_id_V_1_areset_d : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_sRdy : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_1_mVld : STD_LOGIC := '0';
    signal AXI_video_strm_V_dest_V_1_areset_d : STD_LOGIC;
    signal img_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_196 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal exitcond6_reg_234 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_data_stream_1_V_blk_n : STD_LOGIC;
    signal img_data_stream_2_V_blk_n : STD_LOGIC;
    signal out_data_TDATA_blk_n : STD_LOGIC;
    signal ap_reg_ppstg_exitcond6_reg_234_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_4_reg_152 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond5_fu_168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_225 : BOOLEAN;
    signal ap_sig_240 : BOOLEAN;
    signal i_V_fu_174_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_V_reg_229 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond6_fu_180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_256 : BOOLEAN;
    signal j_V_fu_186_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal axi_last_V_fu_192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V_reg_243 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_fu_202_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_s_reg_141 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_292 : BOOLEAN;
    signal ap_sig_cseq_ST_st6_fsm_3 : STD_LOGIC;
    signal ap_sig_300 : BOOLEAN;
    signal tmp_user_V_fu_90 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);


begin




    AXI_video_strm_V_data_V_1_mVld_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_1_mVld <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = AXI_video_strm_V_data_V_1_vld_in)) then 
                    AXI_video_strm_V_data_V_1_mVld <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = AXI_video_strm_V_data_V_1_ack_out)) then 
                    AXI_video_strm_V_data_V_1_mVld <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_dest_V_1_mVld_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_dest_V_1_mVld <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = AXI_video_strm_V_dest_V_1_vld_in)) then 
                    AXI_video_strm_V_dest_V_1_mVld <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = AXI_video_strm_V_dest_V_1_ack_out)) then 
                    AXI_video_strm_V_dest_V_1_mVld <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_id_V_1_mVld_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_id_V_1_mVld <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = AXI_video_strm_V_id_V_1_vld_in)) then 
                    AXI_video_strm_V_id_V_1_mVld <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = AXI_video_strm_V_id_V_1_ack_out)) then 
                    AXI_video_strm_V_id_V_1_mVld <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_keep_V_1_mVld_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_keep_V_1_mVld <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = AXI_video_strm_V_keep_V_1_vld_in)) then 
                    AXI_video_strm_V_keep_V_1_mVld <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = AXI_video_strm_V_keep_V_1_ack_out)) then 
                    AXI_video_strm_V_keep_V_1_mVld <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_1_mVld_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_1_mVld <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = AXI_video_strm_V_last_V_1_vld_in)) then 
                    AXI_video_strm_V_last_V_1_mVld <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = AXI_video_strm_V_last_V_1_ack_out)) then 
                    AXI_video_strm_V_last_V_1_mVld <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_strb_V_1_mVld_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_strb_V_1_mVld <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = AXI_video_strm_V_strb_V_1_vld_in)) then 
                    AXI_video_strm_V_strb_V_1_mVld <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = AXI_video_strm_V_strb_V_1_ack_out)) then 
                    AXI_video_strm_V_strb_V_1_mVld <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_1_mVld_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_1_mVld <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = AXI_video_strm_V_user_V_1_vld_in)) then 
                    AXI_video_strm_V_user_V_1_mVld <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = AXI_video_strm_V_user_V_1_ack_out)) then 
                    AXI_video_strm_V_user_V_1_mVld <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond5_fu_168_p2)) and not(ap_sig_240))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond6_fu_180_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond5_fu_168_p2) and not(ap_sig_240))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond6_fu_180_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond5_fu_168_p2) and not(ap_sig_240)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond6_fu_180_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond5_fu_168_p2) and not(ap_sig_240))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    p_4_reg_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond6_fu_180_p2))) then 
                p_4_reg_152 <= j_V_fu_186_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond5_fu_168_p2) and not(ap_sig_240))) then 
                p_4_reg_152 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    p_s_reg_141_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_3)) then 
                p_s_reg_141 <= i_V_reg_229;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_292))) then 
                p_s_reg_141 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    tmp_user_V_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond6_reg_234 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
                tmp_user_V_fu_90 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_292))) then 
                tmp_user_V_fu_90 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_const_logic_1)) then
                AXI_video_strm_V_data_V_1_areset_d <= ap_rst;
                AXI_video_strm_V_dest_V_1_areset_d <= ap_rst;
                AXI_video_strm_V_id_V_1_areset_d <= ap_rst;
                AXI_video_strm_V_keep_V_1_areset_d <= ap_rst;
                AXI_video_strm_V_last_V_1_areset_d <= ap_rst;
                AXI_video_strm_V_strb_V_1_areset_d <= ap_rst;
                AXI_video_strm_V_user_V_1_areset_d <= ap_rst;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = AXI_video_strm_V_data_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_1_sRdy))) then
                AXI_video_strm_V_data_V_1_data_reg <= tmp_data_V_fu_202_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = AXI_video_strm_V_last_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_1_sRdy))) then
                AXI_video_strm_V_last_V_1_data_reg <= axi_last_V_reg_243;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = AXI_video_strm_V_user_V_1_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_1_sRdy))) then
                AXI_video_strm_V_user_V_1_data_reg <= tmp_user_V_fu_90;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then
                ap_reg_ppstg_exitcond6_reg_234_pp0_iter1 <= exitcond6_reg_234;
                exitcond6_reg_234 <= exitcond6_fu_180_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond6_fu_180_p2))) then
                axi_last_V_reg_243 <= axi_last_V_fu_192_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(ap_sig_240))) then
                i_V_reg_229 <= i_V_fu_174_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, AXI_video_strm_V_data_V_1_ack_in, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, exitcond6_reg_234, ap_reg_ppstg_exitcond6_reg_234_pp0_iter1, exitcond5_fu_168_p2, ap_sig_240, exitcond6_fu_180_p2, ap_sig_256, ap_sig_292)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_292)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((not((ap_const_lv1_0 = exitcond5_fu_168_p2)) and not(ap_sig_240))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                elsif (((ap_const_lv1_0 = exitcond5_fu_168_p2) and not(ap_sig_240))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond6_fu_180_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond6_fu_180_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st6_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    AXI_video_strm_V_data_V_1_ack_in_assign_proc : process(out_data_TREADY, AXI_video_strm_V_data_V_1_mVld, AXI_video_strm_V_data_V_1_areset_d)
    begin
        AXI_video_strm_V_data_V_1_ack_in <= (not(AXI_video_strm_V_data_V_1_areset_d) and (out_data_TREADY or not(AXI_video_strm_V_data_V_1_mVld)));
    end process;

    AXI_video_strm_V_data_V_1_ack_out <= out_data_TREADY;

    AXI_video_strm_V_data_V_1_sRdy_assign_proc : process(out_data_TREADY, AXI_video_strm_V_data_V_1_mVld, AXI_video_strm_V_data_V_1_areset_d)
    begin
        AXI_video_strm_V_data_V_1_sRdy <= (not(AXI_video_strm_V_data_V_1_areset_d) and (out_data_TREADY or not(AXI_video_strm_V_data_V_1_mVld)));
    end process;


    AXI_video_strm_V_data_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_reg_234, ap_reg_ppstg_exitcond6_reg_234_pp0_iter1, ap_sig_256)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond6_reg_234 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_dest_V_1_ack_out <= out_data_TREADY;

    AXI_video_strm_V_dest_V_1_sRdy_assign_proc : process(out_data_TREADY, AXI_video_strm_V_dest_V_1_mVld, AXI_video_strm_V_dest_V_1_areset_d)
    begin
        AXI_video_strm_V_dest_V_1_sRdy <= (not(AXI_video_strm_V_dest_V_1_areset_d) and (out_data_TREADY or not(AXI_video_strm_V_dest_V_1_mVld)));
    end process;


    AXI_video_strm_V_dest_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_reg_234, ap_reg_ppstg_exitcond6_reg_234_pp0_iter1, ap_sig_256)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond6_reg_234 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_id_V_1_ack_out <= out_data_TREADY;

    AXI_video_strm_V_id_V_1_sRdy_assign_proc : process(out_data_TREADY, AXI_video_strm_V_id_V_1_mVld, AXI_video_strm_V_id_V_1_areset_d)
    begin
        AXI_video_strm_V_id_V_1_sRdy <= (not(AXI_video_strm_V_id_V_1_areset_d) and (out_data_TREADY or not(AXI_video_strm_V_id_V_1_mVld)));
    end process;


    AXI_video_strm_V_id_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_reg_234, ap_reg_ppstg_exitcond6_reg_234_pp0_iter1, ap_sig_256)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond6_reg_234 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_keep_V_1_ack_out <= out_data_TREADY;

    AXI_video_strm_V_keep_V_1_sRdy_assign_proc : process(out_data_TREADY, AXI_video_strm_V_keep_V_1_mVld, AXI_video_strm_V_keep_V_1_areset_d)
    begin
        AXI_video_strm_V_keep_V_1_sRdy <= (not(AXI_video_strm_V_keep_V_1_areset_d) and (out_data_TREADY or not(AXI_video_strm_V_keep_V_1_mVld)));
    end process;


    AXI_video_strm_V_keep_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_reg_234, ap_reg_ppstg_exitcond6_reg_234_pp0_iter1, ap_sig_256)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond6_reg_234 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_last_V_1_ack_out <= out_data_TREADY;

    AXI_video_strm_V_last_V_1_sRdy_assign_proc : process(out_data_TREADY, AXI_video_strm_V_last_V_1_mVld, AXI_video_strm_V_last_V_1_areset_d)
    begin
        AXI_video_strm_V_last_V_1_sRdy <= (not(AXI_video_strm_V_last_V_1_areset_d) and (out_data_TREADY or not(AXI_video_strm_V_last_V_1_mVld)));
    end process;


    AXI_video_strm_V_last_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_reg_234, ap_reg_ppstg_exitcond6_reg_234_pp0_iter1, ap_sig_256)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond6_reg_234 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_strb_V_1_ack_out <= out_data_TREADY;

    AXI_video_strm_V_strb_V_1_sRdy_assign_proc : process(out_data_TREADY, AXI_video_strm_V_strb_V_1_mVld, AXI_video_strm_V_strb_V_1_areset_d)
    begin
        AXI_video_strm_V_strb_V_1_sRdy <= (not(AXI_video_strm_V_strb_V_1_areset_d) and (out_data_TREADY or not(AXI_video_strm_V_strb_V_1_mVld)));
    end process;


    AXI_video_strm_V_strb_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_reg_234, ap_reg_ppstg_exitcond6_reg_234_pp0_iter1, ap_sig_256)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond6_reg_234 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_user_V_1_ack_out <= out_data_TREADY;

    AXI_video_strm_V_user_V_1_sRdy_assign_proc : process(out_data_TREADY, AXI_video_strm_V_user_V_1_mVld, AXI_video_strm_V_user_V_1_areset_d)
    begin
        AXI_video_strm_V_user_V_1_sRdy <= (not(AXI_video_strm_V_user_V_1_areset_d) and (out_data_TREADY or not(AXI_video_strm_V_user_V_1_mVld)));
    end process;


    AXI_video_strm_V_user_V_1_vld_in_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_reg_234, ap_reg_ppstg_exitcond6_reg_234_pp0_iter1, ap_sig_256)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond6_reg_234 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            AXI_video_strm_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            AXI_video_strm_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond5_fu_168_p2, ap_sig_cseq_ST_st2_fsm_1, ap_sig_240)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond5_fu_168_p2)) and not(ap_sig_240)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond5_fu_168_p2, ap_sig_cseq_ST_st2_fsm_1, ap_sig_240)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond5_fu_168_p2)) and not(ap_sig_240))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_196_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_196 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_225_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_225 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_240_assign_proc : process(AXI_video_strm_V_data_V_1_sRdy, AXI_video_strm_V_keep_V_1_sRdy, AXI_video_strm_V_strb_V_1_sRdy, AXI_video_strm_V_user_V_1_sRdy, AXI_video_strm_V_last_V_1_sRdy, AXI_video_strm_V_id_V_1_sRdy, AXI_video_strm_V_dest_V_1_sRdy)
    begin
                ap_sig_240 <= ((AXI_video_strm_V_data_V_1_sRdy = ap_const_logic_0) or (AXI_video_strm_V_keep_V_1_sRdy = ap_const_logic_0) or (AXI_video_strm_V_strb_V_1_sRdy = ap_const_logic_0) or (AXI_video_strm_V_user_V_1_sRdy = ap_const_logic_0) or (AXI_video_strm_V_last_V_1_sRdy = ap_const_logic_0) or (AXI_video_strm_V_id_V_1_sRdy = ap_const_logic_0) or (AXI_video_strm_V_dest_V_1_sRdy = ap_const_logic_0));
    end process;


    ap_sig_256_assign_proc : process(img_data_stream_0_V_empty_n, img_data_stream_1_V_empty_n, img_data_stream_2_V_empty_n, exitcond6_reg_234)
    begin
                ap_sig_256 <= (((exitcond6_reg_234 = ap_const_lv1_0) and (img_data_stream_0_V_empty_n = ap_const_logic_0)) or ((exitcond6_reg_234 = ap_const_lv1_0) and (img_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond6_reg_234 = ap_const_lv1_0) and (img_data_stream_2_V_empty_n = ap_const_logic_0)));
    end process;


    ap_sig_292_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_292 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_sig_300_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_300 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_196)
    begin
        if (ap_sig_196) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_22)
    begin
        if (ap_sig_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_225)
    begin
        if (ap_sig_225) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_3_assign_proc : process(ap_sig_300)
    begin
        if (ap_sig_300) then 
            ap_sig_cseq_ST_st6_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;

    axi_last_V_fu_192_p2 <= "1" when (p_4_reg_152 = ap_const_lv10_27F) else "0";
    exitcond5_fu_168_p2 <= "1" when (p_s_reg_141 = ap_const_lv9_1E0) else "0";
    exitcond6_fu_180_p2 <= "1" when (p_4_reg_152 = ap_const_lv10_280) else "0";
    i_V_fu_174_p2 <= std_logic_vector(unsigned(p_s_reg_141) + unsigned(ap_const_lv9_1));

    img_data_stream_0_V_blk_n_assign_proc : process(img_data_stream_0_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond6_reg_234)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond6_reg_234 = ap_const_lv1_0))) then 
            img_data_stream_0_V_blk_n <= img_data_stream_0_V_empty_n;
        else 
            img_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_data_stream_0_V_read_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_reg_234, ap_reg_ppstg_exitcond6_reg_234_pp0_iter1, ap_sig_256)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond6_reg_234 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            img_data_stream_0_V_read <= ap_const_logic_1;
        else 
            img_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_data_stream_1_V_blk_n_assign_proc : process(img_data_stream_1_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond6_reg_234)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond6_reg_234 = ap_const_lv1_0))) then 
            img_data_stream_1_V_blk_n <= img_data_stream_1_V_empty_n;
        else 
            img_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_data_stream_1_V_read_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_reg_234, ap_reg_ppstg_exitcond6_reg_234_pp0_iter1, ap_sig_256)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond6_reg_234 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            img_data_stream_1_V_read <= ap_const_logic_1;
        else 
            img_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_data_stream_2_V_blk_n_assign_proc : process(img_data_stream_2_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond6_reg_234)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond6_reg_234 = ap_const_lv1_0))) then 
            img_data_stream_2_V_blk_n <= img_data_stream_2_V_empty_n;
        else 
            img_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_data_stream_2_V_read_assign_proc : process(AXI_video_strm_V_data_V_1_ack_in, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_reg_234, ap_reg_ppstg_exitcond6_reg_234_pp0_iter1, ap_sig_256)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond6_reg_234 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_sig_256 or ((exitcond6_reg_234 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1) and (ap_const_logic_0 = AXI_video_strm_V_data_V_1_ack_in)))))) then 
            img_data_stream_2_V_read <= ap_const_logic_1;
        else 
            img_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_186_p2 <= std_logic_vector(unsigned(p_4_reg_152) + unsigned(ap_const_lv10_1));
    out_data_TDATA <= AXI_video_strm_V_data_V_1_data_reg;

    out_data_TDATA_blk_n_assign_proc : process(AXI_video_strm_V_data_V_1_sRdy, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond6_reg_234, ap_reg_ppstg_exitcond6_reg_234_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond6_reg_234 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_234_pp0_iter1)))) then 
            out_data_TDATA_blk_n <= AXI_video_strm_V_data_V_1_sRdy;
        else 
            out_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_data_TDEST <= ap_const_lv1_0;
    out_data_TID <= ap_const_lv1_0;
    out_data_TKEEP <= ap_const_lv3_7;
    out_data_TLAST <= AXI_video_strm_V_last_V_1_data_reg;
    out_data_TSTRB <= ap_const_lv3_0;
    out_data_TUSER <= AXI_video_strm_V_user_V_1_data_reg;
    out_data_TVALID <= AXI_video_strm_V_dest_V_1_mVld;
    tmp_data_V_fu_202_p4 <= ((img_data_stream_2_V_dout & img_data_stream_1_V_dout) & img_data_stream_0_V_dout);
end behav;
