// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pynq_filters_arithm_pro_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src1_data_stream_0_V_V_dout,
        src1_data_stream_0_V_V_empty_n,
        src1_data_stream_0_V_V_read,
        src1_data_stream_1_V_V_dout,
        src1_data_stream_1_V_V_empty_n,
        src1_data_stream_1_V_V_read,
        src1_data_stream_2_V_V_dout,
        src1_data_stream_2_V_V_empty_n,
        src1_data_stream_2_V_V_read,
        src2_data_stream_0_V_V_dout,
        src2_data_stream_0_V_V_empty_n,
        src2_data_stream_0_V_V_read,
        src2_data_stream_1_V_V_dout,
        src2_data_stream_1_V_V_empty_n,
        src2_data_stream_1_V_V_read,
        src2_data_stream_2_V_V_dout,
        src2_data_stream_2_V_V_empty_n,
        src2_data_stream_2_V_V_read,
        dst_data_stream_0_V_V_din,
        dst_data_stream_0_V_V_full_n,
        dst_data_stream_0_V_V_write,
        dst_data_stream_1_V_V_din,
        dst_data_stream_1_V_V_full_n,
        dst_data_stream_1_V_V_write,
        dst_data_stream_2_V_V_din,
        dst_data_stream_2_V_V_full_n,
        dst_data_stream_2_V_V_write
);

parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 4'b100;
parameter    ap_ST_st6_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv9_1E0 = 9'b111100000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv10_280 = 10'b1010000000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv10_1FF = 10'b111111111;
parameter    ap_const_lv10_200 = 10'b1000000000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [9:0] src1_data_stream_0_V_V_dout;
input   src1_data_stream_0_V_V_empty_n;
output   src1_data_stream_0_V_V_read;
input  [9:0] src1_data_stream_1_V_V_dout;
input   src1_data_stream_1_V_V_empty_n;
output   src1_data_stream_1_V_V_read;
input  [9:0] src1_data_stream_2_V_V_dout;
input   src1_data_stream_2_V_V_empty_n;
output   src1_data_stream_2_V_V_read;
input  [9:0] src2_data_stream_0_V_V_dout;
input   src2_data_stream_0_V_V_empty_n;
output   src2_data_stream_0_V_V_read;
input  [9:0] src2_data_stream_1_V_V_dout;
input   src2_data_stream_1_V_V_empty_n;
output   src2_data_stream_1_V_V_read;
input  [9:0] src2_data_stream_2_V_V_dout;
input   src2_data_stream_2_V_V_empty_n;
output   src2_data_stream_2_V_V_read;
output  [9:0] dst_data_stream_0_V_V_din;
input   dst_data_stream_0_V_V_full_n;
output   dst_data_stream_0_V_V_write;
output  [9:0] dst_data_stream_1_V_V_din;
input   dst_data_stream_1_V_V_full_n;
output   dst_data_stream_1_V_V_write;
output  [9:0] dst_data_stream_2_V_V_din;
input   dst_data_stream_2_V_V_full_n;
output   dst_data_stream_2_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src1_data_stream_0_V_V_read;
reg src1_data_stream_1_V_V_read;
reg src1_data_stream_2_V_V_read;
reg src2_data_stream_0_V_V_read;
reg src2_data_stream_1_V_V_read;
reg src2_data_stream_2_V_V_read;
reg dst_data_stream_0_V_V_write;
reg dst_data_stream_1_V_V_write;
reg dst_data_stream_2_V_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_21;
reg    src1_data_stream_0_V_V_blk_n;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_68;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it2;
reg   [0:0] exitcond4_reg_449;
reg    src1_data_stream_1_V_V_blk_n;
reg    src1_data_stream_2_V_V_blk_n;
reg    src2_data_stream_0_V_V_blk_n;
reg    src2_data_stream_1_V_V_blk_n;
reg    src2_data_stream_2_V_V_blk_n;
reg    dst_data_stream_0_V_V_blk_n;
reg   [0:0] ap_reg_ppstg_exitcond4_reg_449_pp0_iter1;
reg    dst_data_stream_1_V_V_blk_n;
reg    dst_data_stream_2_V_V_blk_n;
reg   [9:0] p_2_reg_156;
wire   [0:0] exitcond3_fu_167_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_101;
wire   [8:0] i_V_fu_173_p2;
reg   [8:0] i_V_reg_444;
wire   [0:0] exitcond4_fu_179_p2;
reg    ap_sig_123;
reg    ap_sig_133;
wire   [9:0] j_V_fu_185_p2;
wire   [9:0] p_Val2_7_fu_199_p2;
reg   [9:0] p_Val2_7_reg_458;
reg   [0:0] isneg_reg_464;
reg   [0:0] newsignbit_reg_471;
wire   [9:0] p_Val2_10_fu_235_p2;
reg   [9:0] p_Val2_10_reg_478;
reg   [0:0] isneg_1_reg_484;
reg   [0:0] newsignbit_1_reg_491;
wire   [9:0] p_Val2_15_fu_271_p2;
reg   [9:0] p_Val2_15_reg_498;
reg   [0:0] isneg_2_reg_504;
reg   [0:0] newsignbit_2_reg_511;
reg   [8:0] p_s_reg_145;
reg    ap_sig_cseq_ST_st6_fsm_3;
reg    ap_sig_180;
wire  signed [10:0] lhs_V_2_cast_fu_191_p1;
wire  signed [10:0] rhs_V_cast_fu_195_p1;
wire   [10:0] p_Val2_6_fu_205_p2;
wire  signed [10:0] lhs_V_2_1_cast_fu_227_p1;
wire  signed [10:0] rhs_V_1_cast_fu_231_p1;
wire   [10:0] p_Val2_s_fu_241_p2;
wire  signed [10:0] lhs_V_2_2_cast_fu_263_p1;
wire  signed [10:0] rhs_V_2_cast_fu_267_p1;
wire   [10:0] p_Val2_14_fu_277_p2;
wire   [0:0] tmp_30_fu_304_p2;
wire   [0:0] tmp_9_i_i_fu_299_p2;
wire   [0:0] brmerge_i_i_i_i_i_fu_314_p2;
wire   [0:0] underflow_fu_309_p2;
wire   [0:0] underflow_not_i_i_fu_318_p2;
wire   [9:0] p_Val2_7_mux_i_i_fu_323_p3;
wire   [9:0] p_Val2_7_i_i_fu_330_p3;
wire   [0:0] tmp_32_fu_351_p2;
wire   [0:0] tmp_9_i_i4_fu_346_p2;
wire   [0:0] brmerge_i_i_i_i_i6_fu_361_p2;
wire   [0:0] underflow_1_fu_356_p2;
wire   [0:0] underflow_not_i_i7_fu_365_p2;
wire   [9:0] p_Val2_7_mux_i_i8_fu_370_p3;
wire   [9:0] p_Val2_7_i_i9_fu_377_p3;
wire   [0:0] tmp_34_fu_398_p2;
wire   [0:0] tmp_9_i_i1_fu_393_p2;
wire   [0:0] brmerge_i_i_i_i_i1_fu_408_p2;
wire   [0:0] underflow_2_fu_403_p2;
wire   [0:0] underflow_not_i_i1_fu_412_p2;
wire   [9:0] p_Val2_7_mux_i_i1_fu_417_p3;
wire   [9:0] p_Val2_7_i_i1_fu_424_p3;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'b1;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)) & ~(1'b0 == exitcond4_fu_179_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond3_fu_167_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)) & (1'b0 == exitcond4_fu_179_p2))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond3_fu_167_p2)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)) & ~(1'b0 == exitcond4_fu_179_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond3_fu_167_p2))) begin
            ap_reg_ppiten_pp0_it2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)) & (1'b0 == exitcond4_fu_179_p2))) begin
        p_2_reg_156 <= j_V_fu_185_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond3_fu_167_p2))) begin
        p_2_reg_156 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_3)) begin
        p_s_reg_145 <= i_V_reg_444;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        p_s_reg_145 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        ap_reg_ppstg_exitcond4_reg_449_pp0_iter1 <= exitcond4_reg_449;
        exitcond4_reg_449 <= exitcond4_fu_179_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_V_reg_444 <= i_V_fu_173_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond4_reg_449 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        isneg_1_reg_484 <= p_Val2_s_fu_241_p2[ap_const_lv32_A];
        isneg_2_reg_504 <= p_Val2_14_fu_277_p2[ap_const_lv32_A];
        isneg_reg_464 <= p_Val2_6_fu_205_p2[ap_const_lv32_A];
        newsignbit_1_reg_491 <= p_Val2_10_fu_235_p2[ap_const_lv32_9];
        newsignbit_2_reg_511 <= p_Val2_15_fu_271_p2[ap_const_lv32_9];
        newsignbit_reg_471 <= p_Val2_7_fu_199_p2[ap_const_lv32_9];
        p_Val2_10_reg_478 <= p_Val2_10_fu_235_p2;
        p_Val2_15_reg_498 <= p_Val2_15_fu_271_p2;
        p_Val2_7_reg_458 <= p_Val2_7_fu_199_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond3_fu_167_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond3_fu_167_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_68) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_21) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_101) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_180) begin
        ap_sig_cseq_ST_st6_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_reg_449_pp0_iter1))) begin
        dst_data_stream_0_V_V_blk_n = dst_data_stream_0_V_V_full_n;
    end else begin
        dst_data_stream_0_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_reg_449_pp0_iter1) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        dst_data_stream_0_V_V_write = 1'b1;
    end else begin
        dst_data_stream_0_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_reg_449_pp0_iter1))) begin
        dst_data_stream_1_V_V_blk_n = dst_data_stream_1_V_V_full_n;
    end else begin
        dst_data_stream_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_reg_449_pp0_iter1) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        dst_data_stream_1_V_V_write = 1'b1;
    end else begin
        dst_data_stream_1_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_reg_449_pp0_iter1))) begin
        dst_data_stream_2_V_V_blk_n = dst_data_stream_2_V_V_full_n;
    end else begin
        dst_data_stream_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond4_reg_449_pp0_iter1) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        dst_data_stream_2_V_V_write = 1'b1;
    end else begin
        dst_data_stream_2_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond4_reg_449 == 1'b0))) begin
        src1_data_stream_0_V_V_blk_n = src1_data_stream_0_V_V_empty_n;
    end else begin
        src1_data_stream_0_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond4_reg_449 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        src1_data_stream_0_V_V_read = 1'b1;
    end else begin
        src1_data_stream_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond4_reg_449 == 1'b0))) begin
        src1_data_stream_1_V_V_blk_n = src1_data_stream_1_V_V_empty_n;
    end else begin
        src1_data_stream_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond4_reg_449 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        src1_data_stream_1_V_V_read = 1'b1;
    end else begin
        src1_data_stream_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond4_reg_449 == 1'b0))) begin
        src1_data_stream_2_V_V_blk_n = src1_data_stream_2_V_V_empty_n;
    end else begin
        src1_data_stream_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond4_reg_449 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        src1_data_stream_2_V_V_read = 1'b1;
    end else begin
        src1_data_stream_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond4_reg_449 == 1'b0))) begin
        src2_data_stream_0_V_V_blk_n = src2_data_stream_0_V_V_empty_n;
    end else begin
        src2_data_stream_0_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond4_reg_449 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        src2_data_stream_0_V_V_read = 1'b1;
    end else begin
        src2_data_stream_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond4_reg_449 == 1'b0))) begin
        src2_data_stream_1_V_V_blk_n = src2_data_stream_1_V_V_empty_n;
    end else begin
        src2_data_stream_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond4_reg_449 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        src2_data_stream_1_V_V_read = 1'b1;
    end else begin
        src2_data_stream_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond4_reg_449 == 1'b0))) begin
        src2_data_stream_2_V_V_blk_n = src2_data_stream_2_V_V_empty_n;
    end else begin
        src2_data_stream_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond4_reg_449 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        src2_data_stream_2_V_V_read = 1'b1;
    end else begin
        src2_data_stream_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(1'b0 == exitcond3_fu_167_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp0_it2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)) & ~(1'b1 == ap_reg_ppiten_pp0_it1)) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)) & ~(1'b0 == exitcond4_fu_179_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if ((((1'b1 == ap_reg_ppiten_pp0_it2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)) & ~(1'b1 == ap_reg_ppiten_pp0_it1)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)) & ~(1'b0 == exitcond4_fu_179_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st6_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st6_fsm_3 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_101 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_123 = (((exitcond4_reg_449 == 1'b0) & (src1_data_stream_0_V_V_empty_n == 1'b0)) | ((exitcond4_reg_449 == 1'b0) & (src1_data_stream_1_V_V_empty_n == 1'b0)) | ((exitcond4_reg_449 == 1'b0) & (src1_data_stream_2_V_V_empty_n == 1'b0)) | ((exitcond4_reg_449 == 1'b0) & (src2_data_stream_0_V_V_empty_n == 1'b0)) | ((exitcond4_reg_449 == 1'b0) & (src2_data_stream_1_V_V_empty_n == 1'b0)) | ((exitcond4_reg_449 == 1'b0) & (src2_data_stream_2_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_sig_133 = (((1'b0 == ap_reg_ppstg_exitcond4_reg_449_pp0_iter1) & (dst_data_stream_0_V_V_full_n == 1'b0)) | ((1'b0 == ap_reg_ppstg_exitcond4_reg_449_pp0_iter1) & (dst_data_stream_1_V_V_full_n == 1'b0)) | ((1'b0 == ap_reg_ppstg_exitcond4_reg_449_pp0_iter1) & (dst_data_stream_2_V_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_sig_180 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_21 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_68 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign brmerge_i_i_i_i_i1_fu_408_p2 = (isneg_2_reg_504 ^ newsignbit_2_reg_511);

assign brmerge_i_i_i_i_i6_fu_361_p2 = (isneg_1_reg_484 ^ newsignbit_1_reg_491);

assign brmerge_i_i_i_i_i_fu_314_p2 = (isneg_reg_464 ^ newsignbit_reg_471);

assign dst_data_stream_0_V_V_din = ((underflow_not_i_i_fu_318_p2[0:0] === 1'b1) ? p_Val2_7_mux_i_i_fu_323_p3 : p_Val2_7_i_i_fu_330_p3);

assign dst_data_stream_1_V_V_din = ((underflow_not_i_i7_fu_365_p2[0:0] === 1'b1) ? p_Val2_7_mux_i_i8_fu_370_p3 : p_Val2_7_i_i9_fu_377_p3);

assign dst_data_stream_2_V_V_din = ((underflow_not_i_i1_fu_412_p2[0:0] === 1'b1) ? p_Val2_7_mux_i_i1_fu_417_p3 : p_Val2_7_i_i1_fu_424_p3);

assign exitcond3_fu_167_p2 = ((p_s_reg_145 == ap_const_lv9_1E0) ? 1'b1 : 1'b0);

assign exitcond4_fu_179_p2 = ((p_2_reg_156 == ap_const_lv10_280) ? 1'b1 : 1'b0);

assign i_V_fu_173_p2 = (p_s_reg_145 + ap_const_lv9_1);

assign j_V_fu_185_p2 = (p_2_reg_156 + ap_const_lv10_1);

assign lhs_V_2_1_cast_fu_227_p1 = $signed(src1_data_stream_1_V_V_dout);

assign lhs_V_2_2_cast_fu_263_p1 = $signed(src1_data_stream_2_V_V_dout);

assign lhs_V_2_cast_fu_191_p1 = $signed(src1_data_stream_0_V_V_dout);

assign p_Val2_10_fu_235_p2 = (src2_data_stream_1_V_V_dout + src1_data_stream_1_V_V_dout);

assign p_Val2_14_fu_277_p2 = ($signed(lhs_V_2_2_cast_fu_263_p1) + $signed(rhs_V_2_cast_fu_267_p1));

assign p_Val2_15_fu_271_p2 = (src2_data_stream_2_V_V_dout + src1_data_stream_2_V_V_dout);

assign p_Val2_6_fu_205_p2 = ($signed(lhs_V_2_cast_fu_191_p1) + $signed(rhs_V_cast_fu_195_p1));

assign p_Val2_7_fu_199_p2 = (src2_data_stream_0_V_V_dout + src1_data_stream_0_V_V_dout);

assign p_Val2_7_i_i1_fu_424_p3 = ((underflow_2_fu_403_p2[0:0] === 1'b1) ? ap_const_lv10_200 : p_Val2_15_reg_498);

assign p_Val2_7_i_i9_fu_377_p3 = ((underflow_1_fu_356_p2[0:0] === 1'b1) ? ap_const_lv10_200 : p_Val2_10_reg_478);

assign p_Val2_7_i_i_fu_330_p3 = ((underflow_fu_309_p2[0:0] === 1'b1) ? ap_const_lv10_200 : p_Val2_7_reg_458);

assign p_Val2_7_mux_i_i1_fu_417_p3 = ((brmerge_i_i_i_i_i1_fu_408_p2[0:0] === 1'b1) ? ap_const_lv10_1FF : p_Val2_15_reg_498);

assign p_Val2_7_mux_i_i8_fu_370_p3 = ((brmerge_i_i_i_i_i6_fu_361_p2[0:0] === 1'b1) ? ap_const_lv10_1FF : p_Val2_10_reg_478);

assign p_Val2_7_mux_i_i_fu_323_p3 = ((brmerge_i_i_i_i_i_fu_314_p2[0:0] === 1'b1) ? ap_const_lv10_1FF : p_Val2_7_reg_458);

assign p_Val2_s_fu_241_p2 = ($signed(lhs_V_2_1_cast_fu_227_p1) + $signed(rhs_V_1_cast_fu_231_p1));

assign rhs_V_1_cast_fu_231_p1 = $signed(src2_data_stream_1_V_V_dout);

assign rhs_V_2_cast_fu_267_p1 = $signed(src2_data_stream_2_V_V_dout);

assign rhs_V_cast_fu_195_p1 = $signed(src2_data_stream_0_V_V_dout);

assign tmp_30_fu_304_p2 = (newsignbit_reg_471 ^ 1'b1);

assign tmp_32_fu_351_p2 = (newsignbit_1_reg_491 ^ 1'b1);

assign tmp_34_fu_398_p2 = (newsignbit_2_reg_511 ^ 1'b1);

assign tmp_9_i_i1_fu_393_p2 = (isneg_2_reg_504 ^ 1'b1);

assign tmp_9_i_i4_fu_346_p2 = (isneg_1_reg_484 ^ 1'b1);

assign tmp_9_i_i_fu_299_p2 = (isneg_reg_464 ^ 1'b1);

assign underflow_1_fu_356_p2 = (isneg_1_reg_484 & tmp_32_fu_351_p2);

assign underflow_2_fu_403_p2 = (isneg_2_reg_504 & tmp_34_fu_398_p2);

assign underflow_fu_309_p2 = (isneg_reg_464 & tmp_30_fu_304_p2);

assign underflow_not_i_i1_fu_412_p2 = (newsignbit_2_reg_511 | tmp_9_i_i1_fu_393_p2);

assign underflow_not_i_i7_fu_365_p2 = (newsignbit_1_reg_491 | tmp_9_i_i4_fu_346_p2);

assign underflow_not_i_i_fu_318_p2 = (newsignbit_reg_471 | tmp_9_i_i_fu_299_p2);

endmodule //pynq_filters_arithm_pro_1
