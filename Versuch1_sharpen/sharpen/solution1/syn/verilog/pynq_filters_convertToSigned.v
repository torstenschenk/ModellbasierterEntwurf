// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pynq_filters_convertToSigned (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        img_in0_data_stream_V_dout,
        img_in0_data_stream_V_empty_n,
        img_in0_data_stream_V_read,
        img_out_data_stream_V_V_din,
        img_out_data_stream_V_V_full_n,
        img_out_data_stream_V_V_write
);

parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 4'b100;
parameter    ap_ST_st5_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv9_1E0 = 9'b111100000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv10_280 = 10'b1010000000;
parameter    ap_const_lv10_1 = 10'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] img_in0_data_stream_V_dout;
input   img_in0_data_stream_V_empty_n;
output   img_in0_data_stream_V_read;
output  [9:0] img_out_data_stream_V_V_din;
input   img_out_data_stream_V_V_full_n;
output   img_out_data_stream_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_in0_data_stream_V_read;
reg img_out_data_stream_V_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_22;
reg    img_in0_data_stream_V_blk_n;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_43;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it0;
reg   [0:0] exitcond_reg_133;
reg    img_out_data_stream_V_V_blk_n;
reg   [9:0] col_reg_84;
wire   [0:0] exitcond9_fu_95_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_64;
wire   [8:0] row_3_fu_101_p2;
reg   [8:0] row_3_reg_128;
wire   [0:0] exitcond_fu_107_p2;
reg    ap_sig_74;
wire   [9:0] col_3_fu_113_p2;
reg   [8:0] row_reg_73;
reg    ap_sig_95;
reg    ap_sig_cseq_ST_st5_fsm_3;
reg    ap_sig_103;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'b1;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond9_fu_95_p2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_74) & ~(1'b0 == exitcond_fu_107_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond9_fu_95_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_74) & (1'b0 == exitcond_fu_107_p2))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond9_fu_95_p2)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_74) & ~(1'b0 == exitcond_fu_107_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_74) & (1'b0 == exitcond_fu_107_p2))) begin
        col_reg_84 <= col_3_fu_113_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond9_fu_95_p2))) begin
        col_reg_84 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_3)) begin
        row_reg_73 <= row_3_reg_128;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_95)) begin
        row_reg_73 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_74))) begin
        exitcond_reg_133 <= exitcond_fu_107_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        row_3_reg_128 <= row_3_fu_101_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond9_fu_95_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond9_fu_95_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_43) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_64) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_103) begin
        ap_sig_cseq_ST_st5_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_133 == 1'b0))) begin
        img_in0_data_stream_V_blk_n = img_in0_data_stream_V_empty_n;
    end else begin
        img_in0_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_133 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_74))) begin
        img_in0_data_stream_V_read = 1'b1;
    end else begin
        img_in0_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_133 == 1'b0))) begin
        img_out_data_stream_V_V_blk_n = img_out_data_stream_V_V_full_n;
    end else begin
        img_out_data_stream_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_133 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_74))) begin
        img_out_data_stream_V_V_write = 1'b1;
    end else begin
        img_out_data_stream_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_95) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(1'b0 == exitcond9_fu_95_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : begin
            if (~((1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_74) & ~(1'b0 == exitcond_fu_107_p2))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if (((1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_74) & ~(1'b0 == exitcond_fu_107_p2))) begin
                ap_NS_fsm = ap_ST_st5_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st5_fsm_3 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_103 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_22 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_43 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_64 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_74 = (((exitcond_reg_133 == 1'b0) & (img_in0_data_stream_V_empty_n == 1'b0)) | ((exitcond_reg_133 == 1'b0) & (img_out_data_stream_V_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_sig_95 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign col_3_fu_113_p2 = (col_reg_84 + ap_const_lv10_1);

assign exitcond9_fu_95_p2 = ((row_reg_73 == ap_const_lv9_1E0) ? 1'b1 : 1'b0);

assign exitcond_fu_107_p2 = ((col_reg_84 == ap_const_lv10_280) ? 1'b1 : 1'b0);

assign img_out_data_stream_V_V_din = img_in0_data_stream_V_dout;

assign row_3_fu_101_p2 = (row_reg_73 + ap_const_lv9_1);

endmodule //pynq_filters_convertToSigned
