// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pynq_filters_Block_proc208_HH_
#define _pynq_filters_Block_proc208_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "pynq_filters_ddiv_64ns_64ns_64_31.h"
#include "pynq_filters_sitodp_32ns_64_6.h"

namespace ap_rtl {

struct pynq_filters_Block_proc208 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > reduce_dout;
    sc_in< sc_logic > reduce_empty_n;
    sc_out< sc_logic > reduce_read;
    sc_out< sc_lv<64> > tmp_1_out_out_din;
    sc_in< sc_logic > tmp_1_out_out_full_n;
    sc_out< sc_logic > tmp_1_out_out_write;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<64> > ap_var_for_const0;


    // Module declarations
    pynq_filters_Block_proc208(sc_module_name name);
    SC_HAS_PROCESS(pynq_filters_Block_proc208);

    ~pynq_filters_Block_proc208();

    sc_trace_file* mVcdFile;

    pynq_filters_ddiv_64ns_64ns_64_31<1,31,64,64,64>* pynq_filters_ddiv_64ns_64ns_64_31_U102;
    pynq_filters_sitodp_32ns_64_6<1,6,32,64>* pynq_filters_sitodp_32ns_64_6_U103;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<39> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_57;
    sc_signal< sc_logic > reduce_blk_n;
    sc_signal< sc_logic > tmp_1_out_out_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_st39_fsm_38;
    sc_signal< bool > ap_sig_84;
    sc_signal< sc_lv<32> > reduce_read_reg_43;
    sc_signal< bool > ap_sig_91;
    sc_signal< sc_lv<64> > grp_fu_40_p1;
    sc_signal< sc_lv<64> > tmp_i_reg_48;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_101;
    sc_signal< sc_lv<64> > grp_fu_35_p2;
    sc_signal< sc_lv<64> > tmp_1_i_reg_53;
    sc_signal< sc_logic > ap_sig_cseq_ST_st38_fsm_37;
    sc_signal< bool > ap_sig_110;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_125;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_133;
    sc_signal< sc_lv<39> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<39> ap_ST_st1_fsm_0;
    static const sc_lv<39> ap_ST_st2_fsm_1;
    static const sc_lv<39> ap_ST_st3_fsm_2;
    static const sc_lv<39> ap_ST_st4_fsm_3;
    static const sc_lv<39> ap_ST_st5_fsm_4;
    static const sc_lv<39> ap_ST_st6_fsm_5;
    static const sc_lv<39> ap_ST_st7_fsm_6;
    static const sc_lv<39> ap_ST_st8_fsm_7;
    static const sc_lv<39> ap_ST_st9_fsm_8;
    static const sc_lv<39> ap_ST_st10_fsm_9;
    static const sc_lv<39> ap_ST_st11_fsm_10;
    static const sc_lv<39> ap_ST_st12_fsm_11;
    static const sc_lv<39> ap_ST_st13_fsm_12;
    static const sc_lv<39> ap_ST_st14_fsm_13;
    static const sc_lv<39> ap_ST_st15_fsm_14;
    static const sc_lv<39> ap_ST_st16_fsm_15;
    static const sc_lv<39> ap_ST_st17_fsm_16;
    static const sc_lv<39> ap_ST_st18_fsm_17;
    static const sc_lv<39> ap_ST_st19_fsm_18;
    static const sc_lv<39> ap_ST_st20_fsm_19;
    static const sc_lv<39> ap_ST_st21_fsm_20;
    static const sc_lv<39> ap_ST_st22_fsm_21;
    static const sc_lv<39> ap_ST_st23_fsm_22;
    static const sc_lv<39> ap_ST_st24_fsm_23;
    static const sc_lv<39> ap_ST_st25_fsm_24;
    static const sc_lv<39> ap_ST_st26_fsm_25;
    static const sc_lv<39> ap_ST_st27_fsm_26;
    static const sc_lv<39> ap_ST_st28_fsm_27;
    static const sc_lv<39> ap_ST_st29_fsm_28;
    static const sc_lv<39> ap_ST_st30_fsm_29;
    static const sc_lv<39> ap_ST_st31_fsm_30;
    static const sc_lv<39> ap_ST_st32_fsm_31;
    static const sc_lv<39> ap_ST_st33_fsm_32;
    static const sc_lv<39> ap_ST_st34_fsm_33;
    static const sc_lv<39> ap_ST_st35_fsm_34;
    static const sc_lv<39> ap_ST_st36_fsm_35;
    static const sc_lv<39> ap_ST_st37_fsm_36;
    static const sc_lv<39> ap_ST_st38_fsm_37;
    static const sc_lv<39> ap_ST_st39_fsm_38;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<64> ap_const_lv64_4059000000000000;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_101();
    void thread_ap_sig_110();
    void thread_ap_sig_125();
    void thread_ap_sig_133();
    void thread_ap_sig_57();
    void thread_ap_sig_84();
    void thread_ap_sig_91();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st38_fsm_37();
    void thread_ap_sig_cseq_ST_st39_fsm_38();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_reduce_blk_n();
    void thread_reduce_read();
    void thread_tmp_1_out_out_blk_n();
    void thread_tmp_1_out_out_din();
    void thread_tmp_1_out_out_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
