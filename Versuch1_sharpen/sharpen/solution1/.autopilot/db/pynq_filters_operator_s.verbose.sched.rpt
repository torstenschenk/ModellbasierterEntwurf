

================================================================
== Vivado HLS Report for 'pynq_filters_operator_s'
================================================================
* Date:           Thu Nov 28 03:42:39 2019

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        sharpen
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.23|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    3|    3|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 4
* Pipeline: 1
  Pipeline-0: II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
* FSM state operations: 

 <State 1>: 7.96ns
ST_1: v_read [1/1] 0.00ns
_ifconv:0  %v_read = call double @_ssdm_op_Read.ap_auto.double(double %v)

ST_1: p_Val2_2 [1/1] 0.00ns
_ifconv:1  %p_Val2_2 = bitcast double %v_read to i64

ST_1: loc_V [1/1] 0.00ns
_ifconv:2  %loc_V = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %p_Val2_2, i32 52, i32 62) nounwind

ST_1: loc_V_1 [1/1] 0.00ns
_ifconv:3  %loc_V_1 = trunc i64 %p_Val2_2 to i52

ST_1: tmp_i [1/1] 2.11ns
_ifconv:4  %tmp_i = icmp eq i11 %loc_V, -1

ST_1: tmp_i_54 [1/1] 2.64ns
_ifconv:5  %tmp_i_54 = icmp ne i52 %loc_V_1, 0

ST_1: tmp_demorgan [1/1] 1.37ns
_ifconv:6  %tmp_demorgan = and i1 %tmp_i, %tmp_i_54

ST_1: tmp_10 [1/1] 0.00ns
_ifconv:7  %tmp_10 = trunc i64 %p_Val2_2 to i63

ST_1: isneg [1/1] 0.00ns
_ifconv:8  %isneg = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %p_Val2_2, i32 63)

ST_1: tmp_6 [1/1] 0.00ns
_ifconv:9  %tmp_6 = zext i11 %loc_V to i12

ST_1: tmp_1 [1/1] 0.00ns
_ifconv:10  %tmp_1 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %loc_V_1)

ST_1: p_Result_s [1/1] 0.00ns
_ifconv:11  %p_Result_s = zext i53 %tmp_1 to i54

ST_1: man_V_1 [1/1] 3.16ns
_ifconv:12  %man_V_1 = sub i54 0, %p_Result_s

ST_1: tmp_8 [1/1] 2.70ns
_ifconv:14  %tmp_8 = icmp eq i63 %tmp_10, 0

ST_1: F2 [1/1] 1.84ns
_ifconv:15  %F2 = sub i12 1075, %tmp_6

ST_1: QUAN_INC [1/1] 2.14ns
_ifconv:16  %QUAN_INC = icmp sgt i12 %F2, 0

ST_1: tmp_s [1/1] 1.84ns
_ifconv:17  %tmp_s = sub i12 0, %F2

ST_1: F2_2 [1/1] 1.37ns
_ifconv:18  %F2_2 = select i1 %QUAN_INC, i12 %F2, i12 %tmp_s

ST_1: tmp_2 [1/1] 2.11ns
_ifconv:21  %tmp_2 = icmp eq i11 %loc_V, -973

ST_1: tmp_4 [1/1] 2.14ns
_ifconv:23  %tmp_4 = icmp ult i12 %F2_2, 54

ST_1: tmp6 [1/1] 0.00ns
_ifconv:59  %tmp6 = call i12 @_ssdm_op_BitConcatenate.i12.i11.i1(i11 -511, i1 %QUAN_INC)

ST_1: tmp_15 [1/1] 1.84ns
_ifconv:60  %tmp_15 = add i12 %tmp6, %tmp_6

ST_1: tmp_16 [1/1] 2.14ns
_ifconv:61  %tmp_16 = icmp sgt i12 %tmp_15, 9

ST_1: sel_tmp17_demorgan [1/1] 0.00ns (grouped into LUT with out node tmp_27)
_ifconv:128  %sel_tmp17_demorgan = and i1 %tmp_i, %tmp_i_54

ST_1: sel_tmp17 [1/1] 0.00ns (grouped into LUT with out node tmp_27)
_ifconv:129  %sel_tmp17 = xor i1 %sel_tmp17_demorgan, true

ST_1: sel_tmp18 [1/1] 0.00ns (grouped into LUT with out node tmp_27)
_ifconv:130  %sel_tmp18 = and i1 %tmp_8, %sel_tmp17

ST_1: tmp_27 [1/1] 1.37ns (out node of the LUT)
_ifconv:131  %tmp_27 = or i1 %sel_tmp18, %tmp_demorgan

ST_1: sel_tmp60_demorgan [1/1] 1.37ns
_ifconv:135  %sel_tmp60_demorgan = or i1 %tmp_demorgan, %tmp_8


 <State 2>: 8.14ns
ST_2: p_Val2_s [1/1] 1.37ns
_ifconv:13  %p_Val2_s = select i1 %isneg, i54 %man_V_1, i54 %p_Result_s

ST_2: F2_2_cast [1/1] 0.00ns (grouped into LUT with out node p_Val2_3)
_ifconv:20  %F2_2_cast = sext i12 %F2_2 to i32

ST_2: tmp_20 [1/1] 0.00ns
_ifconv:22  %tmp_20 = trunc i54 %p_Val2_s to i10

ST_2: tmp_7 [1/1] 2.14ns
_ifconv:24  %tmp_7 = icmp ult i12 %F2_2, 10

ST_2: tmp_9 [1/1] 0.00ns (grouped into LUT with out node p_Val2_3)
_ifconv:25  %tmp_9 = zext i32 %F2_2_cast to i54

ST_2: tmp_5 [1/1] 0.00ns (grouped into LUT with out node p_Val2_3)
_ifconv:26  %tmp_5 = ashr i54 %p_Val2_s, %tmp_9

ST_2: tmp_23 [1/1] 0.00ns (grouped into LUT with out node p_Val2_3)
_ifconv:27  %tmp_23 = trunc i54 %tmp_5 to i10

ST_2: p_s [1/1] 0.00ns (grouped into LUT with out node p_Val2_3)
_ifconv:28  %p_s = select i1 %isneg, i10 -1, i10 0

ST_2: p_Val2_3 [1/1] 3.56ns (out node of the LUT)
_ifconv:32  %p_Val2_3 = select i1 %tmp_4, i10 %tmp_23, i10 %p_s

ST_2: tmp_11 [1/1] 2.14ns
_ifconv:33  %tmp_11 = icmp sgt i12 %F2, 54

ST_2: tmp_12 [1/1] 1.84ns
_ifconv:34  %tmp_12 = add i12 -1, %F2

ST_2: tmp_23_cast [1/1] 0.00ns (grouped into LUT with out node p_Val2_4)
_ifconv:35  %tmp_23_cast = zext i12 %tmp_12 to i32

ST_2: tmp_33 [1/1] 0.00ns (grouped into LUT with out node p_Val2_4)
_ifconv:36  %tmp_33 = call i1 @_ssdm_op_BitSelect.i1.i54.i32(i54 %p_Val2_s, i32 %tmp_23_cast)

ST_2: qb [1/1] 0.00ns (grouped into LUT with out node p_Val2_4)
_ifconv:37  %qb = select i1 %tmp_11, i1 %isneg, i1 %tmp_33

ST_2: tmp_34 [1/1] 0.00ns
_ifconv:38  %tmp_34 = call i1 @_ssdm_op_BitSelect.i1.i10.i32(i10 %p_Val2_3, i32 9)

ST_2: tmp_13 [1/1] 0.00ns (grouped into LUT with out node p_Val2_4)
_ifconv:39  %tmp_13 = zext i1 %qb to i10

ST_2: p_Val2_4 [1/1] 1.84ns (out node of the LUT)
_ifconv:40  %p_Val2_4 = add i10 %p_Val2_3, %tmp_13

ST_2: tmp_35 [1/1] 0.00ns (grouped into LUT with out node carry_1_i)
_ifconv:41  %tmp_35 = call i1 @_ssdm_op_BitSelect.i1.i10.i32(i10 %p_Val2_4, i32 9)

ST_2: tmp_14 [1/1] 0.00ns (grouped into LUT with out node carry_1_i)
_ifconv:42  %tmp_14 = xor i1 %tmp_35, true

ST_2: sel_tmp1 [1/1] 0.00ns (grouped into LUT with out node sel_tmp2)
_ifconv:44  %sel_tmp1 = xor i1 %tmp_2, true

ST_2: sel_tmp2 [1/1] 1.37ns (out node of the LUT)
_ifconv:45  %sel_tmp2 = and i1 %QUAN_INC, %sel_tmp1

ST_2: sel_tmp3 [1/1] 1.37ns
_ifconv:46  %sel_tmp3 = and i1 %sel_tmp2, %tmp_34

ST_2: sel_tmp12_demorgan [1/1] 1.37ns
_ifconv:51  %sel_tmp12_demorgan = or i1 %tmp_2, %QUAN_INC

ST_2: tmp_7_not [1/1] 0.00ns (grouped into LUT with out node carry_1_i)
_ifconv:55  %tmp_7_not = xor i1 %tmp_7, true

ST_2: not_sel_tmp [1/1] 0.00ns (grouped into LUT with out node carry_1_i)
_ifconv:56  %not_sel_tmp = or i1 %sel_tmp12_demorgan, %tmp_7_not

ST_2: tmp [1/1] 0.00ns (grouped into LUT with out node carry_1_i)
_ifconv:57  %tmp = and i1 %not_sel_tmp, %tmp_14

ST_2: carry_1_i [1/1] 1.37ns (out node of the LUT)
_ifconv:58  %carry_1_i = and i1 %tmp, %sel_tmp3

ST_2: pos1 [1/1] 1.84ns
_ifconv:62  %pos1 = add i12 10, %F2

ST_2: pos1_cast [1/1] 0.00ns (grouped into LUT with out node Range1_all_ones_1)
_ifconv:63  %pos1_cast = sext i12 %pos1 to i32

ST_2: pos2 [1/1] 1.84ns
_ifconv:64  %pos2 = add i12 11, %F2

ST_2: pos2_cast [1/1] 0.00ns
_ifconv:65  %pos2_cast = sext i12 %pos2 to i32

ST_2: tmp_17 [1/1] 2.14ns
_ifconv:67  %tmp_17 = icmp slt i12 %pos1, 54

ST_2: tmp_37 [1/1] 0.00ns
_ifconv:68  %tmp_37 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %pos1, i32 11)

ST_2: rev [1/1] 1.37ns
_ifconv:69  %rev = xor i1 %tmp_37, true

ST_2: tmp_18 [1/1] 0.00ns (grouped into LUT with out node Range1_all_ones_1)
_ifconv:70  %tmp_18 = zext i32 %pos1_cast to i54

ST_2: tmp_19 [1/1] 0.00ns (grouped into LUT with out node Range1_all_ones_1)
_ifconv:71  %tmp_19 = ashr i54 %p_Val2_s, %tmp_18

ST_2: lD [1/1] 0.00ns (grouped into LUT with out node Range1_all_ones_1)
_ifconv:72  %lD = trunc i54 %tmp_19 to i1

ST_2: tmp7 [1/1] 0.00ns (grouped into LUT with out node Range1_all_ones_1)
_ifconv:73  %tmp7 = and i1 %lD, %rev

ST_2: Range1_all_ones_1 [1/1] 3.56ns (out node of the LUT)
_ifconv:74  %Range1_all_ones_1 = and i1 %tmp7, %tmp_17

ST_2: tmp_39 [1/1] 0.00ns
_ifconv:75  %tmp_39 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %pos2, i32 11)

ST_2: tmp_21 [1/1] 2.14ns
_ifconv:77  %tmp_21 = icmp slt i12 %pos2, 54

ST_2: tmp_22 [1/1] 0.00ns
_ifconv:79  %tmp_22 = zext i32 %pos2_cast to i54

ST_2: Range2_V_1 [1/1] 3.56ns
_ifconv:80  %Range2_V_1 = lshr i54 %p_Val2_s, %tmp_22

ST_2: r_V [1/1] 0.00ns (grouped into LUT with out node Range2_all_ones)
_ifconv:81  %r_V = lshr i54 -1, %tmp_22

ST_2: Range2_all_ones [1/1] 2.65ns (out node of the LUT)
_ifconv:82  %Range2_all_ones = icmp eq i54 %Range2_V_1, %r_V

ST_2: tmp_24 [1/1] 2.65ns
_ifconv:86  %tmp_24 = icmp eq i54 %Range2_V_1, 0

ST_2: tmp_25 [1/1] 2.14ns
_ifconv:89  %tmp_25 = icmp eq i12 %pos2, 54

ST_2: Range1_all_zeros_1 [1/1] 2.65ns
_ifconv:90  %Range1_all_zeros_1 = icmp eq i54 %p_Val2_s, 0

ST_2: tmp_24_not [1/1] 0.00ns (grouped into LUT with out node sel_tmp11)
_ifconv:92  %tmp_24_not = xor i1 %tmp_21, true

ST_2: sel_tmp10 [1/1] 0.00ns (grouped into LUT with out node sel_tmp11)
_ifconv:93  %sel_tmp10 = or i1 %tmp_37, %tmp_24_not

ST_2: sel_tmp11 [1/1] 1.37ns (out node of the LUT)
_ifconv:94  %sel_tmp11 = and i1 %tmp_25, %sel_tmp10


 <State 3>: 8.23ns
ST_3: F2_2_cast3 [1/1] 0.00ns (grouped into LUT with out node p_Val2_5)
_ifconv:19  %F2_2_cast3 = sext i12 %F2_2 to i19

ST_3: tmp_19_cast [1/1] 0.00ns (grouped into LUT with out node p_Val2_5)
_ifconv:29  %tmp_19_cast = sext i10 %tmp_20 to i19

ST_3: tmp_3 [1/1] 0.00ns (grouped into LUT with out node p_Val2_5)
_ifconv:30  %tmp_3 = shl i19 %tmp_19_cast, %F2_2_cast3

ST_3: tmp_29 [1/1] 0.00ns (grouped into LUT with out node p_Val2_5)
_ifconv:31  %tmp_29 = trunc i19 %tmp_3 to i10

ST_3: sel_tmp [1/1] 0.00ns (grouped into LUT with out node sel_tmp4)
_ifconv:43  %sel_tmp = select i1 %tmp_2, i10 %tmp_20, i10 0

ST_3: sel_tmp4 [1/1] 1.37ns (out node of the LUT)
_ifconv:47  %sel_tmp4 = select i1 %sel_tmp3, i10 %p_Val2_4, i10 %sel_tmp

ST_3: sel_tmp7 [1/1] 0.00ns (grouped into LUT with out node sel_tmp9)
_ifconv:48  %sel_tmp7 = xor i1 %tmp_34, true

ST_3: sel_tmp8 [1/1] 0.00ns (grouped into LUT with out node sel_tmp9)
_ifconv:49  %sel_tmp8 = and i1 %sel_tmp2, %sel_tmp7

ST_3: sel_tmp9 [1/1] 1.37ns (out node of the LUT)
_ifconv:50  %sel_tmp9 = select i1 %sel_tmp8, i10 %p_Val2_4, i10 %sel_tmp4

ST_3: sel_tmp5 [1/1] 0.00ns (grouped into LUT with out node p_Val2_5)
_ifconv:52  %sel_tmp5 = xor i1 %sel_tmp12_demorgan, true

ST_3: sel_tmp6 [1/1] 0.00ns (grouped into LUT with out node p_Val2_5)
_ifconv:53  %sel_tmp6 = and i1 %tmp_7, %sel_tmp5

ST_3: p_Val2_5 [1/1] 2.75ns (out node of the LUT)
_ifconv:54  %p_Val2_5 = select i1 %sel_tmp6, i10 %tmp_29, i10 %sel_tmp9

ST_3: newsignbit [1/1] 0.00ns
_ifconv:66  %newsignbit = call i1 @_ssdm_op_BitSelect.i1.i10.i32(i10 %p_Val2_5, i32 9)

ST_3: rev5 [1/1] 1.37ns
_ifconv:76  %rev5 = xor i1 %tmp_39, true

ST_3: or_cond115_i [1/1] 0.00ns (grouped into LUT with out node Range2_all_ones_1_i)
_ifconv:78  %or_cond115_i = and i1 %tmp_21, %rev5

ST_3: Range2_all_ones_1_i [1/1] 1.37ns (out node of the LUT)
_ifconv:83  %Range2_all_ones_1_i = select i1 %or_cond115_i, i1 %Range2_all_ones, i1 %rev5

ST_3: or_cond117_i [1/1] 1.37ns
_ifconv:84  %or_cond117_i = and i1 %tmp_21, %rev

ST_3: Range1_all_ones [1/1] 0.00ns (grouped into LUT with out node Range1_all_ones_2_i)
_ifconv:85  %Range1_all_ones = and i1 %Range2_all_ones_1_i, %Range1_all_ones_1

ST_3: Range1_all_zeros [1/1] 1.37ns
_ifconv:87  %Range1_all_zeros = xor i1 %Range1_all_ones_1, true

ST_3: p_122_i [1/1] 0.00ns (grouped into LUT with out node deleted_zeros_not)
_ifconv:88  %p_122_i = and i1 %tmp_24, %Range1_all_zeros

ST_3: p_119_i [1/1] 0.00ns (grouped into LUT with out node sel_tmp13)
_ifconv:91  %p_119_i = or i1 %Range1_all_zeros_1, %rev

ST_3: sel_tmp12 [1/1] 0.00ns (grouped into LUT with out node Range1_all_ones_2_i)
_ifconv:95  %sel_tmp12 = select i1 %sel_tmp11, i1 %Range1_all_ones_1, i1 %rev

ST_3: Range1_all_ones_2_i [1/1] 1.37ns (out node of the LUT)
_ifconv:96  %Range1_all_ones_2_i = select i1 %or_cond117_i, i1 %Range1_all_ones, i1 %sel_tmp12

ST_3: sel_tmp13 [1/1] 1.37ns (out node of the LUT)
_ifconv:97  %sel_tmp13 = select i1 %sel_tmp11, i1 %Range1_all_zeros, i1 %p_119_i

ST_3: Range1_all_zeros_2_i [1/1] 0.00ns (grouped into LUT with out node deleted_zeros_not)
_ifconv:98  %Range1_all_zeros_2_i = select i1 %or_cond117_i, i1 %p_122_i, i1 %sel_tmp13

ST_3: deleted_zeros [1/1] 0.00ns (grouped into LUT with out node deleted_zeros_not)
_ifconv:99  %deleted_zeros = select i1 %carry_1_i, i1 %Range1_all_ones_2_i, i1 %Range1_all_zeros_2_i

ST_3: carry_1_not_i [1/1] 1.37ns
_ifconv:100  %carry_1_not_i = xor i1 %carry_1_i, true

ST_3: Range2_all_ones_1_not_i [1/1] 0.00ns (grouped into LUT with out node deleted_ones)
_ifconv:101  %Range2_all_ones_1_not_i = xor i1 %Range2_all_ones_1_i, true

ST_3: brmerge123_i [1/1] 0.00ns (grouped into LUT with out node deleted_ones)
_ifconv:102  %brmerge123_i = or i1 %carry_1_not_i, %Range2_all_ones_1_not_i

ST_3: Range1_all_ones_2_mux_i [1/1] 0.00ns (grouped into LUT with out node deleted_ones)
_ifconv:103  %Range1_all_ones_2_mux_i = and i1 %Range1_all_ones_2_i, %carry_1_not_i

ST_3: tmp_40 [1/1] 0.00ns (grouped into LUT with out node deleted_ones)
_ifconv:104  %tmp_40 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %pos1, i32 11)

ST_3: p_120_i [1/1] 0.00ns (grouped into LUT with out node deleted_ones)
_ifconv:105  %p_120_i = or i1 %tmp_40, %Range1_all_zeros

ST_3: deleted_ones [1/1] 1.37ns (out node of the LUT)
_ifconv:106  %deleted_ones = select i1 %brmerge123_i, i1 %Range1_all_ones_2_mux_i, i1 %p_120_i

ST_3: Range1_all_ones_2_i_55 [1/1] 0.00ns (grouped into LUT with out node sign_assign)
_ifconv:107  %Range1_all_ones_2_i_55 = and i1 %carry_1_i, %Range1_all_ones_2_i

ST_3: tmp_26 [1/1] 0.00ns (grouped into LUT with out node sign_assign)
_ifconv:108  %tmp_26 = xor i1 %Range1_all_ones_2_i_55, true

ST_3: sel_tmp14 [1/1] 1.37ns
_ifconv:109  %sel_tmp14 = xor i1 %tmp_17, true

ST_3: deleted_ones_0_i [1/1] 0.00ns (grouped into LUT with out node brmerge121_demorgan_i)
_ifconv:110  %deleted_ones_0_i = or i1 %deleted_ones, %sel_tmp14

ST_3: tmp8 [1/1] 0.00ns (grouped into LUT with out node sel_tmp15)
_ifconv:111  %tmp8 = and i1 %newsignbit, %sel_tmp14

ST_3: sel_tmp15 [1/1] 1.37ns (out node of the LUT)
_ifconv:112  %sel_tmp15 = and i1 %tmp8, %isneg

ST_3: sel_tmp16 [1/1] 0.00ns (grouped into LUT with out node sign_assign)
_ifconv:113  %sel_tmp16 = and i1 %tmp_17, %isneg

ST_3: sign_assign [1/1] 1.37ns (out node of the LUT)
_ifconv:114  %sign_assign = select i1 %sel_tmp16, i1 %tmp_26, i1 %sel_tmp15

ST_3: deleted_zeros_not [1/1] 1.37ns (out node of the LUT)
_ifconv:115  %deleted_zeros_not = xor i1 %deleted_zeros, true

ST_3: deleted_zeros_0_not_i [1/1] 0.00ns (grouped into LUT with out node overflow)
_ifconv:116  %deleted_zeros_0_not_i = and i1 %tmp_17, %deleted_zeros_not

ST_3: brmerge_i [1/1] 0.00ns (grouped into LUT with out node overflow)
_ifconv:117  %brmerge_i = or i1 %newsignbit, %deleted_zeros_0_not_i

ST_3: tmp_28 [1/1] 0.00ns (grouped into LUT with out node overflow)
_ifconv:118  %tmp_28 = xor i1 %isneg, true

ST_3: overflow [1/1] 1.37ns (out node of the LUT)
_ifconv:119  %overflow = and i1 %brmerge_i, %tmp_28

ST_3: brmerge121_demorgan_i [1/1] 1.37ns (out node of the LUT)
_ifconv:120  %brmerge121_demorgan_i = and i1 %newsignbit, %deleted_ones_0_i


 <State 4>: 5.48ns
ST_4: brmerge121_i [1/1] 0.00ns (grouped into LUT with out node underflow)
_ifconv:121  %brmerge121_i = xor i1 %brmerge121_demorgan_i, true

ST_4: underflow [1/1] 1.37ns (out node of the LUT)
_ifconv:122  %underflow = and i1 %sign_assign, %brmerge121_i

ST_4: brmerge_i_i [1/1] 0.00ns (grouped into LUT with out node agg_result_V)
_ifconv:123  %brmerge_i_i = or i1 %underflow, %overflow

ST_4: sign_assign_not [1/1] 0.00ns (grouped into LUT with out node sel_tmp22)
_ifconv:124  %sign_assign_not = xor i1 %sign_assign, true

ST_4: tmp9 [1/1] 0.00ns (grouped into LUT with out node sel_tmp22)
_ifconv:125  %tmp9 = or i1 %overflow, %sign_assign_not

ST_4: brmerge [1/1] 0.00ns (grouped into LUT with out node sel_tmp22)
_ifconv:126  %brmerge = or i1 %tmp9, %brmerge121_demorgan_i

ST_4: p_Val2_16_mux [1/1] 0.00ns (grouped into LUT with out node agg_result_V)
_ifconv:127  %p_Val2_16_mux = select i1 %brmerge_i_i, i10 511, i10 %p_Val2_5

ST_4: p_Val2_s_56 [1/1] 0.00ns (grouped into LUT with out node sel_tmp19)
_ifconv:132  %p_Val2_s_56 = select i1 %tmp_27, i10 0, i10 -512

ST_4: tmp_30 [1/1] 0.00ns (grouped into LUT with out node sel_tmp19)
_ifconv:133  %tmp_30 = or i1 %tmp_27, %underflow

ST_4: sel_tmp19 [1/1] 1.37ns (out node of the LUT)
_ifconv:134  %sel_tmp19 = select i1 %tmp_30, i10 %p_Val2_s_56, i10 %p_Val2_5

ST_4: sel_tmp62_demorgan [1/1] 0.00ns (grouped into LUT with out node sel_tmp20)
_ifconv:136  %sel_tmp62_demorgan = or i1 %sel_tmp60_demorgan, %tmp_16

ST_4: sel_tmp20 [1/1] 1.37ns (out node of the LUT)
_ifconv:137  %sel_tmp20 = select i1 %sel_tmp62_demorgan, i10 %sel_tmp19, i10 %p_Val2_5

ST_4: sel_tmp21 [1/1] 0.00ns (grouped into LUT with out node sel_tmp22)
_ifconv:138  %sel_tmp21 = xor i1 %sel_tmp60_demorgan, true

ST_4: tmp28 [1/1] 0.00ns (grouped into LUT with out node sel_tmp22)
_ifconv:139  %tmp28 = and i1 %brmerge, %sel_tmp21

ST_4: sel_tmp22 [1/1] 1.37ns (out node of the LUT)
_ifconv:140  %sel_tmp22 = and i1 %tmp28, %tmp_16

ST_4: agg_result_V [1/1] 1.37ns (out node of the LUT)
_ifconv:141  %agg_result_V = select i1 %sel_tmp22, i10 %p_Val2_16_mux, i10 %sel_tmp20

ST_4: stg_147 [1/1] 0.00ns
_ifconv:142  ret i10 %agg_result_V



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
