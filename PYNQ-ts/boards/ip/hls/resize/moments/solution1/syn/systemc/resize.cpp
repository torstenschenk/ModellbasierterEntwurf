// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "resize.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic resize::ap_const_logic_0 = sc_dt::Log_0;
const bool resize::ap_const_boolean_1 = true;
const sc_logic resize::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<24> resize::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<32> resize::ap_const_lv32_0 = "00000000000000000000000000000000";

resize::resize(sc_module_name name) : sc_module(name), mVcdFile(0) {
    resize_Loop_1_proc59_U0 = new resize_Loop_1_proc59("resize_Loop_1_proc59_U0");
    resize_Loop_1_proc59_U0->ap_clk(ap_clk);
    resize_Loop_1_proc59_U0->ap_rst(ap_rst);
    resize_Loop_1_proc59_U0->ap_start(resize_Loop_1_proc59_U0_ap_start);
    resize_Loop_1_proc59_U0->start_full_n(start_for_xFresize60_U0_full_n);
    resize_Loop_1_proc59_U0->ap_done(resize_Loop_1_proc59_U0_ap_done);
    resize_Loop_1_proc59_U0->ap_continue(resize_Loop_1_proc59_U0_ap_continue);
    resize_Loop_1_proc59_U0->ap_idle(resize_Loop_1_proc59_U0_ap_idle);
    resize_Loop_1_proc59_U0->ap_ready(resize_Loop_1_proc59_U0_ap_ready);
    resize_Loop_1_proc59_U0->start_out(resize_Loop_1_proc59_U0_start_out);
    resize_Loop_1_proc59_U0->start_write(resize_Loop_1_proc59_U0_start_write);
    resize_Loop_1_proc59_U0->p_src_data_V_dout(p_src_data_V_dout);
    resize_Loop_1_proc59_U0->p_src_data_V_empty_n(p_src_data_V_empty_n);
    resize_Loop_1_proc59_U0->p_src_data_V_read(resize_Loop_1_proc59_U0_p_src_data_V_read);
    resize_Loop_1_proc59_U0->in_image_V_V_din(resize_Loop_1_proc59_U0_in_image_V_V_din);
    resize_Loop_1_proc59_U0->in_image_V_V_full_n(in_image_V_V_full_n);
    resize_Loop_1_proc59_U0->in_image_V_V_write(resize_Loop_1_proc59_U0_in_image_V_V_write);
    xFresize60_U0 = new xFresize60("xFresize60_U0");
    xFresize60_U0->ap_clk(ap_clk);
    xFresize60_U0->ap_rst(ap_rst);
    xFresize60_U0->ap_start(xFresize60_U0_ap_start);
    xFresize60_U0->start_full_n(start_for_resize_Loop_2_proc61_U0_full_n);
    xFresize60_U0->ap_done(xFresize60_U0_ap_done);
    xFresize60_U0->ap_continue(xFresize60_U0_ap_continue);
    xFresize60_U0->ap_idle(xFresize60_U0_ap_idle);
    xFresize60_U0->ap_ready(xFresize60_U0_ap_ready);
    xFresize60_U0->start_out(xFresize60_U0_start_out);
    xFresize60_U0->start_write(xFresize60_U0_start_write);
    xFresize60_U0->p_in_mat_V_V_dout(in_image_V_V_dout);
    xFresize60_U0->p_in_mat_V_V_empty_n(in_image_V_V_empty_n);
    xFresize60_U0->p_in_mat_V_V_read(xFresize60_U0_p_in_mat_V_V_read);
    xFresize60_U0->p_out_mat_V_V_din(xFresize60_U0_p_out_mat_V_V_din);
    xFresize60_U0->p_out_mat_V_V_full_n(out_image_V_V_full_n);
    xFresize60_U0->p_out_mat_V_V_write(xFresize60_U0_p_out_mat_V_V_write);
    xFresize60_U0->xc_out(xFresize60_U0_xc_out);
    xFresize60_U0->xc_out_ap_vld(xFresize60_U0_xc_out_ap_vld);
    xFresize60_U0->yc_out(xFresize60_U0_yc_out);
    xFresize60_U0->yc_out_ap_vld(xFresize60_U0_yc_out_ap_vld);
    xFresize60_U0->anglexcomp(xFresize60_U0_anglexcomp);
    xFresize60_U0->anglexcomp_ap_vld(xFresize60_U0_anglexcomp_ap_vld);
    xFresize60_U0->angleycomp(xFresize60_U0_angleycomp);
    xFresize60_U0->angleycomp_ap_vld(xFresize60_U0_angleycomp_ap_vld);
    resize_Loop_2_proc61_U0 = new resize_Loop_2_proc61("resize_Loop_2_proc61_U0");
    resize_Loop_2_proc61_U0->ap_clk(ap_clk);
    resize_Loop_2_proc61_U0->ap_rst(ap_rst);
    resize_Loop_2_proc61_U0->ap_start(resize_Loop_2_proc61_U0_ap_start);
    resize_Loop_2_proc61_U0->ap_done(resize_Loop_2_proc61_U0_ap_done);
    resize_Loop_2_proc61_U0->ap_continue(resize_Loop_2_proc61_U0_ap_continue);
    resize_Loop_2_proc61_U0->ap_idle(resize_Loop_2_proc61_U0_ap_idle);
    resize_Loop_2_proc61_U0->ap_ready(resize_Loop_2_proc61_U0_ap_ready);
    resize_Loop_2_proc61_U0->out_image_V_V_dout(out_image_V_V_dout);
    resize_Loop_2_proc61_U0->out_image_V_V_empty_n(out_image_V_V_empty_n);
    resize_Loop_2_proc61_U0->out_image_V_V_read(resize_Loop_2_proc61_U0_out_image_V_V_read);
    resize_Loop_2_proc61_U0->p_dst_data_V_din(resize_Loop_2_proc61_U0_p_dst_data_V_din);
    resize_Loop_2_proc61_U0->p_dst_data_V_full_n(p_dst_data_V_full_n);
    resize_Loop_2_proc61_U0->p_dst_data_V_write(resize_Loop_2_proc61_U0_p_dst_data_V_write);
    in_image_V_V_U = new fifo_w24_d2_A("in_image_V_V_U");
    in_image_V_V_U->clk(ap_clk);
    in_image_V_V_U->reset(ap_rst);
    in_image_V_V_U->if_read_ce(ap_var_for_const0);
    in_image_V_V_U->if_write_ce(ap_var_for_const0);
    in_image_V_V_U->if_din(resize_Loop_1_proc59_U0_in_image_V_V_din);
    in_image_V_V_U->if_full_n(in_image_V_V_full_n);
    in_image_V_V_U->if_write(resize_Loop_1_proc59_U0_in_image_V_V_write);
    in_image_V_V_U->if_dout(in_image_V_V_dout);
    in_image_V_V_U->if_empty_n(in_image_V_V_empty_n);
    in_image_V_V_U->if_read(xFresize60_U0_p_in_mat_V_V_read);
    out_image_V_V_U = new fifo_w24_d2_A("out_image_V_V_U");
    out_image_V_V_U->clk(ap_clk);
    out_image_V_V_U->reset(ap_rst);
    out_image_V_V_U->if_read_ce(ap_var_for_const0);
    out_image_V_V_U->if_write_ce(ap_var_for_const0);
    out_image_V_V_U->if_din(xFresize60_U0_p_out_mat_V_V_din);
    out_image_V_V_U->if_full_n(out_image_V_V_full_n);
    out_image_V_V_U->if_write(xFresize60_U0_p_out_mat_V_V_write);
    out_image_V_V_U->if_dout(out_image_V_V_dout);
    out_image_V_V_U->if_empty_n(out_image_V_V_empty_n);
    out_image_V_V_U->if_read(resize_Loop_2_proc61_U0_out_image_V_V_read);
    start_for_xFresize60_U0_U = new start_for_xFresize60_U0("start_for_xFresize60_U0_U");
    start_for_xFresize60_U0_U->clk(ap_clk);
    start_for_xFresize60_U0_U->reset(ap_rst);
    start_for_xFresize60_U0_U->if_read_ce(ap_var_for_const0);
    start_for_xFresize60_U0_U->if_write_ce(ap_var_for_const0);
    start_for_xFresize60_U0_U->if_din(start_for_xFresize60_U0_din);
    start_for_xFresize60_U0_U->if_full_n(start_for_xFresize60_U0_full_n);
    start_for_xFresize60_U0_U->if_write(resize_Loop_1_proc59_U0_start_write);
    start_for_xFresize60_U0_U->if_dout(start_for_xFresize60_U0_dout);
    start_for_xFresize60_U0_U->if_empty_n(start_for_xFresize60_U0_empty_n);
    start_for_xFresize60_U0_U->if_read(xFresize60_U0_ap_ready);
    start_for_resize_Loop_2_proc61_U0_U = new start_for_resize_Loop_2_proc61_U0("start_for_resize_Loop_2_proc61_U0_U");
    start_for_resize_Loop_2_proc61_U0_U->clk(ap_clk);
    start_for_resize_Loop_2_proc61_U0_U->reset(ap_rst);
    start_for_resize_Loop_2_proc61_U0_U->if_read_ce(ap_var_for_const0);
    start_for_resize_Loop_2_proc61_U0_U->if_write_ce(ap_var_for_const0);
    start_for_resize_Loop_2_proc61_U0_U->if_din(start_for_resize_Loop_2_proc61_U0_din);
    start_for_resize_Loop_2_proc61_U0_U->if_full_n(start_for_resize_Loop_2_proc61_U0_full_n);
    start_for_resize_Loop_2_proc61_U0_U->if_write(xFresize60_U0_start_write);
    start_for_resize_Loop_2_proc61_U0_U->if_dout(start_for_resize_Loop_2_proc61_U0_dout);
    start_for_resize_Loop_2_proc61_U0_U->if_empty_n(start_for_resize_Loop_2_proc61_U0_empty_n);
    start_for_resize_Loop_2_proc61_U0_U->if_read(resize_Loop_2_proc61_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_anglexcomp);
    sensitive << ( xFresize60_U0_anglexcomp );

    SC_METHOD(thread_anglexcomp_ap_vld);
    sensitive << ( xFresize60_U0_anglexcomp_ap_vld );

    SC_METHOD(thread_angleycomp);
    sensitive << ( xFresize60_U0_angleycomp );

    SC_METHOD(thread_angleycomp_ap_vld);
    sensitive << ( xFresize60_U0_angleycomp_ap_vld );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sync_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( resize_Loop_1_proc59_U0_ap_idle );
    sensitive << ( xFresize60_U0_ap_idle );
    sensitive << ( resize_Loop_2_proc61_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_ap_sync_continue);
    sensitive << ( ap_sync_done );
    sensitive << ( ap_continue );

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( xFresize60_U0_ap_done );
    sensitive << ( resize_Loop_2_proc61_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( resize_Loop_1_proc59_U0_ap_ready );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_p_dst_data_V_din);
    sensitive << ( resize_Loop_2_proc61_U0_p_dst_data_V_din );

    SC_METHOD(thread_p_dst_data_V_write);
    sensitive << ( resize_Loop_2_proc61_U0_p_dst_data_V_write );

    SC_METHOD(thread_p_src_data_V_read);
    sensitive << ( resize_Loop_1_proc59_U0_p_src_data_V_read );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_resize_Loop_1_proc59_U0_ap_continue);

    SC_METHOD(thread_resize_Loop_1_proc59_U0_ap_start);
    sensitive << ( real_start );

    SC_METHOD(thread_resize_Loop_2_proc61_U0_ap_continue);
    sensitive << ( ap_sync_continue );

    SC_METHOD(thread_resize_Loop_2_proc61_U0_ap_start);
    sensitive << ( start_for_resize_Loop_2_proc61_U0_empty_n );

    SC_METHOD(thread_resize_Loop_2_proc61_U0_start_full_n);

    SC_METHOD(thread_resize_Loop_2_proc61_U0_start_write);

    SC_METHOD(thread_start_for_resize_Loop_2_proc61_U0_din);

    SC_METHOD(thread_start_for_xFresize60_U0_din);

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_xFresize60_U0_ap_continue);
    sensitive << ( ap_sync_continue );

    SC_METHOD(thread_xFresize60_U0_ap_start);
    sensitive << ( start_for_xFresize60_U0_empty_n );

    SC_METHOD(thread_xc_out);
    sensitive << ( xFresize60_U0_xc_out );

    SC_METHOD(thread_xc_out_ap_vld);
    sensitive << ( xFresize60_U0_xc_out_ap_vld );

    SC_METHOD(thread_yc_out);
    sensitive << ( xFresize60_U0_yc_out );

    SC_METHOD(thread_yc_out_ap_vld);
    sensitive << ( xFresize60_U0_yc_out_ap_vld );

    SC_THREAD(thread_ap_var_for_const0);

    start_once_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "resize_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, p_src_data_V_dout, "(port)p_src_data_V_dout");
    sc_trace(mVcdFile, p_src_data_V_empty_n, "(port)p_src_data_V_empty_n");
    sc_trace(mVcdFile, p_src_data_V_read, "(port)p_src_data_V_read");
    sc_trace(mVcdFile, p_dst_data_V_din, "(port)p_dst_data_V_din");
    sc_trace(mVcdFile, p_dst_data_V_full_n, "(port)p_dst_data_V_full_n");
    sc_trace(mVcdFile, p_dst_data_V_write, "(port)p_dst_data_V_write");
    sc_trace(mVcdFile, xc_out, "(port)xc_out");
    sc_trace(mVcdFile, yc_out, "(port)yc_out");
    sc_trace(mVcdFile, anglexcomp, "(port)anglexcomp");
    sc_trace(mVcdFile, angleycomp, "(port)angleycomp");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, xc_out_ap_vld, "(port)xc_out_ap_vld");
    sc_trace(mVcdFile, yc_out_ap_vld, "(port)yc_out_ap_vld");
    sc_trace(mVcdFile, anglexcomp_ap_vld, "(port)anglexcomp_ap_vld");
    sc_trace(mVcdFile, angleycomp_ap_vld, "(port)angleycomp_ap_vld");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, resize_Loop_1_proc59_U0_ap_start, "resize_Loop_1_proc59_U0_ap_start");
    sc_trace(mVcdFile, resize_Loop_1_proc59_U0_ap_done, "resize_Loop_1_proc59_U0_ap_done");
    sc_trace(mVcdFile, resize_Loop_1_proc59_U0_ap_continue, "resize_Loop_1_proc59_U0_ap_continue");
    sc_trace(mVcdFile, resize_Loop_1_proc59_U0_ap_idle, "resize_Loop_1_proc59_U0_ap_idle");
    sc_trace(mVcdFile, resize_Loop_1_proc59_U0_ap_ready, "resize_Loop_1_proc59_U0_ap_ready");
    sc_trace(mVcdFile, resize_Loop_1_proc59_U0_start_out, "resize_Loop_1_proc59_U0_start_out");
    sc_trace(mVcdFile, resize_Loop_1_proc59_U0_start_write, "resize_Loop_1_proc59_U0_start_write");
    sc_trace(mVcdFile, resize_Loop_1_proc59_U0_p_src_data_V_read, "resize_Loop_1_proc59_U0_p_src_data_V_read");
    sc_trace(mVcdFile, resize_Loop_1_proc59_U0_in_image_V_V_din, "resize_Loop_1_proc59_U0_in_image_V_V_din");
    sc_trace(mVcdFile, resize_Loop_1_proc59_U0_in_image_V_V_write, "resize_Loop_1_proc59_U0_in_image_V_V_write");
    sc_trace(mVcdFile, xFresize60_U0_ap_start, "xFresize60_U0_ap_start");
    sc_trace(mVcdFile, xFresize60_U0_ap_done, "xFresize60_U0_ap_done");
    sc_trace(mVcdFile, xFresize60_U0_ap_continue, "xFresize60_U0_ap_continue");
    sc_trace(mVcdFile, xFresize60_U0_ap_idle, "xFresize60_U0_ap_idle");
    sc_trace(mVcdFile, xFresize60_U0_ap_ready, "xFresize60_U0_ap_ready");
    sc_trace(mVcdFile, xFresize60_U0_start_out, "xFresize60_U0_start_out");
    sc_trace(mVcdFile, xFresize60_U0_start_write, "xFresize60_U0_start_write");
    sc_trace(mVcdFile, xFresize60_U0_p_in_mat_V_V_read, "xFresize60_U0_p_in_mat_V_V_read");
    sc_trace(mVcdFile, xFresize60_U0_p_out_mat_V_V_din, "xFresize60_U0_p_out_mat_V_V_din");
    sc_trace(mVcdFile, xFresize60_U0_p_out_mat_V_V_write, "xFresize60_U0_p_out_mat_V_V_write");
    sc_trace(mVcdFile, xFresize60_U0_xc_out, "xFresize60_U0_xc_out");
    sc_trace(mVcdFile, xFresize60_U0_xc_out_ap_vld, "xFresize60_U0_xc_out_ap_vld");
    sc_trace(mVcdFile, xFresize60_U0_yc_out, "xFresize60_U0_yc_out");
    sc_trace(mVcdFile, xFresize60_U0_yc_out_ap_vld, "xFresize60_U0_yc_out_ap_vld");
    sc_trace(mVcdFile, xFresize60_U0_anglexcomp, "xFresize60_U0_anglexcomp");
    sc_trace(mVcdFile, xFresize60_U0_anglexcomp_ap_vld, "xFresize60_U0_anglexcomp_ap_vld");
    sc_trace(mVcdFile, xFresize60_U0_angleycomp, "xFresize60_U0_angleycomp");
    sc_trace(mVcdFile, xFresize60_U0_angleycomp_ap_vld, "xFresize60_U0_angleycomp_ap_vld");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, resize_Loop_2_proc61_U0_ap_start, "resize_Loop_2_proc61_U0_ap_start");
    sc_trace(mVcdFile, resize_Loop_2_proc61_U0_ap_done, "resize_Loop_2_proc61_U0_ap_done");
    sc_trace(mVcdFile, resize_Loop_2_proc61_U0_ap_continue, "resize_Loop_2_proc61_U0_ap_continue");
    sc_trace(mVcdFile, resize_Loop_2_proc61_U0_ap_idle, "resize_Loop_2_proc61_U0_ap_idle");
    sc_trace(mVcdFile, resize_Loop_2_proc61_U0_ap_ready, "resize_Loop_2_proc61_U0_ap_ready");
    sc_trace(mVcdFile, resize_Loop_2_proc61_U0_out_image_V_V_read, "resize_Loop_2_proc61_U0_out_image_V_V_read");
    sc_trace(mVcdFile, resize_Loop_2_proc61_U0_p_dst_data_V_din, "resize_Loop_2_proc61_U0_p_dst_data_V_din");
    sc_trace(mVcdFile, resize_Loop_2_proc61_U0_p_dst_data_V_write, "resize_Loop_2_proc61_U0_p_dst_data_V_write");
    sc_trace(mVcdFile, in_image_V_V_full_n, "in_image_V_V_full_n");
    sc_trace(mVcdFile, in_image_V_V_dout, "in_image_V_V_dout");
    sc_trace(mVcdFile, in_image_V_V_empty_n, "in_image_V_V_empty_n");
    sc_trace(mVcdFile, out_image_V_V_full_n, "out_image_V_V_full_n");
    sc_trace(mVcdFile, out_image_V_V_dout, "out_image_V_V_dout");
    sc_trace(mVcdFile, out_image_V_V_empty_n, "out_image_V_V_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, start_for_xFresize60_U0_din, "start_for_xFresize60_U0_din");
    sc_trace(mVcdFile, start_for_xFresize60_U0_full_n, "start_for_xFresize60_U0_full_n");
    sc_trace(mVcdFile, start_for_xFresize60_U0_dout, "start_for_xFresize60_U0_dout");
    sc_trace(mVcdFile, start_for_xFresize60_U0_empty_n, "start_for_xFresize60_U0_empty_n");
    sc_trace(mVcdFile, start_for_resize_Loop_2_proc61_U0_din, "start_for_resize_Loop_2_proc61_U0_din");
    sc_trace(mVcdFile, start_for_resize_Loop_2_proc61_U0_full_n, "start_for_resize_Loop_2_proc61_U0_full_n");
    sc_trace(mVcdFile, start_for_resize_Loop_2_proc61_U0_dout, "start_for_resize_Loop_2_proc61_U0_dout");
    sc_trace(mVcdFile, start_for_resize_Loop_2_proc61_U0_empty_n, "start_for_resize_Loop_2_proc61_U0_empty_n");
    sc_trace(mVcdFile, resize_Loop_2_proc61_U0_start_full_n, "resize_Loop_2_proc61_U0_start_full_n");
    sc_trace(mVcdFile, resize_Loop_2_proc61_U0_start_write, "resize_Loop_2_proc61_U0_start_write");
#endif

    }
}

resize::~resize() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete resize_Loop_1_proc59_U0;
    delete xFresize60_U0;
    delete resize_Loop_2_proc61_U0;
    delete in_image_V_V_U;
    delete out_image_V_V_U;
    delete start_for_xFresize60_U0_U;
    delete start_for_resize_Loop_2_proc61_U0_U;
}

void resize::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void resize::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(real_start.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(internal_ap_ready.read(), ap_const_logic_1)) {
            start_once_reg = ap_const_logic_0;
        }
    }
}

void resize::thread_anglexcomp() {
    anglexcomp = xFresize60_U0_anglexcomp.read();
}

void resize::thread_anglexcomp_ap_vld() {
    anglexcomp_ap_vld = xFresize60_U0_anglexcomp_ap_vld.read();
}

void resize::thread_angleycomp() {
    angleycomp = xFresize60_U0_angleycomp.read();
}

void resize::thread_angleycomp_ap_vld() {
    angleycomp_ap_vld = xFresize60_U0_angleycomp_ap_vld.read();
}

void resize::thread_ap_done() {
    ap_done = ap_sync_done.read();
}

void resize::thread_ap_idle() {
    ap_idle = (resize_Loop_1_proc59_U0_ap_idle.read() & xFresize60_U0_ap_idle.read() & resize_Loop_2_proc61_U0_ap_idle.read());
}

void resize::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void resize::thread_ap_sync_continue() {
    ap_sync_continue = (ap_sync_done.read() & ap_continue.read());
}

void resize::thread_ap_sync_done() {
    ap_sync_done = (xFresize60_U0_ap_done.read() & resize_Loop_2_proc61_U0_ap_done.read());
}

void resize::thread_ap_sync_ready() {
    ap_sync_ready = resize_Loop_1_proc59_U0_ap_ready.read();
}

void resize::thread_internal_ap_ready() {
    internal_ap_ready = ap_sync_ready.read();
}

void resize::thread_p_dst_data_V_din() {
    p_dst_data_V_din = resize_Loop_2_proc61_U0_p_dst_data_V_din.read();
}

void resize::thread_p_dst_data_V_write() {
    p_dst_data_V_write = resize_Loop_2_proc61_U0_p_dst_data_V_write.read();
}

void resize::thread_p_src_data_V_read() {
    p_src_data_V_read = resize_Loop_1_proc59_U0_p_src_data_V_read.read();
}

void resize::thread_real_start() {
    if ((esl_seteq<1,1,1>(start_full_n.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void resize::thread_resize_Loop_1_proc59_U0_ap_continue() {
    resize_Loop_1_proc59_U0_ap_continue = ap_const_logic_1;
}

void resize::thread_resize_Loop_1_proc59_U0_ap_start() {
    resize_Loop_1_proc59_U0_ap_start = real_start.read();
}

void resize::thread_resize_Loop_2_proc61_U0_ap_continue() {
    resize_Loop_2_proc61_U0_ap_continue = ap_sync_continue.read();
}

void resize::thread_resize_Loop_2_proc61_U0_ap_start() {
    resize_Loop_2_proc61_U0_ap_start = start_for_resize_Loop_2_proc61_U0_empty_n.read();
}

void resize::thread_resize_Loop_2_proc61_U0_start_full_n() {
    resize_Loop_2_proc61_U0_start_full_n = ap_const_logic_1;
}

void resize::thread_resize_Loop_2_proc61_U0_start_write() {
    resize_Loop_2_proc61_U0_start_write = ap_const_logic_0;
}

void resize::thread_start_for_resize_Loop_2_proc61_U0_din() {
    start_for_resize_Loop_2_proc61_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void resize::thread_start_for_xFresize60_U0_din() {
    start_for_xFresize60_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void resize::thread_start_out() {
    start_out = real_start.read();
}

void resize::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(real_start.read(), ap_const_logic_1))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void resize::thread_xFresize60_U0_ap_continue() {
    xFresize60_U0_ap_continue = ap_sync_continue.read();
}

void resize::thread_xFresize60_U0_ap_start() {
    xFresize60_U0_ap_start = start_for_xFresize60_U0_empty_n.read();
}

void resize::thread_xc_out() {
    xc_out = xFresize60_U0_xc_out.read();
}

void resize::thread_xc_out_ap_vld() {
    xc_out_ap_vld = xFresize60_U0_xc_out_ap_vld.read();
}

void resize::thread_yc_out() {
    yc_out = xFresize60_U0_yc_out.read();
}

void resize::thread_yc_out_ap_vld() {
    yc_out_ap_vld = xFresize60_U0_yc_out_ap_vld.read();
}

}

