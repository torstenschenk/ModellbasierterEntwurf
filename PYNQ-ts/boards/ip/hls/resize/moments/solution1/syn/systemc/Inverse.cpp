// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Inverse.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Inverse::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Inverse::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> Inverse::ap_ST_fsm_state1 = "1";
const sc_lv<8> Inverse::ap_ST_fsm_state2 = "10";
const sc_lv<8> Inverse::ap_ST_fsm_state3 = "100";
const sc_lv<8> Inverse::ap_ST_fsm_state4 = "1000";
const sc_lv<8> Inverse::ap_ST_fsm_state5 = "10000";
const sc_lv<8> Inverse::ap_ST_fsm_state6 = "100000";
const sc_lv<8> Inverse::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> Inverse::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> Inverse::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Inverse::ap_const_lv1_0 = "0";
const sc_lv<1> Inverse::ap_const_lv1_1 = "1";
const sc_lv<32> Inverse::ap_const_lv32_1 = "1";
const sc_lv<32> Inverse::ap_const_lv32_2 = "10";
const sc_lv<32> Inverse::ap_const_lv32_3 = "11";
const sc_lv<32> Inverse::ap_const_lv32_4 = "100";
const sc_lv<32> Inverse::ap_const_lv32_5 = "101";
const sc_lv<32> Inverse::ap_const_lv32_6 = "110";
const sc_lv<3> Inverse::ap_const_lv3_0 = "000";
const sc_lv<4> Inverse::ap_const_lv4_C = "1100";
const sc_lv<4> Inverse::ap_const_lv4_8 = "1000";
const sc_lv<4> Inverse::ap_const_lv4_4 = "100";
const sc_lv<4> Inverse::ap_const_lv4_0 = "0000";
const sc_lv<32> Inverse::ap_const_lv32_7 = "111";
const sc_lv<16> Inverse::ap_const_lv16_FFFF = "1111111111111111";
const sc_lv<32> Inverse::ap_const_lv32_C = "1100";
const sc_lv<32> Inverse::ap_const_lv32_F = "1111";
const sc_lv<32> Inverse::ap_const_lv32_8 = "1000";
const sc_lv<32> Inverse::ap_const_lv32_B = "1011";
const sc_lv<16> Inverse::ap_const_lv16_0 = "0000000000000000";
const sc_lv<3> Inverse::ap_const_lv3_1 = "1";
const sc_lv<3> Inverse::ap_const_lv3_3 = "11";
const sc_lv<5> Inverse::ap_const_lv5_1F = "11111";
const sc_lv<5> Inverse::ap_const_lv5_0 = "00000";
const sc_lv<32> Inverse::ap_const_lv32_E = "1110";
const sc_lv<5> Inverse::ap_const_lv5_14 = "10100";
const sc_lv<8> Inverse::ap_const_lv8_0 = "00000000";
const bool Inverse::ap_const_boolean_1 = true;

Inverse::Inverse(sc_module_name name) : sc_module(name), mVcdFile(0) {
    xf_division_lut_U = new Inverse_xf_divisibkb("xf_division_lut_U");
    xf_division_lut_U->clk(ap_clk);
    xf_division_lut_U->reset(ap_rst);
    xf_division_lut_U->address0(xf_division_lut_address0);
    xf_division_lut_U->ce0(xf_division_lut_ce0);
    xf_division_lut_U->q0(xf_division_lut_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_B_L_fu_355_p2);
    sensitive << ( pos_6_cast_fu_347_p1 );
    sensitive << ( block_2_cast_fu_351_p1 );

    SC_METHOD(thread_N_cast_fu_526_p1);
    sensitive << ( N_fu_521_p2 );

    SC_METHOD(thread_N_fu_521_p2);
    sensitive << ( B_L_reg_606 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_171);
    sensitive << ( tmp_9_reg_582 );
    sensitive << ( tmp_10_reg_586 );
    sensitive << ( tmp_11_reg_590 );

    SC_METHOD(thread_ap_condition_174);
    sensitive << ( tmp_9_reg_582 );
    sensitive << ( tmp_10_reg_586 );
    sensitive << ( tmp_11_reg_590 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_N_write_assign_phi_fu_236_p4);
    sensitive << ( tmp_8_reg_578 );
    sensitive << ( N_cast_fu_526_p1 );
    sensitive << ( N_write_assign_reg_233 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_phi_mux_block_2_phi_fu_186_p8);
    sensitive << ( tmp_9_reg_582 );
    sensitive << ( tmp_10_reg_586 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_condition_171 );
    sensitive << ( ap_condition_174 );

    SC_METHOD(thread_ap_phi_mux_p_0_in_phi_fu_246_p4);
    sensitive << ( xf_division_lut_q0 );
    sensitive << ( tmp_8_reg_578 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( p_0_in_reg_242 );

    SC_METHOD(thread_ap_phi_mux_pos_6_phi_fu_169_p8);
    sensitive << ( tmp_9_reg_582 );
    sensitive << ( tmp_10_reg_586 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( pos_6_ph1_reg_122 );
    sensitive << ( pos_6_ph2_reg_133 );
    sensitive << ( pos_6_ph3_reg_144 );
    sensitive << ( pos_6_ph_reg_155 );
    sensitive << ( ap_condition_171 );
    sensitive << ( ap_condition_174 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( val_fu_531_p1 );
    sensitive << ( ap_return_0_preg );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_phi_mux_N_write_assign_phi_fu_236_p4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_return_1_preg );

    SC_METHOD(thread_block_2_cast_fu_351_p1);
    sensitive << ( ap_phi_mux_block_2_phi_fu_186_p8 );

    SC_METHOD(thread_index_fu_508_p3);
    sensitive << ( tmp_32_fu_472_p2 );
    sensitive << ( tmp_120_fu_489_p4 );
    sensitive << ( tmp_121_fu_498_p4 );

    SC_METHOD(thread_pos_4_fu_375_p2);
    sensitive << ( tmp_1_reg_200 );

    SC_METHOD(thread_pos_5_fu_410_p2);
    sensitive << ( tmp_2_reg_211 );

    SC_METHOD(thread_pos_6_cast_fu_347_p1);
    sensitive << ( ap_phi_mux_pos_6_phi_fu_169_p8 );

    SC_METHOD(thread_pos_7_fu_445_p2);
    sensitive << ( tmp_3_reg_222 );

    SC_METHOD(thread_pos_fu_320_p2);
    sensitive << ( tmp1_reg_111 );

    SC_METHOD(thread_tmp_10_fu_300_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmpx_4_fu_264_p4 );
    sensitive << ( tmp_8_fu_288_p2 );
    sensitive << ( tmp_9_fu_294_p2 );

    SC_METHOD(thread_tmp_11_fu_306_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmpx_5_fu_274_p4 );
    sensitive << ( tmp_8_fu_288_p2 );
    sensitive << ( tmp_9_fu_294_p2 );
    sensitive << ( tmp_10_fu_300_p2 );

    SC_METHOD(thread_tmp_120_fu_489_p4);
    sensitive << ( x );

    SC_METHOD(thread_tmp_121_fu_498_p4);
    sensitive << ( tmp_34_fu_483_p2 );

    SC_METHOD(thread_tmp_132_fu_367_p3);
    sensitive << ( tmp_1_reg_200 );

    SC_METHOD(thread_tmp_133_fu_437_p3);
    sensitive << ( tmp_3_reg_222 );

    SC_METHOD(thread_tmp_134_fu_402_p3);
    sensitive << ( tmp_2_reg_211 );

    SC_METHOD(thread_tmp_139_fu_477_p1);
    sensitive << ( x );

    SC_METHOD(thread_tmp_15_fu_326_p2);
    sensitive << ( tmp1_reg_111 );

    SC_METHOD(thread_tmp_16_fu_336_p2);
    sensitive << ( tmpx_reg_558 );
    sensitive << ( tmp_19_cast_fu_332_p1 );

    SC_METHOD(thread_tmp_17_fu_341_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_312_p3 );
    sensitive << ( tmp_16_fu_336_p2 );

    SC_METHOD(thread_tmp_19_cast_fu_332_p1);
    sensitive << ( tmp_15_fu_326_p2 );

    SC_METHOD(thread_tmp_21_fu_381_p2);
    sensitive << ( tmp_1_reg_200 );

    SC_METHOD(thread_tmp_22_fu_391_p2);
    sensitive << ( tmpx_4_reg_563 );
    sensitive << ( tmp_25_cast_fu_387_p1 );

    SC_METHOD(thread_tmp_23_fu_396_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_132_fu_367_p3 );
    sensitive << ( tmp_22_fu_391_p2 );

    SC_METHOD(thread_tmp_25_cast_fu_387_p1);
    sensitive << ( tmp_21_fu_381_p2 );

    SC_METHOD(thread_tmp_25_fu_451_p2);
    sensitive << ( tmp_3_reg_222 );

    SC_METHOD(thread_tmp_26_fu_461_p2);
    sensitive << ( tmpx_6_reg_573 );
    sensitive << ( tmp_29_cast_fu_457_p1 );

    SC_METHOD(thread_tmp_27_fu_466_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_133_fu_437_p3 );
    sensitive << ( tmp_26_fu_461_p2 );

    SC_METHOD(thread_tmp_29_cast_fu_457_p1);
    sensitive << ( tmp_25_fu_451_p2 );

    SC_METHOD(thread_tmp_29_fu_416_p2);
    sensitive << ( tmp_2_reg_211 );

    SC_METHOD(thread_tmp_30_fu_426_p2);
    sensitive << ( tmpx_5_reg_568 );
    sensitive << ( tmp_33_cast_fu_422_p1 );

    SC_METHOD(thread_tmp_31_fu_431_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_134_fu_402_p3 );
    sensitive << ( tmp_30_fu_426_p2 );

    SC_METHOD(thread_tmp_32_fu_472_p2);
    sensitive << ( B_L_reg_606 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_33_cast_fu_422_p1);
    sensitive << ( tmp_29_fu_416_p2 );

    SC_METHOD(thread_tmp_33_fu_361_p2);
    sensitive << ( B_L_fu_355_p2 );

    SC_METHOD(thread_tmp_34_fu_483_p2);
    sensitive << ( tmp_139_fu_477_p1 );
    sensitive << ( tmp_40_cast_cast_fu_480_p1 );

    SC_METHOD(thread_tmp_35_fu_516_p1);
    sensitive << ( index_fu_508_p3 );

    SC_METHOD(thread_tmp_40_cast_cast_fu_480_p1);
    sensitive << ( tmp_33_reg_612 );

    SC_METHOD(thread_tmp_8_fu_288_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( x );

    SC_METHOD(thread_tmp_9_fu_294_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmpx_fu_254_p4 );
    sensitive << ( tmp_8_fu_288_p2 );

    SC_METHOD(thread_tmp_fu_312_p3);
    sensitive << ( tmp1_reg_111 );

    SC_METHOD(thread_tmpx_4_fu_264_p4);
    sensitive << ( x );

    SC_METHOD(thread_tmpx_5_fu_274_p4);
    sensitive << ( x );

    SC_METHOD(thread_tmpx_6_fu_284_p1);
    sensitive << ( x );

    SC_METHOD(thread_tmpx_fu_254_p4);
    sensitive << ( x );

    SC_METHOD(thread_val_fu_531_p1);
    sensitive << ( ap_phi_mux_p_0_in_phi_fu_246_p4 );

    SC_METHOD(thread_xf_division_lut_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_35_fu_516_p1 );

    SC_METHOD(thread_xf_division_lut_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_8_fu_288_p2 );
    sensitive << ( tmp_9_fu_294_p2 );
    sensitive << ( tmp_10_fu_300_p2 );
    sensitive << ( tmp_11_fu_306_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_fu_312_p3 );
    sensitive << ( tmp_17_fu_341_p2 );
    sensitive << ( tmp_132_fu_367_p3 );
    sensitive << ( tmp_23_fu_396_p2 );
    sensitive << ( tmp_134_fu_402_p3 );
    sensitive << ( tmp_31_fu_431_p2 );
    sensitive << ( tmp_133_fu_437_p3 );
    sensitive << ( tmp_27_fu_466_p2 );

    ap_CS_fsm = "00000001";
    ap_return_0_preg = "00000000000000000000000000000000";
    ap_return_1_preg = "00000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Inverse_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, N_read, "(port)N_read");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, xf_division_lut_address0, "xf_division_lut_address0");
    sc_trace(mVcdFile, xf_division_lut_ce0, "xf_division_lut_ce0");
    sc_trace(mVcdFile, xf_division_lut_q0, "xf_division_lut_q0");
    sc_trace(mVcdFile, tmpx_fu_254_p4, "tmpx_fu_254_p4");
    sc_trace(mVcdFile, tmpx_reg_558, "tmpx_reg_558");
    sc_trace(mVcdFile, tmpx_4_fu_264_p4, "tmpx_4_fu_264_p4");
    sc_trace(mVcdFile, tmpx_4_reg_563, "tmpx_4_reg_563");
    sc_trace(mVcdFile, tmpx_5_fu_274_p4, "tmpx_5_fu_274_p4");
    sc_trace(mVcdFile, tmpx_5_reg_568, "tmpx_5_reg_568");
    sc_trace(mVcdFile, tmpx_6_fu_284_p1, "tmpx_6_fu_284_p1");
    sc_trace(mVcdFile, tmpx_6_reg_573, "tmpx_6_reg_573");
    sc_trace(mVcdFile, tmp_8_fu_288_p2, "tmp_8_fu_288_p2");
    sc_trace(mVcdFile, tmp_8_reg_578, "tmp_8_reg_578");
    sc_trace(mVcdFile, tmp_9_fu_294_p2, "tmp_9_fu_294_p2");
    sc_trace(mVcdFile, tmp_9_reg_582, "tmp_9_reg_582");
    sc_trace(mVcdFile, tmp_10_fu_300_p2, "tmp_10_fu_300_p2");
    sc_trace(mVcdFile, tmp_10_reg_586, "tmp_10_reg_586");
    sc_trace(mVcdFile, tmp_11_fu_306_p2, "tmp_11_fu_306_p2");
    sc_trace(mVcdFile, tmp_11_reg_590, "tmp_11_reg_590");
    sc_trace(mVcdFile, pos_fu_320_p2, "pos_fu_320_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, B_L_fu_355_p2, "B_L_fu_355_p2");
    sc_trace(mVcdFile, B_L_reg_606, "B_L_reg_606");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_33_fu_361_p2, "tmp_33_fu_361_p2");
    sc_trace(mVcdFile, tmp_33_reg_612, "tmp_33_reg_612");
    sc_trace(mVcdFile, pos_4_fu_375_p2, "pos_4_fu_375_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, pos_5_fu_410_p2, "pos_5_fu_410_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, pos_7_fu_445_p2, "pos_7_fu_445_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp1_reg_111, "tmp1_reg_111");
    sc_trace(mVcdFile, tmp_fu_312_p3, "tmp_fu_312_p3");
    sc_trace(mVcdFile, tmp_17_fu_341_p2, "tmp_17_fu_341_p2");
    sc_trace(mVcdFile, pos_6_ph1_reg_122, "pos_6_ph1_reg_122");
    sc_trace(mVcdFile, pos_6_ph2_reg_133, "pos_6_ph2_reg_133");
    sc_trace(mVcdFile, tmp_132_fu_367_p3, "tmp_132_fu_367_p3");
    sc_trace(mVcdFile, tmp_23_fu_396_p2, "tmp_23_fu_396_p2");
    sc_trace(mVcdFile, pos_6_ph3_reg_144, "pos_6_ph3_reg_144");
    sc_trace(mVcdFile, tmp_134_fu_402_p3, "tmp_134_fu_402_p3");
    sc_trace(mVcdFile, tmp_31_fu_431_p2, "tmp_31_fu_431_p2");
    sc_trace(mVcdFile, pos_6_ph_reg_155, "pos_6_ph_reg_155");
    sc_trace(mVcdFile, tmp_133_fu_437_p3, "tmp_133_fu_437_p3");
    sc_trace(mVcdFile, tmp_27_fu_466_p2, "tmp_27_fu_466_p2");
    sc_trace(mVcdFile, ap_phi_mux_pos_6_phi_fu_169_p8, "ap_phi_mux_pos_6_phi_fu_169_p8");
    sc_trace(mVcdFile, ap_phi_mux_block_2_phi_fu_186_p8, "ap_phi_mux_block_2_phi_fu_186_p8");
    sc_trace(mVcdFile, tmp_1_reg_200, "tmp_1_reg_200");
    sc_trace(mVcdFile, tmp_2_reg_211, "tmp_2_reg_211");
    sc_trace(mVcdFile, tmp_3_reg_222, "tmp_3_reg_222");
    sc_trace(mVcdFile, N_cast_fu_526_p1, "N_cast_fu_526_p1");
    sc_trace(mVcdFile, ap_phi_mux_N_write_assign_phi_fu_236_p4, "ap_phi_mux_N_write_assign_phi_fu_236_p4");
    sc_trace(mVcdFile, N_write_assign_reg_233, "N_write_assign_reg_233");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_phi_mux_p_0_in_phi_fu_246_p4, "ap_phi_mux_p_0_in_phi_fu_246_p4");
    sc_trace(mVcdFile, p_0_in_reg_242, "p_0_in_reg_242");
    sc_trace(mVcdFile, tmp_35_fu_516_p1, "tmp_35_fu_516_p1");
    sc_trace(mVcdFile, tmp_15_fu_326_p2, "tmp_15_fu_326_p2");
    sc_trace(mVcdFile, tmp_19_cast_fu_332_p1, "tmp_19_cast_fu_332_p1");
    sc_trace(mVcdFile, tmp_16_fu_336_p2, "tmp_16_fu_336_p2");
    sc_trace(mVcdFile, pos_6_cast_fu_347_p1, "pos_6_cast_fu_347_p1");
    sc_trace(mVcdFile, block_2_cast_fu_351_p1, "block_2_cast_fu_351_p1");
    sc_trace(mVcdFile, tmp_21_fu_381_p2, "tmp_21_fu_381_p2");
    sc_trace(mVcdFile, tmp_25_cast_fu_387_p1, "tmp_25_cast_fu_387_p1");
    sc_trace(mVcdFile, tmp_22_fu_391_p2, "tmp_22_fu_391_p2");
    sc_trace(mVcdFile, tmp_29_fu_416_p2, "tmp_29_fu_416_p2");
    sc_trace(mVcdFile, tmp_33_cast_fu_422_p1, "tmp_33_cast_fu_422_p1");
    sc_trace(mVcdFile, tmp_30_fu_426_p2, "tmp_30_fu_426_p2");
    sc_trace(mVcdFile, tmp_25_fu_451_p2, "tmp_25_fu_451_p2");
    sc_trace(mVcdFile, tmp_29_cast_fu_457_p1, "tmp_29_cast_fu_457_p1");
    sc_trace(mVcdFile, tmp_26_fu_461_p2, "tmp_26_fu_461_p2");
    sc_trace(mVcdFile, tmp_139_fu_477_p1, "tmp_139_fu_477_p1");
    sc_trace(mVcdFile, tmp_40_cast_cast_fu_480_p1, "tmp_40_cast_cast_fu_480_p1");
    sc_trace(mVcdFile, tmp_34_fu_483_p2, "tmp_34_fu_483_p2");
    sc_trace(mVcdFile, tmp_32_fu_472_p2, "tmp_32_fu_472_p2");
    sc_trace(mVcdFile, tmp_120_fu_489_p4, "tmp_120_fu_489_p4");
    sc_trace(mVcdFile, tmp_121_fu_498_p4, "tmp_121_fu_498_p4");
    sc_trace(mVcdFile, index_fu_508_p3, "index_fu_508_p3");
    sc_trace(mVcdFile, N_fu_521_p2, "N_fu_521_p2");
    sc_trace(mVcdFile, val_fu_531_p1, "val_fu_531_p1");
    sc_trace(mVcdFile, ap_return_0_preg, "ap_return_0_preg");
    sc_trace(mVcdFile, ap_return_1_preg, "ap_return_1_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_171, "ap_condition_171");
    sc_trace(mVcdFile, ap_condition_174, "ap_condition_174");
#endif

    }
}

Inverse::~Inverse() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete xf_division_lut_U;
}

void Inverse::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(tmp_8_fu_288_p2.read(), ap_const_lv1_1))) {
        N_write_assign_reg_233 = N_read.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(tmp_8_reg_578.read(), ap_const_lv1_0))) {
        N_write_assign_reg_233 = N_cast_fu_526_p1.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_0_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_return_0_preg = val_fu_531_p1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_1_preg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_return_1_preg = ap_phi_mux_N_write_assign_phi_fu_236_p4.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(tmp_8_fu_288_p2.read(), ap_const_lv1_1))) {
        p_0_in_reg_242 = ap_const_lv16_FFFF;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(tmp_8_reg_578.read(), ap_const_lv1_0))) {
        p_0_in_reg_242 = xf_division_lut_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_312_p3.read())) {
            pos_6_ph1_reg_122 = ap_const_lv3_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_312_p3.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_341_p2.read()))) {
            pos_6_ph1_reg_122 = pos_fu_320_p2.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_132_fu_367_p3.read())) {
            pos_6_ph2_reg_133 = ap_const_lv3_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_132_fu_367_p3.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_fu_396_p2.read()))) {
            pos_6_ph2_reg_133 = pos_4_fu_375_p2.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_134_fu_402_p3.read())) {
            pos_6_ph3_reg_144 = ap_const_lv3_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_134_fu_402_p3.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_31_fu_431_p2.read()))) {
            pos_6_ph3_reg_144 = pos_5_fu_410_p2.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_133_fu_437_p3.read())) {
            pos_6_ph_reg_155 = ap_const_lv3_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_133_fu_437_p3.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_27_fu_466_p2.read()))) {
            pos_6_ph_reg_155 = pos_7_fu_445_p2.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(tmp_8_fu_288_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_9_fu_294_p2.read(), ap_const_lv1_0))) {
        tmp1_reg_111 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_312_p3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_fu_341_p2.read()))) {
        tmp1_reg_111 = pos_fu_320_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(tmp_8_fu_288_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_9_fu_294_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_300_p2.read()))) {
        tmp_1_reg_200 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_132_fu_367_p3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_fu_396_p2.read()))) {
        tmp_1_reg_200 = pos_4_fu_375_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(tmp_8_fu_288_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_9_fu_294_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(tmp_10_fu_300_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_306_p2.read()))) {
        tmp_2_reg_211 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_134_fu_402_p3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_31_fu_431_p2.read()))) {
        tmp_2_reg_211 = pos_5_fu_410_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(tmp_8_fu_288_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_9_fu_294_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(tmp_10_fu_300_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_fu_306_p2.read()))) {
        tmp_3_reg_222 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_133_fu_437_p3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_27_fu_466_p2.read()))) {
        tmp_3_reg_222 = pos_7_fu_445_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_L_reg_606 = B_L_fu_355_p2.read();
        tmp_33_reg_612 = tmp_33_fu_361_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_8_fu_288_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_9_fu_294_p2.read(), ap_const_lv1_1))) {
        tmp_10_reg_586 = tmp_10_fu_300_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_8_fu_288_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_9_fu_294_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(tmp_10_fu_300_p2.read(), ap_const_lv1_1))) {
        tmp_11_reg_590 = tmp_11_fu_306_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_8_reg_578 = tmp_8_fu_288_p2.read();
        tmpx_4_reg_563 = x.read().range(11, 8);
        tmpx_5_reg_568 = x.read().range(7, 4);
        tmpx_6_reg_573 = tmpx_6_fu_284_p1.read();
        tmpx_reg_558 = x.read().range(15, 12);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_8_fu_288_p2.read(), ap_const_lv1_0))) {
        tmp_9_reg_582 = tmp_9_fu_294_p2.read();
    }
}

void Inverse::thread_B_L_fu_355_p2() {
    B_L_fu_355_p2 = (!pos_6_cast_fu_347_p1.read().is_01() || !block_2_cast_fu_351_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(pos_6_cast_fu_347_p1.read()) + sc_biguint<5>(block_2_cast_fu_351_p1.read()));
}

void Inverse::thread_N_cast_fu_526_p1() {
    N_cast_fu_526_p1 = esl_zext<8,5>(N_fu_521_p2.read());
}

void Inverse::thread_N_fu_521_p2() {
    N_fu_521_p2 = (!ap_const_lv5_14.is_01() || !B_L_reg_606.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_14) - sc_biguint<5>(B_L_reg_606.read()));
}

void Inverse::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Inverse::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Inverse::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Inverse::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Inverse::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Inverse::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Inverse::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Inverse::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void Inverse::thread_ap_condition_171() {
    ap_condition_171 = (esl_seteq<1,1,1>(tmp_9_reg_582.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(tmp_10_reg_586.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_590.read()));
}

void Inverse::thread_ap_condition_174() {
    ap_condition_174 = (esl_seteq<1,1,1>(tmp_9_reg_582.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(tmp_10_reg_586.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_590.read()));
}

void Inverse::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Inverse::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Inverse::thread_ap_phi_mux_N_write_assign_phi_fu_236_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(tmp_8_reg_578.read(), ap_const_lv1_0))) {
        ap_phi_mux_N_write_assign_phi_fu_236_p4 = N_cast_fu_526_p1.read();
    } else {
        ap_phi_mux_N_write_assign_phi_fu_236_p4 = N_write_assign_reg_233.read();
    }
}

void Inverse::thread_ap_phi_mux_block_2_phi_fu_186_p8() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(tmp_9_reg_582.read(), ap_const_lv1_0)) {
            ap_phi_mux_block_2_phi_fu_186_p8 = ap_const_lv4_0;
        } else if ((esl_seteq<1,1,1>(tmp_9_reg_582.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_586.read()))) {
            ap_phi_mux_block_2_phi_fu_186_p8 = ap_const_lv4_4;
        } else if (esl_seteq<1,1,1>(ap_condition_174.read(), ap_const_boolean_1)) {
            ap_phi_mux_block_2_phi_fu_186_p8 = ap_const_lv4_8;
        } else if (esl_seteq<1,1,1>(ap_condition_171.read(), ap_const_boolean_1)) {
            ap_phi_mux_block_2_phi_fu_186_p8 = ap_const_lv4_C;
        } else {
            ap_phi_mux_block_2_phi_fu_186_p8 = "XXXX";
        }
    } else {
        ap_phi_mux_block_2_phi_fu_186_p8 = "XXXX";
    }
}

void Inverse::thread_ap_phi_mux_p_0_in_phi_fu_246_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(tmp_8_reg_578.read(), ap_const_lv1_0))) {
        ap_phi_mux_p_0_in_phi_fu_246_p4 = xf_division_lut_q0.read();
    } else {
        ap_phi_mux_p_0_in_phi_fu_246_p4 = p_0_in_reg_242.read();
    }
}

void Inverse::thread_ap_phi_mux_pos_6_phi_fu_169_p8() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(tmp_9_reg_582.read(), ap_const_lv1_0)) {
            ap_phi_mux_pos_6_phi_fu_169_p8 = pos_6_ph1_reg_122.read();
        } else if ((esl_seteq<1,1,1>(tmp_9_reg_582.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_586.read()))) {
            ap_phi_mux_pos_6_phi_fu_169_p8 = pos_6_ph2_reg_133.read();
        } else if (esl_seteq<1,1,1>(ap_condition_174.read(), ap_const_boolean_1)) {
            ap_phi_mux_pos_6_phi_fu_169_p8 = pos_6_ph3_reg_144.read();
        } else if (esl_seteq<1,1,1>(ap_condition_171.read(), ap_const_boolean_1)) {
            ap_phi_mux_pos_6_phi_fu_169_p8 = pos_6_ph_reg_155.read();
        } else {
            ap_phi_mux_pos_6_phi_fu_169_p8 =  (sc_lv<3>) ("XXX");
        }
    } else {
        ap_phi_mux_pos_6_phi_fu_169_p8 =  (sc_lv<3>) ("XXX");
    }
}

void Inverse::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Inverse::thread_ap_return_0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ap_return_0 = val_fu_531_p1.read();
    } else {
        ap_return_0 = ap_return_0_preg.read();
    }
}

void Inverse::thread_ap_return_1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ap_return_1 = ap_phi_mux_N_write_assign_phi_fu_236_p4.read();
    } else {
        ap_return_1 = ap_return_1_preg.read();
    }
}

void Inverse::thread_block_2_cast_fu_351_p1() {
    block_2_cast_fu_351_p1 = esl_zext<5,4>(ap_phi_mux_block_2_phi_fu_186_p8.read());
}

void Inverse::thread_index_fu_508_p3() {
    index_fu_508_p3 = (!tmp_32_fu_472_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_32_fu_472_p2.read()[0].to_bool())? tmp_120_fu_489_p4.read(): tmp_121_fu_498_p4.read());
}

void Inverse::thread_pos_4_fu_375_p2() {
    pos_4_fu_375_p2 = (!tmp_1_reg_200.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_1_reg_200.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Inverse::thread_pos_5_fu_410_p2() {
    pos_5_fu_410_p2 = (!tmp_2_reg_211.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_2_reg_211.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Inverse::thread_pos_6_cast_fu_347_p1() {
    pos_6_cast_fu_347_p1 = esl_zext<5,3>(ap_phi_mux_pos_6_phi_fu_169_p8.read());
}

void Inverse::thread_pos_7_fu_445_p2() {
    pos_7_fu_445_p2 = (!tmp_3_reg_222.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_3_reg_222.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Inverse::thread_pos_fu_320_p2() {
    pos_fu_320_p2 = (!tmp1_reg_111.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(tmp1_reg_111.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Inverse::thread_tmp_10_fu_300_p2() {
    tmp_10_fu_300_p2 = (!tmpx_4_fu_264_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmpx_4_fu_264_p4.read() == ap_const_lv4_0);
}

void Inverse::thread_tmp_11_fu_306_p2() {
    tmp_11_fu_306_p2 = (!tmpx_5_fu_274_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmpx_5_fu_274_p4.read() == ap_const_lv4_0);
}

void Inverse::thread_tmp_120_fu_489_p4() {
    tmp_120_fu_489_p4 = x.read().range(14, 4);
}

void Inverse::thread_tmp_121_fu_498_p4() {
    tmp_121_fu_498_p4 = tmp_34_fu_483_p2.read().range(14, 4);
}

void Inverse::thread_tmp_132_fu_367_p3() {
    tmp_132_fu_367_p3 = tmp_1_reg_200.read().range(2, 2);
}

void Inverse::thread_tmp_133_fu_437_p3() {
    tmp_133_fu_437_p3 = tmp_3_reg_222.read().range(2, 2);
}

void Inverse::thread_tmp_134_fu_402_p3() {
    tmp_134_fu_402_p3 = tmp_2_reg_211.read().range(2, 2);
}

void Inverse::thread_tmp_139_fu_477_p1() {
    tmp_139_fu_477_p1 = x.read().range(15-1, 0);
}

void Inverse::thread_tmp_15_fu_326_p2() {
    tmp_15_fu_326_p2 = (!ap_const_lv3_3.is_01() || !tmp1_reg_111.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_3) - sc_biguint<3>(tmp1_reg_111.read()));
}

void Inverse::thread_tmp_16_fu_336_p2() {
    tmp_16_fu_336_p2 = (!tmp_19_cast_fu_332_p1.read().is_01())? sc_lv<4>(): tmpx_reg_558.read() >> (unsigned short)tmp_19_cast_fu_332_p1.read().to_uint();
}

void Inverse::thread_tmp_17_fu_341_p2() {
    tmp_17_fu_341_p2 = (!tmp_16_fu_336_p2.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_16_fu_336_p2.read() == ap_const_lv4_0);
}

void Inverse::thread_tmp_19_cast_fu_332_p1() {
    tmp_19_cast_fu_332_p1 = esl_zext<4,3>(tmp_15_fu_326_p2.read());
}

void Inverse::thread_tmp_21_fu_381_p2() {
    tmp_21_fu_381_p2 = (!ap_const_lv3_3.is_01() || !tmp_1_reg_200.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_3) - sc_biguint<3>(tmp_1_reg_200.read()));
}

void Inverse::thread_tmp_22_fu_391_p2() {
    tmp_22_fu_391_p2 = (!tmp_25_cast_fu_387_p1.read().is_01())? sc_lv<4>(): tmpx_4_reg_563.read() >> (unsigned short)tmp_25_cast_fu_387_p1.read().to_uint();
}

void Inverse::thread_tmp_23_fu_396_p2() {
    tmp_23_fu_396_p2 = (!tmp_22_fu_391_p2.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_22_fu_391_p2.read() == ap_const_lv4_0);
}

void Inverse::thread_tmp_25_cast_fu_387_p1() {
    tmp_25_cast_fu_387_p1 = esl_zext<4,3>(tmp_21_fu_381_p2.read());
}

void Inverse::thread_tmp_25_fu_451_p2() {
    tmp_25_fu_451_p2 = (!ap_const_lv3_3.is_01() || !tmp_3_reg_222.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_3) - sc_biguint<3>(tmp_3_reg_222.read()));
}

void Inverse::thread_tmp_26_fu_461_p2() {
    tmp_26_fu_461_p2 = (!tmp_29_cast_fu_457_p1.read().is_01())? sc_lv<4>(): tmpx_6_reg_573.read() >> (unsigned short)tmp_29_cast_fu_457_p1.read().to_uint();
}

void Inverse::thread_tmp_27_fu_466_p2() {
    tmp_27_fu_466_p2 = (!tmp_26_fu_461_p2.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_26_fu_461_p2.read() == ap_const_lv4_0);
}

void Inverse::thread_tmp_29_cast_fu_457_p1() {
    tmp_29_cast_fu_457_p1 = esl_zext<4,3>(tmp_25_fu_451_p2.read());
}

void Inverse::thread_tmp_29_fu_416_p2() {
    tmp_29_fu_416_p2 = (!ap_const_lv3_3.is_01() || !tmp_2_reg_211.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_3) - sc_biguint<3>(tmp_2_reg_211.read()));
}

void Inverse::thread_tmp_30_fu_426_p2() {
    tmp_30_fu_426_p2 = (!tmp_33_cast_fu_422_p1.read().is_01())? sc_lv<4>(): tmpx_5_reg_568.read() >> (unsigned short)tmp_33_cast_fu_422_p1.read().to_uint();
}

void Inverse::thread_tmp_31_fu_431_p2() {
    tmp_31_fu_431_p2 = (!tmp_30_fu_426_p2.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_30_fu_426_p2.read() == ap_const_lv4_0);
}

void Inverse::thread_tmp_32_fu_472_p2() {
    tmp_32_fu_472_p2 = (!B_L_reg_606.read().is_01() || !ap_const_lv5_0.is_01())? sc_lv<1>(): sc_lv<1>(B_L_reg_606.read() == ap_const_lv5_0);
}

void Inverse::thread_tmp_33_cast_fu_422_p1() {
    tmp_33_cast_fu_422_p1 = esl_zext<4,3>(tmp_29_fu_416_p2.read());
}

void Inverse::thread_tmp_33_fu_361_p2() {
    tmp_33_fu_361_p2 = (!ap_const_lv5_1F.is_01() || !B_L_fu_355_p2.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_1F) + sc_biguint<5>(B_L_fu_355_p2.read()));
}

void Inverse::thread_tmp_34_fu_483_p2() {
    tmp_34_fu_483_p2 = (!tmp_40_cast_cast_fu_480_p1.read().is_01())? sc_lv<15>(): tmp_139_fu_477_p1.read() << (unsigned short)tmp_40_cast_cast_fu_480_p1.read().to_uint();
}

void Inverse::thread_tmp_35_fu_516_p1() {
    tmp_35_fu_516_p1 = esl_zext<64,11>(index_fu_508_p3.read());
}

void Inverse::thread_tmp_40_cast_cast_fu_480_p1() {
    tmp_40_cast_cast_fu_480_p1 = esl_zext<15,5>(tmp_33_reg_612.read());
}

void Inverse::thread_tmp_8_fu_288_p2() {
    tmp_8_fu_288_p2 = (!x.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(x.read() == ap_const_lv16_0);
}

void Inverse::thread_tmp_9_fu_294_p2() {
    tmp_9_fu_294_p2 = (!tmpx_fu_254_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmpx_fu_254_p4.read() == ap_const_lv4_0);
}

void Inverse::thread_tmp_fu_312_p3() {
    tmp_fu_312_p3 = tmp1_reg_111.read().range(2, 2);
}

void Inverse::thread_tmpx_4_fu_264_p4() {
    tmpx_4_fu_264_p4 = x.read().range(11, 8);
}

void Inverse::thread_tmpx_5_fu_274_p4() {
    tmpx_5_fu_274_p4 = x.read().range(7, 4);
}

void Inverse::thread_tmpx_6_fu_284_p1() {
    tmpx_6_fu_284_p1 = x.read().range(4-1, 0);
}

void Inverse::thread_tmpx_fu_254_p4() {
    tmpx_fu_254_p4 = x.read().range(15, 12);
}

void Inverse::thread_val_fu_531_p1() {
    val_fu_531_p1 = esl_zext<32,16>(ap_phi_mux_p_0_in_phi_fu_246_p4.read());
}

void Inverse::thread_xf_division_lut_address0() {
    xf_division_lut_address0 =  (sc_lv<12>) (tmp_35_fu_516_p1.read());
}

void Inverse::thread_xf_division_lut_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        xf_division_lut_ce0 = ap_const_logic_1;
    } else {
        xf_division_lut_ce0 = ap_const_logic_0;
    }
}

void Inverse::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_8_fu_288_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_9_fu_294_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(tmp_10_fu_300_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_fu_306_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_8_fu_288_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_9_fu_294_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(tmp_10_fu_300_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_306_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_8_fu_288_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_9_fu_294_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_300_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_8_fu_288_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_9_fu_294_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_8_fu_288_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_312_p3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_fu_341_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_132_fu_367_p3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_fu_396_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_134_fu_402_p3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_31_fu_431_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_133_fu_437_p3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_27_fu_466_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

}

