// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "resize_accel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int resize_accel::C_S_AXI_DATA_WIDTH = "100000";
const int resize_accel::C_S_AXI_WSTRB_WIDTH = "100";
const int resize_accel::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic resize_accel::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<24> resize_accel::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<1> resize_accel::ap_const_lv1_0 = "0";
const sc_lv<32> resize_accel::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_logic resize_accel::ap_const_logic_0 = sc_dt::Log_0;

resize_accel::resize_accel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    resize_accel_AXILiteS_s_axi_U = new resize_accel_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("resize_accel_AXILiteS_s_axi_U");
    resize_accel_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    resize_accel_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    resize_accel_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    resize_accel_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    resize_accel_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    resize_accel_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    resize_accel_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    resize_accel_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    resize_accel_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    resize_accel_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    resize_accel_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    resize_accel_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    resize_accel_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    resize_accel_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    resize_accel_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    resize_accel_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    resize_accel_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    resize_accel_AXILiteS_s_axi_U->ACLK(ap_clk);
    resize_accel_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    resize_accel_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    resize_accel_AXILiteS_s_axi_U->ap_start(ap_start);
    resize_accel_AXILiteS_s_axi_U->interrupt(interrupt);
    resize_accel_AXILiteS_s_axi_U->ap_ready(ap_ready);
    resize_accel_AXILiteS_s_axi_U->ap_done(ap_done);
    resize_accel_AXILiteS_s_axi_U->ap_idle(ap_idle);
    resize_accel_AXILiteS_s_axi_U->inval(inval);
    resize_accel_AXILiteS_s_axi_U->xc_out(resize_U0_xc_out);
    resize_accel_AXILiteS_s_axi_U->xc_out_ap_vld(resize_U0_xc_out_ap_vld);
    resize_accel_AXILiteS_s_axi_U->yc_out(resize_U0_yc_out);
    resize_accel_AXILiteS_s_axi_U->yc_out_ap_vld(resize_U0_yc_out_ap_vld);
    resize_accel_AXILiteS_s_axi_U->anglexcomp(resize_U0_anglexcomp);
    resize_accel_AXILiteS_s_axi_U->anglexcomp_ap_vld(resize_U0_anglexcomp_ap_vld);
    resize_accel_AXILiteS_s_axi_U->angleycomp(resize_U0_angleycomp);
    resize_accel_AXILiteS_s_axi_U->angleycomp_ap_vld(resize_U0_angleycomp_ap_vld);
    axis2xfMat_U0 = new axis2xfMat("axis2xfMat_U0");
    axis2xfMat_U0->ap_clk(ap_clk);
    axis2xfMat_U0->ap_rst(ap_rst_n_inv);
    axis2xfMat_U0->ap_start(axis2xfMat_U0_ap_start);
    axis2xfMat_U0->start_full_n(start_for_resize_U0_full_n);
    axis2xfMat_U0->ap_done(axis2xfMat_U0_ap_done);
    axis2xfMat_U0->ap_continue(axis2xfMat_U0_ap_continue);
    axis2xfMat_U0->ap_idle(axis2xfMat_U0_ap_idle);
    axis2xfMat_U0->ap_ready(axis2xfMat_U0_ap_ready);
    axis2xfMat_U0->start_out(axis2xfMat_U0_start_out);
    axis2xfMat_U0->start_write(axis2xfMat_U0_start_write);
    axis2xfMat_U0->p_src_data_V_din(axis2xfMat_U0_p_src_data_V_din);
    axis2xfMat_U0->p_src_data_V_full_n(p_src_data_V_full_n);
    axis2xfMat_U0->p_src_data_V_write(axis2xfMat_U0_p_src_data_V_write);
    axis2xfMat_U0->src_TDATA(src_TDATA);
    axis2xfMat_U0->src_TVALID(src_TVALID);
    axis2xfMat_U0->src_TREADY(axis2xfMat_U0_src_TREADY);
    resize_U0 = new resize("resize_U0");
    resize_U0->ap_start(resize_U0_ap_start);
    resize_U0->start_full_n(start_for_xfMat2axis_U0_full_n);
    resize_U0->start_out(resize_U0_start_out);
    resize_U0->start_write(resize_U0_start_write);
    resize_U0->p_src_data_V_dout(p_src_data_V_dout);
    resize_U0->p_src_data_V_empty_n(p_src_data_V_empty_n);
    resize_U0->p_src_data_V_read(resize_U0_p_src_data_V_read);
    resize_U0->p_dst_data_V_din(resize_U0_p_dst_data_V_din);
    resize_U0->p_dst_data_V_full_n(p_dst_data_V_full_n);
    resize_U0->p_dst_data_V_write(resize_U0_p_dst_data_V_write);
    resize_U0->xc_out(resize_U0_xc_out);
    resize_U0->yc_out(resize_U0_yc_out);
    resize_U0->anglexcomp(resize_U0_anglexcomp);
    resize_U0->angleycomp(resize_U0_angleycomp);
    resize_U0->ap_clk(ap_clk);
    resize_U0->ap_rst(ap_rst_n_inv);
    resize_U0->xc_out_ap_vld(resize_U0_xc_out_ap_vld);
    resize_U0->yc_out_ap_vld(resize_U0_yc_out_ap_vld);
    resize_U0->anglexcomp_ap_vld(resize_U0_anglexcomp_ap_vld);
    resize_U0->angleycomp_ap_vld(resize_U0_angleycomp_ap_vld);
    resize_U0->ap_done(resize_U0_ap_done);
    resize_U0->ap_ready(resize_U0_ap_ready);
    resize_U0->ap_idle(resize_U0_ap_idle);
    resize_U0->ap_continue(resize_U0_ap_continue);
    xfMat2axis_U0 = new xfMat2axis("xfMat2axis_U0");
    xfMat2axis_U0->ap_clk(ap_clk);
    xfMat2axis_U0->ap_rst(ap_rst_n_inv);
    xfMat2axis_U0->ap_start(xfMat2axis_U0_ap_start);
    xfMat2axis_U0->ap_done(xfMat2axis_U0_ap_done);
    xfMat2axis_U0->ap_continue(xfMat2axis_U0_ap_continue);
    xfMat2axis_U0->ap_idle(xfMat2axis_U0_ap_idle);
    xfMat2axis_U0->ap_ready(xfMat2axis_U0_ap_ready);
    xfMat2axis_U0->p_dst_data_V_dout(p_dst_data_V_dout);
    xfMat2axis_U0->p_dst_data_V_empty_n(p_dst_data_V_empty_n);
    xfMat2axis_U0->p_dst_data_V_read(xfMat2axis_U0_p_dst_data_V_read);
    xfMat2axis_U0->dst_TDATA(xfMat2axis_U0_dst_TDATA);
    xfMat2axis_U0->dst_TVALID(xfMat2axis_U0_dst_TVALID);
    xfMat2axis_U0->dst_TREADY(dst_TREADY);
    xfMat2axis_U0->dst_TLAST(xfMat2axis_U0_dst_TLAST);
    p_src_data_V_U = new fifo_w24_d150_A("p_src_data_V_U");
    p_src_data_V_U->clk(ap_clk);
    p_src_data_V_U->reset(ap_rst_n_inv);
    p_src_data_V_U->if_read_ce(ap_var_for_const0);
    p_src_data_V_U->if_write_ce(ap_var_for_const0);
    p_src_data_V_U->if_din(axis2xfMat_U0_p_src_data_V_din);
    p_src_data_V_U->if_full_n(p_src_data_V_full_n);
    p_src_data_V_U->if_write(axis2xfMat_U0_p_src_data_V_write);
    p_src_data_V_U->if_dout(p_src_data_V_dout);
    p_src_data_V_U->if_empty_n(p_src_data_V_empty_n);
    p_src_data_V_U->if_read(resize_U0_p_src_data_V_read);
    p_dst_data_V_U = new fifo_w24_d150_A("p_dst_data_V_U");
    p_dst_data_V_U->clk(ap_clk);
    p_dst_data_V_U->reset(ap_rst_n_inv);
    p_dst_data_V_U->if_read_ce(ap_var_for_const0);
    p_dst_data_V_U->if_write_ce(ap_var_for_const0);
    p_dst_data_V_U->if_din(resize_U0_p_dst_data_V_din);
    p_dst_data_V_U->if_full_n(p_dst_data_V_full_n);
    p_dst_data_V_U->if_write(resize_U0_p_dst_data_V_write);
    p_dst_data_V_U->if_dout(p_dst_data_V_dout);
    p_dst_data_V_U->if_empty_n(p_dst_data_V_empty_n);
    p_dst_data_V_U->if_read(xfMat2axis_U0_p_dst_data_V_read);
    start_for_resize_U0_U = new start_for_resize_U0("start_for_resize_U0_U");
    start_for_resize_U0_U->clk(ap_clk);
    start_for_resize_U0_U->reset(ap_rst_n_inv);
    start_for_resize_U0_U->if_read_ce(ap_var_for_const0);
    start_for_resize_U0_U->if_write_ce(ap_var_for_const0);
    start_for_resize_U0_U->if_din(start_for_resize_U0_din);
    start_for_resize_U0_U->if_full_n(start_for_resize_U0_full_n);
    start_for_resize_U0_U->if_write(axis2xfMat_U0_start_write);
    start_for_resize_U0_U->if_dout(start_for_resize_U0_dout);
    start_for_resize_U0_U->if_empty_n(start_for_resize_U0_empty_n);
    start_for_resize_U0_U->if_read(resize_U0_ap_ready);
    start_for_xfMat2axis_U0_U = new start_for_xfMat2axis_U0("start_for_xfMat2axis_U0_U");
    start_for_xfMat2axis_U0_U->clk(ap_clk);
    start_for_xfMat2axis_U0_U->reset(ap_rst_n_inv);
    start_for_xfMat2axis_U0_U->if_read_ce(ap_var_for_const0);
    start_for_xfMat2axis_U0_U->if_write_ce(ap_var_for_const0);
    start_for_xfMat2axis_U0_U->if_din(start_for_xfMat2axis_U0_din);
    start_for_xfMat2axis_U0_U->if_full_n(start_for_xfMat2axis_U0_full_n);
    start_for_xfMat2axis_U0_U->if_write(resize_U0_start_write);
    start_for_xfMat2axis_U0_U->if_dout(start_for_xfMat2axis_U0_dout);
    start_for_xfMat2axis_U0_U->if_empty_n(start_for_xfMat2axis_U0_empty_n);
    start_for_xfMat2axis_U0_U->if_read(xfMat2axis_U0_ap_ready);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sync_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( axis2xfMat_U0_ap_idle );
    sensitive << ( resize_U0_ap_idle );
    sensitive << ( xfMat2axis_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( axis2xfMat_U0_ap_ready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_continue);
    sensitive << ( ap_sync_done );

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( resize_U0_ap_done );
    sensitive << ( xfMat2axis_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( axis2xfMat_U0_ap_ready );

    SC_METHOD(thread_axis2xfMat_U0_ap_continue);

    SC_METHOD(thread_axis2xfMat_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_dst_TDATA);
    sensitive << ( xfMat2axis_U0_dst_TDATA );

    SC_METHOD(thread_dst_TLAST);
    sensitive << ( xfMat2axis_U0_dst_TLAST );

    SC_METHOD(thread_dst_TVALID);
    sensitive << ( xfMat2axis_U0_dst_TVALID );

    SC_METHOD(thread_resize_U0_ap_continue);
    sensitive << ( ap_sync_done );

    SC_METHOD(thread_resize_U0_ap_start);
    sensitive << ( start_for_resize_U0_empty_n );

    SC_METHOD(thread_src_TREADY);
    sensitive << ( axis2xfMat_U0_src_TREADY );

    SC_METHOD(thread_start_for_resize_U0_din);

    SC_METHOD(thread_start_for_xfMat2axis_U0_din);

    SC_METHOD(thread_xfMat2axis_U0_ap_continue);
    sensitive << ( ap_sync_done );

    SC_METHOD(thread_xfMat2axis_U0_ap_start);
    sensitive << ( start_for_xfMat2axis_U0_empty_n );

    SC_METHOD(thread_xfMat2axis_U0_start_full_n);

    SC_METHOD(thread_xfMat2axis_U0_start_write);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "resize_accel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, src_TDATA, "(port)src_TDATA");
    sc_trace(mVcdFile, src_TLAST, "(port)src_TLAST");
    sc_trace(mVcdFile, dst_TDATA, "(port)dst_TDATA");
    sc_trace(mVcdFile, dst_TLAST, "(port)dst_TLAST");
    sc_trace(mVcdFile, src_TVALID, "(port)src_TVALID");
    sc_trace(mVcdFile, src_TREADY, "(port)src_TREADY");
    sc_trace(mVcdFile, dst_TVALID, "(port)dst_TVALID");
    sc_trace(mVcdFile, dst_TREADY, "(port)dst_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, inval, "inval");
    sc_trace(mVcdFile, axis2xfMat_U0_ap_start, "axis2xfMat_U0_ap_start");
    sc_trace(mVcdFile, axis2xfMat_U0_ap_done, "axis2xfMat_U0_ap_done");
    sc_trace(mVcdFile, axis2xfMat_U0_ap_continue, "axis2xfMat_U0_ap_continue");
    sc_trace(mVcdFile, axis2xfMat_U0_ap_idle, "axis2xfMat_U0_ap_idle");
    sc_trace(mVcdFile, axis2xfMat_U0_ap_ready, "axis2xfMat_U0_ap_ready");
    sc_trace(mVcdFile, axis2xfMat_U0_start_out, "axis2xfMat_U0_start_out");
    sc_trace(mVcdFile, axis2xfMat_U0_start_write, "axis2xfMat_U0_start_write");
    sc_trace(mVcdFile, axis2xfMat_U0_p_src_data_V_din, "axis2xfMat_U0_p_src_data_V_din");
    sc_trace(mVcdFile, axis2xfMat_U0_p_src_data_V_write, "axis2xfMat_U0_p_src_data_V_write");
    sc_trace(mVcdFile, axis2xfMat_U0_src_TREADY, "axis2xfMat_U0_src_TREADY");
    sc_trace(mVcdFile, resize_U0_ap_start, "resize_U0_ap_start");
    sc_trace(mVcdFile, resize_U0_start_out, "resize_U0_start_out");
    sc_trace(mVcdFile, resize_U0_start_write, "resize_U0_start_write");
    sc_trace(mVcdFile, resize_U0_p_src_data_V_read, "resize_U0_p_src_data_V_read");
    sc_trace(mVcdFile, resize_U0_p_dst_data_V_din, "resize_U0_p_dst_data_V_din");
    sc_trace(mVcdFile, resize_U0_p_dst_data_V_write, "resize_U0_p_dst_data_V_write");
    sc_trace(mVcdFile, resize_U0_xc_out, "resize_U0_xc_out");
    sc_trace(mVcdFile, resize_U0_yc_out, "resize_U0_yc_out");
    sc_trace(mVcdFile, resize_U0_anglexcomp, "resize_U0_anglexcomp");
    sc_trace(mVcdFile, resize_U0_angleycomp, "resize_U0_angleycomp");
    sc_trace(mVcdFile, resize_U0_xc_out_ap_vld, "resize_U0_xc_out_ap_vld");
    sc_trace(mVcdFile, resize_U0_yc_out_ap_vld, "resize_U0_yc_out_ap_vld");
    sc_trace(mVcdFile, resize_U0_anglexcomp_ap_vld, "resize_U0_anglexcomp_ap_vld");
    sc_trace(mVcdFile, resize_U0_angleycomp_ap_vld, "resize_U0_angleycomp_ap_vld");
    sc_trace(mVcdFile, resize_U0_ap_done, "resize_U0_ap_done");
    sc_trace(mVcdFile, resize_U0_ap_ready, "resize_U0_ap_ready");
    sc_trace(mVcdFile, resize_U0_ap_idle, "resize_U0_ap_idle");
    sc_trace(mVcdFile, resize_U0_ap_continue, "resize_U0_ap_continue");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, xfMat2axis_U0_ap_start, "xfMat2axis_U0_ap_start");
    sc_trace(mVcdFile, xfMat2axis_U0_ap_done, "xfMat2axis_U0_ap_done");
    sc_trace(mVcdFile, xfMat2axis_U0_ap_continue, "xfMat2axis_U0_ap_continue");
    sc_trace(mVcdFile, xfMat2axis_U0_ap_idle, "xfMat2axis_U0_ap_idle");
    sc_trace(mVcdFile, xfMat2axis_U0_ap_ready, "xfMat2axis_U0_ap_ready");
    sc_trace(mVcdFile, xfMat2axis_U0_p_dst_data_V_read, "xfMat2axis_U0_p_dst_data_V_read");
    sc_trace(mVcdFile, xfMat2axis_U0_dst_TDATA, "xfMat2axis_U0_dst_TDATA");
    sc_trace(mVcdFile, xfMat2axis_U0_dst_TVALID, "xfMat2axis_U0_dst_TVALID");
    sc_trace(mVcdFile, xfMat2axis_U0_dst_TLAST, "xfMat2axis_U0_dst_TLAST");
    sc_trace(mVcdFile, p_src_data_V_full_n, "p_src_data_V_full_n");
    sc_trace(mVcdFile, p_src_data_V_dout, "p_src_data_V_dout");
    sc_trace(mVcdFile, p_src_data_V_empty_n, "p_src_data_V_empty_n");
    sc_trace(mVcdFile, p_dst_data_V_full_n, "p_dst_data_V_full_n");
    sc_trace(mVcdFile, p_dst_data_V_dout, "p_dst_data_V_dout");
    sc_trace(mVcdFile, p_dst_data_V_empty_n, "p_dst_data_V_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, start_for_resize_U0_din, "start_for_resize_U0_din");
    sc_trace(mVcdFile, start_for_resize_U0_full_n, "start_for_resize_U0_full_n");
    sc_trace(mVcdFile, start_for_resize_U0_dout, "start_for_resize_U0_dout");
    sc_trace(mVcdFile, start_for_resize_U0_empty_n, "start_for_resize_U0_empty_n");
    sc_trace(mVcdFile, start_for_xfMat2axis_U0_din, "start_for_xfMat2axis_U0_din");
    sc_trace(mVcdFile, start_for_xfMat2axis_U0_full_n, "start_for_xfMat2axis_U0_full_n");
    sc_trace(mVcdFile, start_for_xfMat2axis_U0_dout, "start_for_xfMat2axis_U0_dout");
    sc_trace(mVcdFile, start_for_xfMat2axis_U0_empty_n, "start_for_xfMat2axis_U0_empty_n");
    sc_trace(mVcdFile, xfMat2axis_U0_start_full_n, "xfMat2axis_U0_start_full_n");
    sc_trace(mVcdFile, xfMat2axis_U0_start_write, "xfMat2axis_U0_start_write");
#endif

    }
    mHdltvinHandle.open("resize_accel.hdltvin.dat");
    mHdltvoutHandle.open("resize_accel.hdltvout.dat");
}

resize_accel::~resize_accel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete resize_accel_AXILiteS_s_axi_U;
    delete axis2xfMat_U0;
    delete resize_U0;
    delete xfMat2axis_U0;
    delete p_src_data_V_U;
    delete p_dst_data_V_U;
    delete start_for_resize_U0_U;
    delete start_for_xfMat2axis_U0_U;
}

void resize_accel::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void resize_accel::thread_ap_done() {
    ap_done = ap_sync_done.read();
}

void resize_accel::thread_ap_idle() {
    ap_idle = (axis2xfMat_U0_ap_idle.read() & resize_U0_ap_idle.read() & xfMat2axis_U0_ap_idle.read());
}

void resize_accel::thread_ap_ready() {
    ap_ready = axis2xfMat_U0_ap_ready.read();
}

void resize_accel::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void resize_accel::thread_ap_sync_continue() {
    ap_sync_continue = ap_sync_done.read();
}

void resize_accel::thread_ap_sync_done() {
    ap_sync_done = (resize_U0_ap_done.read() & xfMat2axis_U0_ap_done.read());
}

void resize_accel::thread_ap_sync_ready() {
    ap_sync_ready = axis2xfMat_U0_ap_ready.read();
}

void resize_accel::thread_axis2xfMat_U0_ap_continue() {
    axis2xfMat_U0_ap_continue = ap_const_logic_1;
}

void resize_accel::thread_axis2xfMat_U0_ap_start() {
    axis2xfMat_U0_ap_start = ap_start.read();
}

void resize_accel::thread_dst_TDATA() {
    dst_TDATA = xfMat2axis_U0_dst_TDATA.read();
}

void resize_accel::thread_dst_TLAST() {
    dst_TLAST = xfMat2axis_U0_dst_TLAST.read();
}

void resize_accel::thread_dst_TVALID() {
    dst_TVALID = xfMat2axis_U0_dst_TVALID.read();
}

void resize_accel::thread_resize_U0_ap_continue() {
    resize_U0_ap_continue = ap_sync_done.read();
}

void resize_accel::thread_resize_U0_ap_start() {
    resize_U0_ap_start = start_for_resize_U0_empty_n.read();
}

void resize_accel::thread_src_TREADY() {
    src_TREADY = axis2xfMat_U0_src_TREADY.read();
}

void resize_accel::thread_start_for_resize_U0_din() {
    start_for_resize_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void resize_accel::thread_start_for_xfMat2axis_U0_din() {
    start_for_xfMat2axis_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void resize_accel::thread_xfMat2axis_U0_ap_continue() {
    xfMat2axis_U0_ap_continue = ap_sync_done.read();
}

void resize_accel::thread_xfMat2axis_U0_ap_start() {
    xfMat2axis_U0_ap_start = start_for_xfMat2axis_U0_empty_n.read();
}

void resize_accel::thread_xfMat2axis_U0_start_full_n() {
    xfMat2axis_U0_start_full_n = ap_const_logic_1;
}

void resize_accel::thread_xfMat2axis_U0_start_write() {
    xfMat2axis_U0_start_write = ap_const_logic_0;
}

void resize_accel::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_TDATA\" :  \"" << src_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_TLAST\" :  \"" << src_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dst_TDATA\" :  \"" << dst_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dst_TLAST\" :  \"" << dst_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"src_TVALID\" :  \"" << src_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"src_TREADY\" :  \"" << src_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dst_TVALID\" :  \"" << dst_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"dst_TREADY\" :  \"" << dst_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

