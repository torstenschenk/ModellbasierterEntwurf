// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="moments,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.745000,HLS_SYN_LAT=6232689,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=588,HLS_SYN_LUT=775}" *)

module moments (
        ap_clk,
        ap_rst_n,
        in_data_TDATA,
        in_data_TVALID,
        in_data_TREADY,
        in_data_TKEEP,
        in_data_TSTRB,
        in_data_TUSER,
        in_data_TLAST,
        in_data_TID,
        in_data_TDEST,
        out_data_TDATA,
        out_data_TVALID,
        out_data_TREADY,
        out_data_TKEEP,
        out_data_TSTRB,
        out_data_TUSER,
        out_data_TLAST,
        out_data_TID,
        out_data_TDEST,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_st1_fsm_0 = 8'b1;
parameter    ap_ST_st2_fsm_1 = 8'b10;
parameter    ap_ST_st3_fsm_2 = 8'b100;
parameter    ap_ST_st4_fsm_3 = 8'b1000;
parameter    ap_ST_pp0_stg0_fsm_4 = 8'b10000;
parameter    ap_ST_st8_fsm_5 = 8'b100000;
parameter    ap_ST_st9_fsm_6 = 8'b1000000;
parameter    ap_ST_st10_fsm_7 = 8'b10000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_FFF = 32'b111111111111;
parameter    ap_const_lv32_4007E680 = 32'b1000000000001111110011010000000;
parameter    ap_const_lv11_438 = 11'b10000111000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv11_780 = 11'b11110000000;
parameter    ap_const_lv11_1F5 = 11'b111110101;
parameter    ap_const_lv8_0 = 8'b00000000;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (C_S_AXI_CONTROL_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [23:0] in_data_TDATA;
input   in_data_TVALID;
output   in_data_TREADY;
input  [2:0] in_data_TKEEP;
input  [2:0] in_data_TSTRB;
input  [0:0] in_data_TUSER;
input  [0:0] in_data_TLAST;
input  [0:0] in_data_TID;
input  [0:0] in_data_TDEST;
output  [23:0] out_data_TDATA;
output   out_data_TVALID;
input   out_data_TREADY;
output  [2:0] out_data_TKEEP;
output  [2:0] out_data_TSTRB;
output  [0:0] out_data_TUSER;
output  [0:0] out_data_TLAST;
output  [0:0] out_data_TID;
output  [0:0] out_data_TDEST;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1 : 0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1 : 0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1 : 0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1 : 0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1 : 0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_25;
reg    ap_ready;
reg   [23:0] in_data_V_data_V_0_data_out;
wire    in_data_V_data_V_0_vld_in;
wire    in_data_V_data_V_0_ack_out;
reg   [23:0] in_data_V_data_V_0_data_reg;
reg    in_data_V_data_V_0_in_rdy;
reg    in_data_V_data_V_0_has_vld_data_reg_i;
reg    in_data_V_data_V_0_has_vld_data_reg;
reg   [2:0] in_data_V_keep_V_0_data_out;
wire    in_data_V_keep_V_0_vld_in;
wire    in_data_V_keep_V_0_ack_out;
reg   [2:0] in_data_V_keep_V_0_data_reg;
reg    in_data_V_keep_V_0_in_rdy;
reg    in_data_V_keep_V_0_has_vld_data_reg_i;
reg    in_data_V_keep_V_0_has_vld_data_reg;
reg   [2:0] in_data_V_strb_V_0_data_out;
wire    in_data_V_strb_V_0_vld_in;
wire    in_data_V_strb_V_0_ack_out;
reg   [2:0] in_data_V_strb_V_0_data_reg;
reg    in_data_V_strb_V_0_in_rdy;
reg    in_data_V_strb_V_0_has_vld_data_reg_i;
reg    in_data_V_strb_V_0_has_vld_data_reg;
reg   [0:0] in_data_V_user_V_0_data_out;
wire    in_data_V_user_V_0_vld_in;
wire    in_data_V_user_V_0_ack_out;
reg   [0:0] in_data_V_user_V_0_data_reg;
reg    in_data_V_user_V_0_in_rdy;
reg    in_data_V_user_V_0_has_vld_data_reg_i;
reg    in_data_V_user_V_0_has_vld_data_reg;
reg   [0:0] in_data_V_last_V_0_data_out;
wire    in_data_V_last_V_0_vld_in;
wire    in_data_V_last_V_0_ack_out;
reg   [0:0] in_data_V_last_V_0_data_reg;
reg    in_data_V_last_V_0_in_rdy;
reg    in_data_V_last_V_0_has_vld_data_reg_i;
reg    in_data_V_last_V_0_has_vld_data_reg;
reg   [0:0] in_data_V_id_V_0_data_out;
wire    in_data_V_id_V_0_vld_in;
wire    in_data_V_id_V_0_ack_out;
reg   [0:0] in_data_V_id_V_0_data_reg;
reg    in_data_V_id_V_0_in_rdy;
reg    in_data_V_id_V_0_has_vld_data_reg_i;
reg    in_data_V_id_V_0_has_vld_data_reg;
reg   [0:0] in_data_V_dest_V_0_data_out;
wire    in_data_V_dest_V_0_vld_in;
wire    in_data_V_dest_V_0_ack_out;
reg   [0:0] in_data_V_dest_V_0_data_reg;
reg    in_data_V_dest_V_0_areset_d;
reg    in_data_V_dest_V_0_in_rdy;
reg    in_data_V_dest_V_0_has_vld_data_reg_i;
reg    in_data_V_dest_V_0_has_vld_data_reg;
wire    out_data_V_data_V_1_vld_in;
wire    out_data_V_data_V_1_ack_out;
reg   [23:0] out_data_V_data_V_1_data_reg;
reg    out_data_V_data_V_1_sRdy;
reg    out_data_V_data_V_1_mVld;
reg    out_data_V_data_V_1_areset_d;
wire    out_data_V_keep_V_1_vld_in;
wire    out_data_V_keep_V_1_ack_out;
reg   [2:0] out_data_V_keep_V_1_data_reg;
reg    out_data_V_keep_V_1_sRdy;
reg    out_data_V_keep_V_1_mVld;
reg    out_data_V_keep_V_1_areset_d;
wire    out_data_V_strb_V_1_vld_in;
wire    out_data_V_strb_V_1_ack_out;
reg   [2:0] out_data_V_strb_V_1_data_reg;
reg    out_data_V_strb_V_1_sRdy;
reg    out_data_V_strb_V_1_mVld;
reg    out_data_V_strb_V_1_areset_d;
wire    out_data_V_user_V_1_vld_in;
wire    out_data_V_user_V_1_ack_out;
reg   [0:0] out_data_V_user_V_1_data_reg;
reg    out_data_V_user_V_1_sRdy;
reg    out_data_V_user_V_1_mVld;
reg    out_data_V_user_V_1_areset_d;
wire    out_data_V_last_V_1_vld_in;
wire    out_data_V_last_V_1_ack_out;
reg   [0:0] out_data_V_last_V_1_data_reg;
reg    out_data_V_last_V_1_sRdy;
reg    out_data_V_last_V_1_mVld;
reg    out_data_V_last_V_1_areset_d;
wire    out_data_V_id_V_1_vld_in;
wire    out_data_V_id_V_1_ack_out;
reg   [0:0] out_data_V_id_V_1_data_reg;
reg    out_data_V_id_V_1_sRdy;
reg    out_data_V_id_V_1_mVld;
reg    out_data_V_id_V_1_areset_d;
wire    out_data_V_dest_V_1_vld_in;
wire    out_data_V_dest_V_1_ack_out;
reg   [0:0] out_data_V_dest_V_1_data_reg;
reg    out_data_V_dest_V_1_sRdy;
reg    out_data_V_dest_V_1_mVld;
reg    out_data_V_dest_V_1_areset_d;
reg    x_ap_vld;
reg    y_ap_vld;
reg    angle_ap_vld;
reg   [10:0] col_i_reg_222;
wire   [0:0] exitcond5_i_fu_275_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_458;
wire   [10:0] row_fu_281_p2;
reg   [10:0] row_reg_359;
wire   [0:0] exitcond_i_fu_287_p2;
reg   [0:0] exitcond_i_reg_364;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_4;
reg    ap_sig_469;
reg    ap_reg_ppiten_pp0_it0;
wire   [7:0] img_0_data_stream_0_V_dout;
wire    img_0_data_stream_0_V_empty_n;
reg    img_0_data_stream_0_V_read;
wire   [7:0] img_0_data_stream_1_V_dout;
wire    img_0_data_stream_1_V_empty_n;
reg    img_0_data_stream_1_V_read;
wire   [7:0] img_0_data_stream_2_V_dout;
wire    img_0_data_stream_2_V_empty_n;
reg    img_0_data_stream_2_V_read;
reg    ap_sig_495;
reg    ap_reg_ppiten_pp0_it1;
wire    img_1_data_stream_0_V_full_n;
reg    img_1_data_stream_0_V_write;
reg   [0:0] ap_reg_ppstg_exitcond_i_reg_364_pp0_iter1;
wire    img_1_data_stream_1_V_full_n;
reg    img_1_data_stream_1_V_write;
wire    img_1_data_stream_2_V_full_n;
reg    img_1_data_stream_2_V_write;
reg    ap_sig_521;
reg    ap_reg_ppiten_pp0_it2;
wire   [10:0] col_fu_293_p2;
wire   [0:0] tmp_i_12_fu_299_p2;
reg   [0:0] tmp_i_12_reg_373;
reg   [7:0] tmp_reg_379;
wire   [7:0] tmp_1_fu_305_p3;
reg   [7:0] tmp_1_reg_384;
wire   [7:0] tmp_2_fu_312_p3;
reg   [7:0] tmp_2_reg_389;
wire    grp_moments_AXIvideo2Mat_fu_233_ap_start;
wire    grp_moments_AXIvideo2Mat_fu_233_ap_done;
wire    grp_moments_AXIvideo2Mat_fu_233_ap_idle;
wire    grp_moments_AXIvideo2Mat_fu_233_ap_ready;
wire    grp_moments_AXIvideo2Mat_fu_233_in_data_TVALID;
wire    grp_moments_AXIvideo2Mat_fu_233_in_data_TREADY;
wire   [7:0] grp_moments_AXIvideo2Mat_fu_233_img_data_stream_0_V_din;
wire    grp_moments_AXIvideo2Mat_fu_233_img_data_stream_0_V_write;
wire   [7:0] grp_moments_AXIvideo2Mat_fu_233_img_data_stream_1_V_din;
wire    grp_moments_AXIvideo2Mat_fu_233_img_data_stream_1_V_write;
wire   [7:0] grp_moments_AXIvideo2Mat_fu_233_img_data_stream_2_V_din;
wire    grp_moments_AXIvideo2Mat_fu_233_img_data_stream_2_V_write;
wire    grp_moments_Mat2AXIvideo_fu_254_ap_start;
wire    grp_moments_Mat2AXIvideo_fu_254_ap_done;
wire    grp_moments_Mat2AXIvideo_fu_254_ap_idle;
wire    grp_moments_Mat2AXIvideo_fu_254_ap_ready;
wire    grp_moments_Mat2AXIvideo_fu_254_img_data_stream_0_V_read;
wire    grp_moments_Mat2AXIvideo_fu_254_img_data_stream_1_V_read;
wire    grp_moments_Mat2AXIvideo_fu_254_img_data_stream_2_V_read;
wire   [23:0] grp_moments_Mat2AXIvideo_fu_254_out_data_TDATA;
wire    grp_moments_Mat2AXIvideo_fu_254_out_data_TVALID;
wire   [2:0] grp_moments_Mat2AXIvideo_fu_254_out_data_TKEEP;
wire   [2:0] grp_moments_Mat2AXIvideo_fu_254_out_data_TSTRB;
wire   [0:0] grp_moments_Mat2AXIvideo_fu_254_out_data_TUSER;
wire   [0:0] grp_moments_Mat2AXIvideo_fu_254_out_data_TLAST;
wire   [0:0] grp_moments_Mat2AXIvideo_fu_254_out_data_TID;
wire   [0:0] grp_moments_Mat2AXIvideo_fu_254_out_data_TDEST;
reg   [10:0] row_i_reg_211;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_605;
reg    ap_sig_cseq_ST_st8_fsm_5;
reg    ap_sig_615;
reg    ap_reg_grp_moments_AXIvideo2Mat_fu_233_ap_start;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_626;
wire    img_0_data_stream_0_V_full_n;
reg    img_0_data_stream_0_V_write;
wire    img_0_data_stream_1_V_full_n;
reg    img_0_data_stream_1_V_write;
wire    img_0_data_stream_2_V_full_n;
reg    img_0_data_stream_2_V_write;
reg    ap_reg_grp_moments_Mat2AXIvideo_fu_254_ap_start;
wire   [7:0] img_1_data_stream_0_V_dout;
wire    img_1_data_stream_0_V_empty_n;
reg    img_1_data_stream_0_V_read;
reg    ap_sig_cseq_ST_st9_fsm_6;
reg    ap_sig_653;
wire   [7:0] img_1_data_stream_1_V_dout;
wire    img_1_data_stream_1_V_empty_n;
reg    img_1_data_stream_1_V_read;
wire   [7:0] img_1_data_stream_2_V_dout;
wire    img_1_data_stream_2_V_empty_n;
reg    img_1_data_stream_2_V_read;
reg    ap_sig_cseq_ST_st10_fsm_7;
reg    ap_sig_692;
reg    ap_sig_707;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'b1;
#0 in_data_V_data_V_0_in_rdy = 1'b0;
#0 in_data_V_data_V_0_has_vld_data_reg = 1'b0;
#0 in_data_V_keep_V_0_in_rdy = 1'b0;
#0 in_data_V_keep_V_0_has_vld_data_reg = 1'b0;
#0 in_data_V_strb_V_0_in_rdy = 1'b0;
#0 in_data_V_strb_V_0_has_vld_data_reg = 1'b0;
#0 in_data_V_user_V_0_in_rdy = 1'b0;
#0 in_data_V_user_V_0_has_vld_data_reg = 1'b0;
#0 in_data_V_last_V_0_in_rdy = 1'b0;
#0 in_data_V_last_V_0_has_vld_data_reg = 1'b0;
#0 in_data_V_id_V_0_in_rdy = 1'b0;
#0 in_data_V_id_V_0_has_vld_data_reg = 1'b0;
#0 in_data_V_dest_V_0_in_rdy = 1'b0;
#0 in_data_V_dest_V_0_has_vld_data_reg = 1'b0;
#0 out_data_V_data_V_1_mVld = 1'b0;
#0 out_data_V_keep_V_1_mVld = 1'b0;
#0 out_data_V_strb_V_1_mVld = 1'b0;
#0 out_data_V_user_V_1_mVld = 1'b0;
#0 out_data_V_last_V_1_mVld = 1'b0;
#0 out_data_V_id_V_1_mVld = 1'b0;
#0 out_data_V_dest_V_1_mVld = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
#0 ap_reg_grp_moments_AXIvideo2Mat_fu_233_ap_start = 1'b0;
#0 ap_reg_grp_moments_Mat2AXIvideo_fu_254_ap_start = 1'b0;
end

moments_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
moments_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .x(ap_const_lv32_0),
    .x_ap_vld(x_ap_vld),
    .y(ap_const_lv32_FFF),
    .y_ap_vld(y_ap_vld),
    .angle(ap_const_lv32_4007E680),
    .angle_ap_vld(angle_ap_vld)
);

moments_AXIvideo2Mat grp_moments_AXIvideo2Mat_fu_233(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_moments_AXIvideo2Mat_fu_233_ap_start),
    .ap_done(grp_moments_AXIvideo2Mat_fu_233_ap_done),
    .ap_idle(grp_moments_AXIvideo2Mat_fu_233_ap_idle),
    .ap_ready(grp_moments_AXIvideo2Mat_fu_233_ap_ready),
    .in_data_TDATA(in_data_V_data_V_0_data_out),
    .in_data_TVALID(grp_moments_AXIvideo2Mat_fu_233_in_data_TVALID),
    .in_data_TREADY(grp_moments_AXIvideo2Mat_fu_233_in_data_TREADY),
    .in_data_TKEEP(in_data_V_keep_V_0_data_out),
    .in_data_TSTRB(in_data_V_strb_V_0_data_out),
    .in_data_TUSER(in_data_V_user_V_0_data_out),
    .in_data_TLAST(in_data_V_last_V_0_data_out),
    .in_data_TID(in_data_V_id_V_0_data_out),
    .in_data_TDEST(in_data_V_dest_V_0_data_out),
    .img_data_stream_0_V_din(grp_moments_AXIvideo2Mat_fu_233_img_data_stream_0_V_din),
    .img_data_stream_0_V_full_n(img_0_data_stream_0_V_full_n),
    .img_data_stream_0_V_write(grp_moments_AXIvideo2Mat_fu_233_img_data_stream_0_V_write),
    .img_data_stream_1_V_din(grp_moments_AXIvideo2Mat_fu_233_img_data_stream_1_V_din),
    .img_data_stream_1_V_full_n(img_0_data_stream_1_V_full_n),
    .img_data_stream_1_V_write(grp_moments_AXIvideo2Mat_fu_233_img_data_stream_1_V_write),
    .img_data_stream_2_V_din(grp_moments_AXIvideo2Mat_fu_233_img_data_stream_2_V_din),
    .img_data_stream_2_V_full_n(img_0_data_stream_2_V_full_n),
    .img_data_stream_2_V_write(grp_moments_AXIvideo2Mat_fu_233_img_data_stream_2_V_write)
);

moments_Mat2AXIvideo grp_moments_Mat2AXIvideo_fu_254(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_moments_Mat2AXIvideo_fu_254_ap_start),
    .ap_done(grp_moments_Mat2AXIvideo_fu_254_ap_done),
    .ap_idle(grp_moments_Mat2AXIvideo_fu_254_ap_idle),
    .ap_ready(grp_moments_Mat2AXIvideo_fu_254_ap_ready),
    .img_data_stream_0_V_dout(img_1_data_stream_0_V_dout),
    .img_data_stream_0_V_empty_n(img_1_data_stream_0_V_empty_n),
    .img_data_stream_0_V_read(grp_moments_Mat2AXIvideo_fu_254_img_data_stream_0_V_read),
    .img_data_stream_1_V_dout(img_1_data_stream_1_V_dout),
    .img_data_stream_1_V_empty_n(img_1_data_stream_1_V_empty_n),
    .img_data_stream_1_V_read(grp_moments_Mat2AXIvideo_fu_254_img_data_stream_1_V_read),
    .img_data_stream_2_V_dout(img_1_data_stream_2_V_dout),
    .img_data_stream_2_V_empty_n(img_1_data_stream_2_V_empty_n),
    .img_data_stream_2_V_read(grp_moments_Mat2AXIvideo_fu_254_img_data_stream_2_V_read),
    .out_data_TDATA(grp_moments_Mat2AXIvideo_fu_254_out_data_TDATA),
    .out_data_TVALID(grp_moments_Mat2AXIvideo_fu_254_out_data_TVALID),
    .out_data_TREADY(out_data_V_dest_V_1_sRdy),
    .out_data_TKEEP(grp_moments_Mat2AXIvideo_fu_254_out_data_TKEEP),
    .out_data_TSTRB(grp_moments_Mat2AXIvideo_fu_254_out_data_TSTRB),
    .out_data_TUSER(grp_moments_Mat2AXIvideo_fu_254_out_data_TUSER),
    .out_data_TLAST(grp_moments_Mat2AXIvideo_fu_254_out_data_TLAST),
    .out_data_TID(grp_moments_Mat2AXIvideo_fu_254_out_data_TID),
    .out_data_TDEST(grp_moments_Mat2AXIvideo_fu_254_out_data_TDEST)
);

FIFO_moments_img_0_data_stream_0_V img_0_data_stream_0_V_img_0_data_stream_0_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_moments_AXIvideo2Mat_fu_233_img_data_stream_0_V_din),
    .if_full_n(img_0_data_stream_0_V_full_n),
    .if_write(img_0_data_stream_0_V_write),
    .if_dout(img_0_data_stream_0_V_dout),
    .if_empty_n(img_0_data_stream_0_V_empty_n),
    .if_read(img_0_data_stream_0_V_read)
);

FIFO_moments_img_0_data_stream_1_V img_0_data_stream_1_V_img_0_data_stream_1_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_moments_AXIvideo2Mat_fu_233_img_data_stream_1_V_din),
    .if_full_n(img_0_data_stream_1_V_full_n),
    .if_write(img_0_data_stream_1_V_write),
    .if_dout(img_0_data_stream_1_V_dout),
    .if_empty_n(img_0_data_stream_1_V_empty_n),
    .if_read(img_0_data_stream_1_V_read)
);

FIFO_moments_img_0_data_stream_2_V img_0_data_stream_2_V_img_0_data_stream_2_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_moments_AXIvideo2Mat_fu_233_img_data_stream_2_V_din),
    .if_full_n(img_0_data_stream_2_V_full_n),
    .if_write(img_0_data_stream_2_V_write),
    .if_dout(img_0_data_stream_2_V_dout),
    .if_empty_n(img_0_data_stream_2_V_empty_n),
    .if_read(img_0_data_stream_2_V_read)
);

FIFO_moments_img_1_data_stream_0_V img_1_data_stream_0_V_img_1_data_stream_0_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(tmp_1_reg_384),
    .if_full_n(img_1_data_stream_0_V_full_n),
    .if_write(img_1_data_stream_0_V_write),
    .if_dout(img_1_data_stream_0_V_dout),
    .if_empty_n(img_1_data_stream_0_V_empty_n),
    .if_read(img_1_data_stream_0_V_read)
);

FIFO_moments_img_1_data_stream_1_V img_1_data_stream_1_V_img_1_data_stream_1_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(tmp_2_reg_389),
    .if_full_n(img_1_data_stream_1_V_full_n),
    .if_write(img_1_data_stream_1_V_write),
    .if_dout(img_1_data_stream_1_V_dout),
    .if_empty_n(img_1_data_stream_1_V_empty_n),
    .if_read(img_1_data_stream_1_V_read)
);

FIFO_moments_img_1_data_stream_2_V img_1_data_stream_2_V_img_1_data_stream_2_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(tmp_reg_379),
    .if_full_n(img_1_data_stream_2_V_full_n),
    .if_write(img_1_data_stream_2_V_write),
    .if_dout(img_1_data_stream_2_V_dout),
    .if_empty_n(img_1_data_stream_2_V_empty_n),
    .if_read(img_1_data_stream_2_V_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_moments_AXIvideo2Mat_fu_233_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            ap_reg_grp_moments_AXIvideo2Mat_fu_233_ap_start <= 1'b1;
        end else if ((1'b1 == grp_moments_AXIvideo2Mat_fu_233_ap_ready)) begin
            ap_reg_grp_moments_AXIvideo2Mat_fu_233_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_moments_Mat2AXIvideo_fu_254_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond5_i_fu_275_p2 == 1'b0))) begin
            ap_reg_grp_moments_Mat2AXIvideo_fu_254_ap_start <= 1'b1;
        end else if ((1'b1 == grp_moments_Mat2AXIvideo_fu_254_ap_ready)) begin
            ap_reg_grp_moments_Mat2AXIvideo_fu_254_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond_i_fu_287_p2 == 1'b0))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond5_i_fu_275_p2 == 1'b0))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2))) & (exitcond_i_fu_287_p2 == 1'b0))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond5_i_fu_275_p2 == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond_i_fu_287_p2 == 1'b0)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        if (~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2)))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond5_i_fu_275_p2 == 1'b0))) begin
            ap_reg_ppiten_pp0_it2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_data_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        in_data_V_data_V_0_has_vld_data_reg <= in_data_V_data_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_data_V_0_in_rdy <= 1'b0;
    end else begin
        in_data_V_data_V_0_in_rdy <= (in_data_V_data_V_0_ack_out | ~in_data_V_data_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_dest_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        in_data_V_dest_V_0_has_vld_data_reg <= in_data_V_dest_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_dest_V_0_in_rdy <= 1'b0;
    end else begin
        in_data_V_dest_V_0_in_rdy <= (in_data_V_dest_V_0_ack_out | ~in_data_V_dest_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_id_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        in_data_V_id_V_0_has_vld_data_reg <= in_data_V_id_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_id_V_0_in_rdy <= 1'b0;
    end else begin
        in_data_V_id_V_0_in_rdy <= (in_data_V_id_V_0_ack_out | ~in_data_V_id_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_keep_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        in_data_V_keep_V_0_has_vld_data_reg <= in_data_V_keep_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_keep_V_0_in_rdy <= 1'b0;
    end else begin
        in_data_V_keep_V_0_in_rdy <= (in_data_V_keep_V_0_ack_out | ~in_data_V_keep_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_last_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        in_data_V_last_V_0_has_vld_data_reg <= in_data_V_last_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_last_V_0_in_rdy <= 1'b0;
    end else begin
        in_data_V_last_V_0_in_rdy <= (in_data_V_last_V_0_ack_out | ~in_data_V_last_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_strb_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        in_data_V_strb_V_0_has_vld_data_reg <= in_data_V_strb_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_strb_V_0_in_rdy <= 1'b0;
    end else begin
        in_data_V_strb_V_0_in_rdy <= (in_data_V_strb_V_0_ack_out | ~in_data_V_strb_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_user_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        in_data_V_user_V_0_has_vld_data_reg <= in_data_V_user_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_user_V_0_in_rdy <= 1'b0;
    end else begin
        in_data_V_user_V_0_in_rdy <= (in_data_V_user_V_0_ack_out | ~in_data_V_user_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_data_V_data_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == out_data_V_data_V_1_vld_in)) begin
            out_data_V_data_V_1_mVld <= 1'b1;
        end else if ((1'b1 == out_data_V_data_V_1_ack_out)) begin
            out_data_V_data_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_data_V_dest_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == out_data_V_dest_V_1_vld_in)) begin
            out_data_V_dest_V_1_mVld <= 1'b1;
        end else if ((1'b1 == out_data_V_dest_V_1_ack_out)) begin
            out_data_V_dest_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_data_V_id_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == out_data_V_id_V_1_vld_in)) begin
            out_data_V_id_V_1_mVld <= 1'b1;
        end else if ((1'b1 == out_data_V_id_V_1_ack_out)) begin
            out_data_V_id_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_data_V_keep_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == out_data_V_keep_V_1_vld_in)) begin
            out_data_V_keep_V_1_mVld <= 1'b1;
        end else if ((1'b1 == out_data_V_keep_V_1_ack_out)) begin
            out_data_V_keep_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_data_V_last_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == out_data_V_last_V_1_vld_in)) begin
            out_data_V_last_V_1_mVld <= 1'b1;
        end else if ((1'b1 == out_data_V_last_V_1_ack_out)) begin
            out_data_V_last_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_data_V_strb_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == out_data_V_strb_V_1_vld_in)) begin
            out_data_V_strb_V_1_mVld <= 1'b1;
        end else if ((1'b1 == out_data_V_strb_V_1_ack_out)) begin
            out_data_V_strb_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_data_V_user_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == out_data_V_user_V_1_vld_in)) begin
            out_data_V_user_V_1_mVld <= 1'b1;
        end else if ((1'b1 == out_data_V_user_V_1_ack_out)) begin
            out_data_V_user_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2))) & (exitcond_i_fu_287_p2 == 1'b0))) begin
        col_i_reg_222 <= col_fu_293_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond5_i_fu_275_p2 == 1'b0))) begin
        col_i_reg_222 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_5)) begin
        row_i_reg_211 <= row_reg_359;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == grp_moments_AXIvideo2Mat_fu_233_ap_done))) begin
        row_i_reg_211 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2))))) begin
        ap_reg_ppstg_exitcond_i_reg_364_pp0_iter1 <= exitcond_i_reg_364;
        exitcond_i_reg_364 <= exitcond_i_fu_287_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == in_data_V_data_V_0_vld_in) & (1'b1 == in_data_V_data_V_0_in_rdy))) begin
        in_data_V_data_V_0_data_reg <= in_data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        in_data_V_dest_V_0_areset_d <= ap_rst_n_inv;
        out_data_V_data_V_1_areset_d <= ap_rst_n_inv;
        out_data_V_dest_V_1_areset_d <= ap_rst_n_inv;
        out_data_V_id_V_1_areset_d <= ap_rst_n_inv;
        out_data_V_keep_V_1_areset_d <= ap_rst_n_inv;
        out_data_V_last_V_1_areset_d <= ap_rst_n_inv;
        out_data_V_strb_V_1_areset_d <= ap_rst_n_inv;
        out_data_V_user_V_1_areset_d <= ap_rst_n_inv;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == in_data_V_dest_V_0_vld_in) & (1'b1 == in_data_V_dest_V_0_in_rdy))) begin
        in_data_V_dest_V_0_data_reg <= in_data_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == in_data_V_id_V_0_vld_in) & (1'b1 == in_data_V_id_V_0_in_rdy))) begin
        in_data_V_id_V_0_data_reg <= in_data_TID;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == in_data_V_keep_V_0_vld_in) & (1'b1 == in_data_V_keep_V_0_in_rdy))) begin
        in_data_V_keep_V_0_data_reg <= in_data_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == in_data_V_last_V_0_vld_in) & (1'b1 == in_data_V_last_V_0_in_rdy))) begin
        in_data_V_last_V_0_data_reg <= in_data_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == in_data_V_strb_V_0_vld_in) & (1'b1 == in_data_V_strb_V_0_in_rdy))) begin
        in_data_V_strb_V_0_data_reg <= in_data_TSTRB;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == in_data_V_user_V_0_vld_in) & (1'b1 == in_data_V_user_V_0_in_rdy))) begin
        in_data_V_user_V_0_data_reg <= in_data_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == out_data_V_data_V_1_vld_in) & (1'b1 == out_data_V_data_V_1_sRdy))) begin
        out_data_V_data_V_1_data_reg <= grp_moments_Mat2AXIvideo_fu_254_out_data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == out_data_V_dest_V_1_vld_in) & (1'b1 == out_data_V_dest_V_1_sRdy))) begin
        out_data_V_dest_V_1_data_reg <= grp_moments_Mat2AXIvideo_fu_254_out_data_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == out_data_V_id_V_1_vld_in) & (1'b1 == out_data_V_id_V_1_sRdy))) begin
        out_data_V_id_V_1_data_reg <= grp_moments_Mat2AXIvideo_fu_254_out_data_TID;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == out_data_V_keep_V_1_vld_in) & (1'b1 == out_data_V_keep_V_1_sRdy))) begin
        out_data_V_keep_V_1_data_reg <= grp_moments_Mat2AXIvideo_fu_254_out_data_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == out_data_V_last_V_1_vld_in) & (1'b1 == out_data_V_last_V_1_sRdy))) begin
        out_data_V_last_V_1_data_reg <= grp_moments_Mat2AXIvideo_fu_254_out_data_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == out_data_V_strb_V_1_vld_in) & (1'b1 == out_data_V_strb_V_1_sRdy))) begin
        out_data_V_strb_V_1_data_reg <= grp_moments_Mat2AXIvideo_fu_254_out_data_TSTRB;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == out_data_V_user_V_1_vld_in) & (1'b1 == out_data_V_user_V_1_sRdy))) begin
        out_data_V_user_V_1_data_reg <= grp_moments_Mat2AXIvideo_fu_254_out_data_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        row_reg_359 <= row_fu_281_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (exitcond_i_reg_364 == 1'b0) & ~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2))))) begin
        tmp_1_reg_384 <= tmp_1_fu_305_p3;
        tmp_2_reg_389 <= tmp_2_fu_312_p3;
        tmp_reg_379 <= img_0_data_stream_2_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2))) & (exitcond_i_fu_287_p2 == 1'b0))) begin
        tmp_i_12_reg_373 <= tmp_i_12_fu_299_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_7) & ~ap_sig_707)) begin
        angle_ap_vld = 1'b1;
    end else begin
        angle_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_7) & ~ap_sig_707)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_7) & ~ap_sig_707)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_469) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_692) begin
        ap_sig_cseq_ST_st10_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_25) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_626) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_605) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_458) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_615) begin
        ap_sig_cseq_ST_st8_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_653) begin
        ap_sig_cseq_ST_st9_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (exitcond_i_reg_364 == 1'b0) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2))))) begin
        img_0_data_stream_0_V_read = 1'b1;
    end else begin
        img_0_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        img_0_data_stream_0_V_write = grp_moments_AXIvideo2Mat_fu_233_img_data_stream_0_V_write;
    end else begin
        img_0_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (exitcond_i_reg_364 == 1'b0) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2))))) begin
        img_0_data_stream_1_V_read = 1'b1;
    end else begin
        img_0_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        img_0_data_stream_1_V_write = grp_moments_AXIvideo2Mat_fu_233_img_data_stream_1_V_write;
    end else begin
        img_0_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (exitcond_i_reg_364 == 1'b0) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2))))) begin
        img_0_data_stream_2_V_read = 1'b1;
    end else begin
        img_0_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        img_0_data_stream_2_V_write = grp_moments_AXIvideo2Mat_fu_233_img_data_stream_2_V_write;
    end else begin
        img_0_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_6)) begin
        img_1_data_stream_0_V_read = grp_moments_Mat2AXIvideo_fu_254_img_data_stream_0_V_read;
    end else begin
        img_1_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_reg_ppstg_exitcond_i_reg_364_pp0_iter1) & (1'b1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2))))) begin
        img_1_data_stream_0_V_write = 1'b1;
    end else begin
        img_1_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_6)) begin
        img_1_data_stream_1_V_read = grp_moments_Mat2AXIvideo_fu_254_img_data_stream_1_V_read;
    end else begin
        img_1_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_reg_ppstg_exitcond_i_reg_364_pp0_iter1) & (1'b1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2))))) begin
        img_1_data_stream_1_V_write = 1'b1;
    end else begin
        img_1_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_6)) begin
        img_1_data_stream_2_V_read = grp_moments_Mat2AXIvideo_fu_254_img_data_stream_2_V_read;
    end else begin
        img_1_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_reg_ppstg_exitcond_i_reg_364_pp0_iter1) & (1'b1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2))))) begin
        img_1_data_stream_2_V_write = 1'b1;
    end else begin
        img_1_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == in_data_V_data_V_0_has_vld_data_reg)) begin
        in_data_V_data_V_0_data_out = in_data_V_data_V_0_data_reg;
    end else begin
        in_data_V_data_V_0_data_out = in_data_TDATA;
    end
end

always @ (*) begin
    if (((1'b1 == in_data_V_data_V_0_vld_in) & (1'b0 == in_data_V_data_V_0_ack_out) & (1'b1 == in_data_V_data_V_0_in_rdy))) begin
        in_data_V_data_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == in_data_V_data_V_0_ack_out) & (1'b1 == in_data_V_data_V_0_has_vld_data_reg) & ((1'b0 == in_data_V_data_V_0_vld_in) | (1'b0 == in_data_V_data_V_0_in_rdy)))) begin
        in_data_V_data_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        in_data_V_data_V_0_has_vld_data_reg_i = in_data_V_data_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((1'b1 == in_data_V_dest_V_0_has_vld_data_reg)) begin
        in_data_V_dest_V_0_data_out = in_data_V_dest_V_0_data_reg;
    end else begin
        in_data_V_dest_V_0_data_out = in_data_TDEST;
    end
end

always @ (*) begin
    if (((1'b1 == in_data_V_dest_V_0_vld_in) & (1'b0 == in_data_V_dest_V_0_ack_out) & (1'b1 == in_data_V_dest_V_0_in_rdy))) begin
        in_data_V_dest_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == in_data_V_dest_V_0_ack_out) & (1'b1 == in_data_V_dest_V_0_has_vld_data_reg) & ((1'b0 == in_data_V_dest_V_0_vld_in) | (1'b0 == in_data_V_dest_V_0_in_rdy)))) begin
        in_data_V_dest_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        in_data_V_dest_V_0_has_vld_data_reg_i = in_data_V_dest_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((1'b1 == in_data_V_id_V_0_has_vld_data_reg)) begin
        in_data_V_id_V_0_data_out = in_data_V_id_V_0_data_reg;
    end else begin
        in_data_V_id_V_0_data_out = in_data_TID;
    end
end

always @ (*) begin
    if (((1'b1 == in_data_V_id_V_0_vld_in) & (1'b0 == in_data_V_id_V_0_ack_out) & (1'b1 == in_data_V_id_V_0_in_rdy))) begin
        in_data_V_id_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == in_data_V_id_V_0_ack_out) & (1'b1 == in_data_V_id_V_0_has_vld_data_reg) & ((1'b0 == in_data_V_id_V_0_vld_in) | (1'b0 == in_data_V_id_V_0_in_rdy)))) begin
        in_data_V_id_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        in_data_V_id_V_0_has_vld_data_reg_i = in_data_V_id_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((1'b1 == in_data_V_keep_V_0_has_vld_data_reg)) begin
        in_data_V_keep_V_0_data_out = in_data_V_keep_V_0_data_reg;
    end else begin
        in_data_V_keep_V_0_data_out = in_data_TKEEP;
    end
end

always @ (*) begin
    if (((1'b1 == in_data_V_keep_V_0_vld_in) & (1'b0 == in_data_V_keep_V_0_ack_out) & (1'b1 == in_data_V_keep_V_0_in_rdy))) begin
        in_data_V_keep_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == in_data_V_keep_V_0_ack_out) & (1'b1 == in_data_V_keep_V_0_has_vld_data_reg) & ((1'b0 == in_data_V_keep_V_0_vld_in) | (1'b0 == in_data_V_keep_V_0_in_rdy)))) begin
        in_data_V_keep_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        in_data_V_keep_V_0_has_vld_data_reg_i = in_data_V_keep_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((1'b1 == in_data_V_last_V_0_has_vld_data_reg)) begin
        in_data_V_last_V_0_data_out = in_data_V_last_V_0_data_reg;
    end else begin
        in_data_V_last_V_0_data_out = in_data_TLAST;
    end
end

always @ (*) begin
    if (((1'b1 == in_data_V_last_V_0_vld_in) & (1'b0 == in_data_V_last_V_0_ack_out) & (1'b1 == in_data_V_last_V_0_in_rdy))) begin
        in_data_V_last_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == in_data_V_last_V_0_ack_out) & (1'b1 == in_data_V_last_V_0_has_vld_data_reg) & ((1'b0 == in_data_V_last_V_0_vld_in) | (1'b0 == in_data_V_last_V_0_in_rdy)))) begin
        in_data_V_last_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        in_data_V_last_V_0_has_vld_data_reg_i = in_data_V_last_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((1'b1 == in_data_V_strb_V_0_has_vld_data_reg)) begin
        in_data_V_strb_V_0_data_out = in_data_V_strb_V_0_data_reg;
    end else begin
        in_data_V_strb_V_0_data_out = in_data_TSTRB;
    end
end

always @ (*) begin
    if (((1'b1 == in_data_V_strb_V_0_vld_in) & (1'b0 == in_data_V_strb_V_0_ack_out) & (1'b1 == in_data_V_strb_V_0_in_rdy))) begin
        in_data_V_strb_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == in_data_V_strb_V_0_ack_out) & (1'b1 == in_data_V_strb_V_0_has_vld_data_reg) & ((1'b0 == in_data_V_strb_V_0_vld_in) | (1'b0 == in_data_V_strb_V_0_in_rdy)))) begin
        in_data_V_strb_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        in_data_V_strb_V_0_has_vld_data_reg_i = in_data_V_strb_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((1'b1 == in_data_V_user_V_0_has_vld_data_reg)) begin
        in_data_V_user_V_0_data_out = in_data_V_user_V_0_data_reg;
    end else begin
        in_data_V_user_V_0_data_out = in_data_TUSER;
    end
end

always @ (*) begin
    if (((1'b1 == in_data_V_user_V_0_vld_in) & (1'b0 == in_data_V_user_V_0_ack_out) & (1'b1 == in_data_V_user_V_0_in_rdy))) begin
        in_data_V_user_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == in_data_V_user_V_0_ack_out) & (1'b1 == in_data_V_user_V_0_has_vld_data_reg) & ((1'b0 == in_data_V_user_V_0_vld_in) | (1'b0 == in_data_V_user_V_0_in_rdy)))) begin
        in_data_V_user_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        in_data_V_user_V_0_has_vld_data_reg_i = in_data_V_user_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_7) & ~ap_sig_707)) begin
        x_ap_vld = 1'b1;
    end else begin
        x_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_7) & ~ap_sig_707)) begin
        y_ap_vld = 1'b1;
    end else begin
        y_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            if (~(1'b0 == grp_moments_AXIvideo2Mat_fu_233_ap_done)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if ((exitcond5_i_fu_275_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_6;
            end
        end
        ap_ST_pp0_stg0_fsm_4 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2))) & ~(1'b1 == ap_reg_ppiten_pp0_it1)) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond_i_fu_287_p2 == 1'b0) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            end else if ((((1'b1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2))) & ~(1'b1 == ap_reg_ppiten_pp0_it1)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_495 & (1'b1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_521 & (1'b1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond_i_fu_287_p2 == 1'b0) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st8_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            end
        end
        ap_ST_st8_fsm_5 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st9_fsm_6 : begin
            if (~(1'b0 == grp_moments_Mat2AXIvideo_fu_254_ap_done)) begin
                ap_NS_fsm = ap_ST_st10_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_6;
            end
        end
        ap_ST_st10_fsm_7 : begin
            if (~ap_sig_707) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_25 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_458 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_469 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_495 = (((img_0_data_stream_0_V_empty_n == 1'b0) & (exitcond_i_reg_364 == 1'b0)) | ((exitcond_i_reg_364 == 1'b0) & (img_0_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_i_reg_364 == 1'b0) & (img_0_data_stream_2_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_sig_521 = (((img_1_data_stream_0_V_full_n == 1'b0) & (1'b0 == ap_reg_ppstg_exitcond_i_reg_364_pp0_iter1)) | ((1'b0 == ap_reg_ppstg_exitcond_i_reg_364_pp0_iter1) & (img_1_data_stream_1_V_full_n == 1'b0)) | ((1'b0 == ap_reg_ppstg_exitcond_i_reg_364_pp0_iter1) & (img_1_data_stream_2_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_sig_605 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_615 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_626 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_653 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_692 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_707 = ((out_data_V_data_V_1_sRdy == 1'b0) | (out_data_V_keep_V_1_sRdy == 1'b0) | (out_data_V_strb_V_1_sRdy == 1'b0) | (out_data_V_user_V_1_sRdy == 1'b0) | (out_data_V_last_V_1_sRdy == 1'b0) | (out_data_V_id_V_1_sRdy == 1'b0) | (out_data_V_dest_V_1_sRdy == 1'b0));
end

assign col_fu_293_p2 = (col_i_reg_222 + ap_const_lv11_1);

assign exitcond5_i_fu_275_p2 = ((row_i_reg_211 == ap_const_lv11_438) ? 1'b1 : 1'b0);

assign exitcond_i_fu_287_p2 = ((col_i_reg_222 == ap_const_lv11_780) ? 1'b1 : 1'b0);

assign grp_moments_AXIvideo2Mat_fu_233_ap_start = ap_reg_grp_moments_AXIvideo2Mat_fu_233_ap_start;

assign grp_moments_AXIvideo2Mat_fu_233_in_data_TVALID = ((in_data_TVALID | in_data_V_dest_V_0_has_vld_data_reg) & ~in_data_V_dest_V_0_areset_d);

assign grp_moments_Mat2AXIvideo_fu_254_ap_start = ap_reg_grp_moments_Mat2AXIvideo_fu_254_ap_start;

assign in_data_TREADY = in_data_V_dest_V_0_in_rdy;

assign in_data_V_data_V_0_ack_out = grp_moments_AXIvideo2Mat_fu_233_in_data_TREADY;

assign in_data_V_data_V_0_vld_in = in_data_TVALID;

assign in_data_V_dest_V_0_ack_out = grp_moments_AXIvideo2Mat_fu_233_in_data_TREADY;

assign in_data_V_dest_V_0_vld_in = in_data_TVALID;

assign in_data_V_id_V_0_ack_out = grp_moments_AXIvideo2Mat_fu_233_in_data_TREADY;

assign in_data_V_id_V_0_vld_in = in_data_TVALID;

assign in_data_V_keep_V_0_ack_out = grp_moments_AXIvideo2Mat_fu_233_in_data_TREADY;

assign in_data_V_keep_V_0_vld_in = in_data_TVALID;

assign in_data_V_last_V_0_ack_out = grp_moments_AXIvideo2Mat_fu_233_in_data_TREADY;

assign in_data_V_last_V_0_vld_in = in_data_TVALID;

assign in_data_V_strb_V_0_ack_out = grp_moments_AXIvideo2Mat_fu_233_in_data_TREADY;

assign in_data_V_strb_V_0_vld_in = in_data_TVALID;

assign in_data_V_user_V_0_ack_out = grp_moments_AXIvideo2Mat_fu_233_in_data_TREADY;

assign in_data_V_user_V_0_vld_in = in_data_TVALID;

assign out_data_TDATA = out_data_V_data_V_1_data_reg;

assign out_data_TDEST = out_data_V_dest_V_1_data_reg;

assign out_data_TID = out_data_V_id_V_1_data_reg;

assign out_data_TKEEP = out_data_V_keep_V_1_data_reg;

assign out_data_TLAST = out_data_V_last_V_1_data_reg;

assign out_data_TSTRB = out_data_V_strb_V_1_data_reg;

assign out_data_TUSER = out_data_V_user_V_1_data_reg;

assign out_data_TVALID = out_data_V_dest_V_1_mVld;

assign out_data_V_data_V_1_ack_out = out_data_TREADY;

always @ (*) begin
    out_data_V_data_V_1_sRdy = (~out_data_V_data_V_1_areset_d & (out_data_TREADY | ~out_data_V_data_V_1_mVld));
end

assign out_data_V_data_V_1_vld_in = grp_moments_Mat2AXIvideo_fu_254_out_data_TVALID;

assign out_data_V_dest_V_1_ack_out = out_data_TREADY;

always @ (*) begin
    out_data_V_dest_V_1_sRdy = (~out_data_V_dest_V_1_areset_d & (out_data_TREADY | ~out_data_V_dest_V_1_mVld));
end

assign out_data_V_dest_V_1_vld_in = grp_moments_Mat2AXIvideo_fu_254_out_data_TVALID;

assign out_data_V_id_V_1_ack_out = out_data_TREADY;

always @ (*) begin
    out_data_V_id_V_1_sRdy = (~out_data_V_id_V_1_areset_d & (out_data_TREADY | ~out_data_V_id_V_1_mVld));
end

assign out_data_V_id_V_1_vld_in = grp_moments_Mat2AXIvideo_fu_254_out_data_TVALID;

assign out_data_V_keep_V_1_ack_out = out_data_TREADY;

always @ (*) begin
    out_data_V_keep_V_1_sRdy = (~out_data_V_keep_V_1_areset_d & (out_data_TREADY | ~out_data_V_keep_V_1_mVld));
end

assign out_data_V_keep_V_1_vld_in = grp_moments_Mat2AXIvideo_fu_254_out_data_TVALID;

assign out_data_V_last_V_1_ack_out = out_data_TREADY;

always @ (*) begin
    out_data_V_last_V_1_sRdy = (~out_data_V_last_V_1_areset_d & (out_data_TREADY | ~out_data_V_last_V_1_mVld));
end

assign out_data_V_last_V_1_vld_in = grp_moments_Mat2AXIvideo_fu_254_out_data_TVALID;

assign out_data_V_strb_V_1_ack_out = out_data_TREADY;

always @ (*) begin
    out_data_V_strb_V_1_sRdy = (~out_data_V_strb_V_1_areset_d & (out_data_TREADY | ~out_data_V_strb_V_1_mVld));
end

assign out_data_V_strb_V_1_vld_in = grp_moments_Mat2AXIvideo_fu_254_out_data_TVALID;

assign out_data_V_user_V_1_ack_out = out_data_TREADY;

always @ (*) begin
    out_data_V_user_V_1_sRdy = (~out_data_V_user_V_1_areset_d & (out_data_TREADY | ~out_data_V_user_V_1_mVld));
end

assign out_data_V_user_V_1_vld_in = grp_moments_Mat2AXIvideo_fu_254_out_data_TVALID;

assign row_fu_281_p2 = (row_i_reg_211 + ap_const_lv11_1);

assign tmp_1_fu_305_p3 = ((tmp_i_12_reg_373[0:0] === 1'b1) ? img_0_data_stream_0_V_dout : ap_const_lv8_0);

assign tmp_2_fu_312_p3 = ((tmp_i_12_reg_373[0:0] === 1'b1) ? img_0_data_stream_1_V_dout : ap_const_lv8_0);

assign tmp_i_12_fu_299_p2 = ((col_i_reg_222 < ap_const_lv11_1F5) ? 1'b1 : 1'b0);

endmodule //moments
