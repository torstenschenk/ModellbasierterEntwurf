// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="split_ip,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=10.997000,HLS_SYN_LAT=2089107,HLS_SYN_TPT=2087184,HLS_SYN_MEM=9,HLS_SYN_DSP=21,HLS_SYN_FF=1260,HLS_SYN_LUT=1398}" *)

module split_ip (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        in_data_TDATA,
        in_data_TKEEP,
        in_data_TSTRB,
        in_data_TUSER,
        in_data_TLAST,
        in_data_TID,
        in_data_TDEST,
        out_data_TDATA,
        out_data_TKEEP,
        out_data_TSTRB,
        out_data_TUSER,
        out_data_TLAST,
        out_data_TID,
        out_data_TDEST,
        in_data_TVALID,
        in_data_TREADY,
        out_data_TVALID,
        out_data_TREADY
);

parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    ap_const_lv24_0 = 24'b000000000000000000000000;
parameter    ap_const_lv3_0 = 3'b000;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
input  [23:0] in_data_TDATA;
input  [2:0] in_data_TKEEP;
input  [2:0] in_data_TSTRB;
input  [0:0] in_data_TUSER;
input  [0:0] in_data_TLAST;
input  [0:0] in_data_TID;
input  [0:0] in_data_TDEST;
output  [23:0] out_data_TDATA;
output  [2:0] out_data_TKEEP;
output  [2:0] out_data_TSTRB;
output  [0:0] out_data_TUSER;
output  [0:0] out_data_TLAST;
output  [0:0] out_data_TID;
output  [0:0] out_data_TDEST;
input   in_data_TVALID;
output   in_data_TREADY;
output   out_data_TVALID;
input   out_data_TREADY;

reg    ap_rst_n_inv;
wire   [7:0] direction;
wire    split_ip_AXIvideo2Mat103_U0_ap_start;
wire    split_ip_AXIvideo2Mat103_U0_ap_done;
wire    split_ip_AXIvideo2Mat103_U0_ap_continue;
wire    split_ip_AXIvideo2Mat103_U0_ap_idle;
wire    split_ip_AXIvideo2Mat103_U0_ap_ready;
wire    split_ip_AXIvideo2Mat103_U0_in_data_TREADY;
wire   [7:0] split_ip_AXIvideo2Mat103_U0_img_data_stream_0_V_din;
wire    split_ip_AXIvideo2Mat103_U0_img_data_stream_0_V_write;
wire   [7:0] split_ip_AXIvideo2Mat103_U0_img_data_stream_1_V_din;
wire    split_ip_AXIvideo2Mat103_U0_img_data_stream_1_V_write;
wire   [7:0] split_ip_AXIvideo2Mat103_U0_img_data_stream_2_V_din;
wire    split_ip_AXIvideo2Mat103_U0_img_data_stream_2_V_write;
wire   [7:0] split_ip_AXIvideo2Mat103_U0_direction_out_din;
wire    split_ip_AXIvideo2Mat103_U0_direction_out_write;
reg    split_ip_RGB2Gray_U0_ap_start;
wire    split_ip_RGB2Gray_U0_ap_done;
wire    split_ip_RGB2Gray_U0_ap_continue;
wire    split_ip_RGB2Gray_U0_ap_idle;
wire    split_ip_RGB2Gray_U0_ap_ready;
wire    split_ip_RGB2Gray_U0_img_in_data_stream_0_V_read;
wire    split_ip_RGB2Gray_U0_img_in_data_stream_1_V_read;
wire    split_ip_RGB2Gray_U0_img_in_data_stream_2_V_read;
wire   [7:0] split_ip_RGB2Gray_U0_img_out_data_stream_0_V_din;
wire    split_ip_RGB2Gray_U0_img_out_data_stream_0_V_write;
wire   [7:0] split_ip_RGB2Gray_U0_img_out_data_stream_1_V_din;
wire    split_ip_RGB2Gray_U0_img_out_data_stream_1_V_write;
wire   [7:0] split_ip_RGB2Gray_U0_img_out_data_stream_2_V_din;
wire    split_ip_RGB2Gray_U0_img_out_data_stream_2_V_write;
reg    split_ip_sobel_U0_ap_start;
wire    split_ip_sobel_U0_ap_done;
wire    split_ip_sobel_U0_ap_continue;
wire    split_ip_sobel_U0_ap_idle;
wire    split_ip_sobel_U0_ap_ready;
wire    split_ip_sobel_U0_img_in_data_stream_0_V_read;
wire    split_ip_sobel_U0_img_in_data_stream_1_V_read;
wire    split_ip_sobel_U0_img_in_data_stream_2_V_read;
wire   [7:0] split_ip_sobel_U0_img_out_data_stream_0_V_din;
wire    split_ip_sobel_U0_img_out_data_stream_0_V_write;
wire   [7:0] split_ip_sobel_U0_img_out_data_stream_1_V_din;
wire    split_ip_sobel_U0_img_out_data_stream_1_V_write;
wire   [7:0] split_ip_sobel_U0_img_out_data_stream_2_V_din;
wire    split_ip_sobel_U0_img_out_data_stream_2_V_write;
wire    split_ip_sobel_U0_direction_read;
reg    split_ip_Mat2AXIvideo_U0_ap_start;
wire    split_ip_Mat2AXIvideo_U0_ap_done;
wire    split_ip_Mat2AXIvideo_U0_ap_continue;
wire    split_ip_Mat2AXIvideo_U0_ap_idle;
wire    split_ip_Mat2AXIvideo_U0_ap_ready;
wire    split_ip_Mat2AXIvideo_U0_img_data_stream_0_V_read;
wire    split_ip_Mat2AXIvideo_U0_img_data_stream_1_V_read;
wire    split_ip_Mat2AXIvideo_U0_img_data_stream_2_V_read;
wire   [23:0] split_ip_Mat2AXIvideo_U0_out_data_TDATA;
wire    split_ip_Mat2AXIvideo_U0_out_data_TVALID;
wire   [2:0] split_ip_Mat2AXIvideo_U0_out_data_TKEEP;
wire   [2:0] split_ip_Mat2AXIvideo_U0_out_data_TSTRB;
wire   [0:0] split_ip_Mat2AXIvideo_U0_out_data_TUSER;
wire   [0:0] split_ip_Mat2AXIvideo_U0_out_data_TLAST;
wire   [0:0] split_ip_Mat2AXIvideo_U0_out_data_TID;
wire   [0:0] split_ip_Mat2AXIvideo_U0_out_data_TDEST;
wire    ap_sig_hs_continue;
wire    img_0_data_stream_0_V_full_n;
wire   [7:0] img_0_data_stream_0_V_dout;
wire    img_0_data_stream_0_V_empty_n;
wire    img_0_data_stream_1_V_full_n;
wire   [7:0] img_0_data_stream_1_V_dout;
wire    img_0_data_stream_1_V_empty_n;
wire    img_0_data_stream_2_V_full_n;
wire   [7:0] img_0_data_stream_2_V_dout;
wire    img_0_data_stream_2_V_empty_n;
wire    direction_channel_full_n;
wire   [7:0] direction_channel_dout;
wire    direction_channel_empty_n;
wire    img_1_data_stream_0_V_full_n;
wire   [7:0] img_1_data_stream_0_V_dout;
wire    img_1_data_stream_0_V_empty_n;
wire    img_1_data_stream_1_V_full_n;
wire   [7:0] img_1_data_stream_1_V_dout;
wire    img_1_data_stream_1_V_empty_n;
wire    img_1_data_stream_2_V_full_n;
wire   [7:0] img_1_data_stream_2_V_dout;
wire    img_1_data_stream_2_V_empty_n;
wire    img_2_data_stream_0_V_full_n;
wire   [7:0] img_2_data_stream_0_V_dout;
wire    img_2_data_stream_0_V_empty_n;
wire    img_2_data_stream_1_V_full_n;
wire   [7:0] img_2_data_stream_1_V_dout;
wire    img_2_data_stream_1_V_empty_n;
wire    img_2_data_stream_2_V_full_n;
wire   [7:0] img_2_data_stream_2_V_dout;
wire    img_2_data_stream_2_V_empty_n;

// power-on initialization
initial begin
#0 split_ip_RGB2Gray_U0_ap_start = 1'b0;
#0 split_ip_sobel_U0_ap_start = 1'b0;
#0 split_ip_Mat2AXIvideo_U0_ap_start = 1'b0;
end

split_ip_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
split_ip_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .direction(direction)
);

split_ip_AXIvideo2Mat103 split_ip_AXIvideo2Mat103_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(split_ip_AXIvideo2Mat103_U0_ap_start),
    .ap_done(split_ip_AXIvideo2Mat103_U0_ap_done),
    .ap_continue(split_ip_AXIvideo2Mat103_U0_ap_continue),
    .ap_idle(split_ip_AXIvideo2Mat103_U0_ap_idle),
    .ap_ready(split_ip_AXIvideo2Mat103_U0_ap_ready),
    .in_data_TDATA(in_data_TDATA),
    .in_data_TVALID(in_data_TVALID),
    .in_data_TREADY(split_ip_AXIvideo2Mat103_U0_in_data_TREADY),
    .in_data_TKEEP(in_data_TKEEP),
    .in_data_TSTRB(in_data_TSTRB),
    .in_data_TUSER(in_data_TUSER),
    .in_data_TLAST(in_data_TLAST),
    .in_data_TID(in_data_TID),
    .in_data_TDEST(in_data_TDEST),
    .img_data_stream_0_V_din(split_ip_AXIvideo2Mat103_U0_img_data_stream_0_V_din),
    .img_data_stream_0_V_full_n(img_0_data_stream_0_V_full_n),
    .img_data_stream_0_V_write(split_ip_AXIvideo2Mat103_U0_img_data_stream_0_V_write),
    .img_data_stream_1_V_din(split_ip_AXIvideo2Mat103_U0_img_data_stream_1_V_din),
    .img_data_stream_1_V_full_n(img_0_data_stream_1_V_full_n),
    .img_data_stream_1_V_write(split_ip_AXIvideo2Mat103_U0_img_data_stream_1_V_write),
    .img_data_stream_2_V_din(split_ip_AXIvideo2Mat103_U0_img_data_stream_2_V_din),
    .img_data_stream_2_V_full_n(img_0_data_stream_2_V_full_n),
    .img_data_stream_2_V_write(split_ip_AXIvideo2Mat103_U0_img_data_stream_2_V_write),
    .direction(direction),
    .direction_out_din(split_ip_AXIvideo2Mat103_U0_direction_out_din),
    .direction_out_full_n(direction_channel_full_n),
    .direction_out_write(split_ip_AXIvideo2Mat103_U0_direction_out_write)
);

split_ip_RGB2Gray split_ip_RGB2Gray_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(split_ip_RGB2Gray_U0_ap_start),
    .ap_done(split_ip_RGB2Gray_U0_ap_done),
    .ap_continue(split_ip_RGB2Gray_U0_ap_continue),
    .ap_idle(split_ip_RGB2Gray_U0_ap_idle),
    .ap_ready(split_ip_RGB2Gray_U0_ap_ready),
    .img_in_data_stream_0_V_dout(img_0_data_stream_0_V_dout),
    .img_in_data_stream_0_V_empty_n(img_0_data_stream_0_V_empty_n),
    .img_in_data_stream_0_V_read(split_ip_RGB2Gray_U0_img_in_data_stream_0_V_read),
    .img_in_data_stream_1_V_dout(img_0_data_stream_1_V_dout),
    .img_in_data_stream_1_V_empty_n(img_0_data_stream_1_V_empty_n),
    .img_in_data_stream_1_V_read(split_ip_RGB2Gray_U0_img_in_data_stream_1_V_read),
    .img_in_data_stream_2_V_dout(img_0_data_stream_2_V_dout),
    .img_in_data_stream_2_V_empty_n(img_0_data_stream_2_V_empty_n),
    .img_in_data_stream_2_V_read(split_ip_RGB2Gray_U0_img_in_data_stream_2_V_read),
    .img_out_data_stream_0_V_din(split_ip_RGB2Gray_U0_img_out_data_stream_0_V_din),
    .img_out_data_stream_0_V_full_n(img_1_data_stream_0_V_full_n),
    .img_out_data_stream_0_V_write(split_ip_RGB2Gray_U0_img_out_data_stream_0_V_write),
    .img_out_data_stream_1_V_din(split_ip_RGB2Gray_U0_img_out_data_stream_1_V_din),
    .img_out_data_stream_1_V_full_n(img_1_data_stream_1_V_full_n),
    .img_out_data_stream_1_V_write(split_ip_RGB2Gray_U0_img_out_data_stream_1_V_write),
    .img_out_data_stream_2_V_din(split_ip_RGB2Gray_U0_img_out_data_stream_2_V_din),
    .img_out_data_stream_2_V_full_n(img_1_data_stream_2_V_full_n),
    .img_out_data_stream_2_V_write(split_ip_RGB2Gray_U0_img_out_data_stream_2_V_write)
);

split_ip_sobel split_ip_sobel_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(split_ip_sobel_U0_ap_start),
    .ap_done(split_ip_sobel_U0_ap_done),
    .ap_continue(split_ip_sobel_U0_ap_continue),
    .ap_idle(split_ip_sobel_U0_ap_idle),
    .ap_ready(split_ip_sobel_U0_ap_ready),
    .img_in_data_stream_0_V_dout(img_1_data_stream_0_V_dout),
    .img_in_data_stream_0_V_empty_n(img_1_data_stream_0_V_empty_n),
    .img_in_data_stream_0_V_read(split_ip_sobel_U0_img_in_data_stream_0_V_read),
    .img_in_data_stream_1_V_dout(img_1_data_stream_1_V_dout),
    .img_in_data_stream_1_V_empty_n(img_1_data_stream_1_V_empty_n),
    .img_in_data_stream_1_V_read(split_ip_sobel_U0_img_in_data_stream_1_V_read),
    .img_in_data_stream_2_V_dout(img_1_data_stream_2_V_dout),
    .img_in_data_stream_2_V_empty_n(img_1_data_stream_2_V_empty_n),
    .img_in_data_stream_2_V_read(split_ip_sobel_U0_img_in_data_stream_2_V_read),
    .img_out_data_stream_0_V_din(split_ip_sobel_U0_img_out_data_stream_0_V_din),
    .img_out_data_stream_0_V_full_n(img_2_data_stream_0_V_full_n),
    .img_out_data_stream_0_V_write(split_ip_sobel_U0_img_out_data_stream_0_V_write),
    .img_out_data_stream_1_V_din(split_ip_sobel_U0_img_out_data_stream_1_V_din),
    .img_out_data_stream_1_V_full_n(img_2_data_stream_1_V_full_n),
    .img_out_data_stream_1_V_write(split_ip_sobel_U0_img_out_data_stream_1_V_write),
    .img_out_data_stream_2_V_din(split_ip_sobel_U0_img_out_data_stream_2_V_din),
    .img_out_data_stream_2_V_full_n(img_2_data_stream_2_V_full_n),
    .img_out_data_stream_2_V_write(split_ip_sobel_U0_img_out_data_stream_2_V_write),
    .direction_dout(direction_channel_dout),
    .direction_empty_n(direction_channel_empty_n),
    .direction_read(split_ip_sobel_U0_direction_read)
);

split_ip_Mat2AXIvideo split_ip_Mat2AXIvideo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(split_ip_Mat2AXIvideo_U0_ap_start),
    .ap_done(split_ip_Mat2AXIvideo_U0_ap_done),
    .ap_continue(split_ip_Mat2AXIvideo_U0_ap_continue),
    .ap_idle(split_ip_Mat2AXIvideo_U0_ap_idle),
    .ap_ready(split_ip_Mat2AXIvideo_U0_ap_ready),
    .img_data_stream_0_V_dout(img_2_data_stream_0_V_dout),
    .img_data_stream_0_V_empty_n(img_2_data_stream_0_V_empty_n),
    .img_data_stream_0_V_read(split_ip_Mat2AXIvideo_U0_img_data_stream_0_V_read),
    .img_data_stream_1_V_dout(img_2_data_stream_1_V_dout),
    .img_data_stream_1_V_empty_n(img_2_data_stream_1_V_empty_n),
    .img_data_stream_1_V_read(split_ip_Mat2AXIvideo_U0_img_data_stream_1_V_read),
    .img_data_stream_2_V_dout(img_2_data_stream_2_V_dout),
    .img_data_stream_2_V_empty_n(img_2_data_stream_2_V_empty_n),
    .img_data_stream_2_V_read(split_ip_Mat2AXIvideo_U0_img_data_stream_2_V_read),
    .out_data_TDATA(split_ip_Mat2AXIvideo_U0_out_data_TDATA),
    .out_data_TVALID(split_ip_Mat2AXIvideo_U0_out_data_TVALID),
    .out_data_TREADY(out_data_TREADY),
    .out_data_TKEEP(split_ip_Mat2AXIvideo_U0_out_data_TKEEP),
    .out_data_TSTRB(split_ip_Mat2AXIvideo_U0_out_data_TSTRB),
    .out_data_TUSER(split_ip_Mat2AXIvideo_U0_out_data_TUSER),
    .out_data_TLAST(split_ip_Mat2AXIvideo_U0_out_data_TLAST),
    .out_data_TID(split_ip_Mat2AXIvideo_U0_out_data_TID),
    .out_data_TDEST(split_ip_Mat2AXIvideo_U0_out_data_TDEST)
);

FIFO_split_ip_img_0_data_stream_0_V img_0_data_stream_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(split_ip_AXIvideo2Mat103_U0_img_data_stream_0_V_din),
    .if_full_n(img_0_data_stream_0_V_full_n),
    .if_write(split_ip_AXIvideo2Mat103_U0_img_data_stream_0_V_write),
    .if_dout(img_0_data_stream_0_V_dout),
    .if_empty_n(img_0_data_stream_0_V_empty_n),
    .if_read(split_ip_RGB2Gray_U0_img_in_data_stream_0_V_read)
);

FIFO_split_ip_img_0_data_stream_1_V img_0_data_stream_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(split_ip_AXIvideo2Mat103_U0_img_data_stream_1_V_din),
    .if_full_n(img_0_data_stream_1_V_full_n),
    .if_write(split_ip_AXIvideo2Mat103_U0_img_data_stream_1_V_write),
    .if_dout(img_0_data_stream_1_V_dout),
    .if_empty_n(img_0_data_stream_1_V_empty_n),
    .if_read(split_ip_RGB2Gray_U0_img_in_data_stream_1_V_read)
);

FIFO_split_ip_img_0_data_stream_2_V img_0_data_stream_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(split_ip_AXIvideo2Mat103_U0_img_data_stream_2_V_din),
    .if_full_n(img_0_data_stream_2_V_full_n),
    .if_write(split_ip_AXIvideo2Mat103_U0_img_data_stream_2_V_write),
    .if_dout(img_0_data_stream_2_V_dout),
    .if_empty_n(img_0_data_stream_2_V_empty_n),
    .if_read(split_ip_RGB2Gray_U0_img_in_data_stream_2_V_read)
);

FIFO_split_ip_direction_channel direction_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(split_ip_AXIvideo2Mat103_U0_direction_out_din),
    .if_full_n(direction_channel_full_n),
    .if_write(split_ip_AXIvideo2Mat103_U0_direction_out_write),
    .if_dout(direction_channel_dout),
    .if_empty_n(direction_channel_empty_n),
    .if_read(split_ip_sobel_U0_direction_read)
);

FIFO_split_ip_img_1_data_stream_0_V img_1_data_stream_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(split_ip_RGB2Gray_U0_img_out_data_stream_0_V_din),
    .if_full_n(img_1_data_stream_0_V_full_n),
    .if_write(split_ip_RGB2Gray_U0_img_out_data_stream_0_V_write),
    .if_dout(img_1_data_stream_0_V_dout),
    .if_empty_n(img_1_data_stream_0_V_empty_n),
    .if_read(split_ip_sobel_U0_img_in_data_stream_0_V_read)
);

FIFO_split_ip_img_1_data_stream_1_V img_1_data_stream_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(split_ip_RGB2Gray_U0_img_out_data_stream_1_V_din),
    .if_full_n(img_1_data_stream_1_V_full_n),
    .if_write(split_ip_RGB2Gray_U0_img_out_data_stream_1_V_write),
    .if_dout(img_1_data_stream_1_V_dout),
    .if_empty_n(img_1_data_stream_1_V_empty_n),
    .if_read(split_ip_sobel_U0_img_in_data_stream_1_V_read)
);

FIFO_split_ip_img_1_data_stream_2_V img_1_data_stream_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(split_ip_RGB2Gray_U0_img_out_data_stream_2_V_din),
    .if_full_n(img_1_data_stream_2_V_full_n),
    .if_write(split_ip_RGB2Gray_U0_img_out_data_stream_2_V_write),
    .if_dout(img_1_data_stream_2_V_dout),
    .if_empty_n(img_1_data_stream_2_V_empty_n),
    .if_read(split_ip_sobel_U0_img_in_data_stream_2_V_read)
);

FIFO_split_ip_img_2_data_stream_0_V img_2_data_stream_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(split_ip_sobel_U0_img_out_data_stream_0_V_din),
    .if_full_n(img_2_data_stream_0_V_full_n),
    .if_write(split_ip_sobel_U0_img_out_data_stream_0_V_write),
    .if_dout(img_2_data_stream_0_V_dout),
    .if_empty_n(img_2_data_stream_0_V_empty_n),
    .if_read(split_ip_Mat2AXIvideo_U0_img_data_stream_0_V_read)
);

FIFO_split_ip_img_2_data_stream_1_V img_2_data_stream_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(split_ip_sobel_U0_img_out_data_stream_1_V_din),
    .if_full_n(img_2_data_stream_1_V_full_n),
    .if_write(split_ip_sobel_U0_img_out_data_stream_1_V_write),
    .if_dout(img_2_data_stream_1_V_dout),
    .if_empty_n(img_2_data_stream_1_V_empty_n),
    .if_read(split_ip_Mat2AXIvideo_U0_img_data_stream_1_V_read)
);

FIFO_split_ip_img_2_data_stream_2_V img_2_data_stream_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(split_ip_sobel_U0_img_out_data_stream_2_V_din),
    .if_full_n(img_2_data_stream_2_V_full_n),
    .if_write(split_ip_sobel_U0_img_out_data_stream_2_V_write),
    .if_dout(img_2_data_stream_2_V_dout),
    .if_empty_n(img_2_data_stream_2_V_empty_n),
    .if_read(split_ip_Mat2AXIvideo_U0_img_data_stream_2_V_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        split_ip_Mat2AXIvideo_U0_ap_start <= 1'b0;
    end else begin
        split_ip_Mat2AXIvideo_U0_ap_start <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        split_ip_RGB2Gray_U0_ap_start <= 1'b0;
    end else begin
        split_ip_RGB2Gray_U0_ap_start <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        split_ip_sobel_U0_ap_start <= 1'b0;
    end else begin
        split_ip_sobel_U0_ap_start <= 1'b1;
    end
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sig_hs_continue = 1'b0;

assign in_data_TREADY = split_ip_AXIvideo2Mat103_U0_in_data_TREADY;

assign out_data_TDATA = split_ip_Mat2AXIvideo_U0_out_data_TDATA;

assign out_data_TDEST = split_ip_Mat2AXIvideo_U0_out_data_TDEST;

assign out_data_TID = split_ip_Mat2AXIvideo_U0_out_data_TID;

assign out_data_TKEEP = split_ip_Mat2AXIvideo_U0_out_data_TKEEP;

assign out_data_TLAST = split_ip_Mat2AXIvideo_U0_out_data_TLAST;

assign out_data_TSTRB = split_ip_Mat2AXIvideo_U0_out_data_TSTRB;

assign out_data_TUSER = split_ip_Mat2AXIvideo_U0_out_data_TUSER;

assign out_data_TVALID = split_ip_Mat2AXIvideo_U0_out_data_TVALID;

assign split_ip_AXIvideo2Mat103_U0_ap_continue = 1'b1;

assign split_ip_AXIvideo2Mat103_U0_ap_start = 1'b1;

assign split_ip_Mat2AXIvideo_U0_ap_continue = 1'b1;

assign split_ip_RGB2Gray_U0_ap_continue = 1'b1;

assign split_ip_sobel_U0_ap_continue = 1'b1;

endmodule //split_ip
