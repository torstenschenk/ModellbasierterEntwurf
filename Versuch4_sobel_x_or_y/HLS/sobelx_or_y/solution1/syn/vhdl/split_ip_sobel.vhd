-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity split_ip_sobel is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_in_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_in_data_stream_0_V_empty_n : IN STD_LOGIC;
    img_in_data_stream_0_V_read : OUT STD_LOGIC;
    img_in_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_in_data_stream_1_V_empty_n : IN STD_LOGIC;
    img_in_data_stream_1_V_read : OUT STD_LOGIC;
    img_in_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_in_data_stream_2_V_empty_n : IN STD_LOGIC;
    img_in_data_stream_2_V_read : OUT STD_LOGIC;
    img_out_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_out_data_stream_0_V_full_n : IN STD_LOGIC;
    img_out_data_stream_0_V_write : OUT STD_LOGIC;
    img_out_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_out_data_stream_1_V_full_n : IN STD_LOGIC;
    img_out_data_stream_1_V_write : OUT STD_LOGIC;
    img_out_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_out_data_stream_2_V_full_n : IN STD_LOGIC;
    img_out_data_stream_2_V_write : OUT STD_LOGIC;
    direction_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    direction_empty_n : IN STD_LOGIC;
    direction_read : OUT STD_LOGIC );
end;


architecture behav of split_ip_sobel is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_20 : BOOLEAN;
    signal direction_blk_n : STD_LOGIC;
    signal tmp_i_fu_90_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_96 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_66 : BOOLEAN;
    signal grp_split_ip_Filter2D_fu_56_ap_start : STD_LOGIC;
    signal grp_split_ip_Filter2D_fu_56_ap_done : STD_LOGIC;
    signal grp_split_ip_Filter2D_fu_56_ap_idle : STD_LOGIC;
    signal grp_split_ip_Filter2D_fu_56_ap_ready : STD_LOGIC;
    signal grp_split_ip_Filter2D_fu_56_p_src_data_stream_0_V_read : STD_LOGIC;
    signal grp_split_ip_Filter2D_fu_56_p_src_data_stream_1_V_read : STD_LOGIC;
    signal grp_split_ip_Filter2D_fu_56_p_src_data_stream_2_V_read : STD_LOGIC;
    signal grp_split_ip_Filter2D_fu_56_p_dst_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_split_ip_Filter2D_fu_56_p_dst_data_stream_0_V_write : STD_LOGIC;
    signal grp_split_ip_Filter2D_fu_56_p_dst_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_split_ip_Filter2D_fu_56_p_dst_data_stream_1_V_write : STD_LOGIC;
    signal grp_split_ip_Filter2D_fu_56_p_dst_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_split_ip_Filter2D_fu_56_p_dst_data_stream_2_V_write : STD_LOGIC;
    signal grp_split_ip_Filter2D_fu_56_p_kernel_val_0_V_1_read : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_split_ip_Filter2D_fu_56_p_kernel_val_0_V_2_read : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_split_ip_Filter2D_fu_56_p_kernel_val_1_V_0_read : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_split_ip_Filter2D_fu_56_p_kernel_val_1_V_2_read : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_split_ip_Filter2D_fu_56_p_kernel_val_2_V_0_read : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_split_ip_Filter2D_fu_56_p_kernel_val_2_V_1_read : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_grp_split_ip_Filter2D_fu_56_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_112 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);

    component split_ip_Filter2D IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_0_V_read : OUT STD_LOGIC;
        p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_1_V_read : OUT STD_LOGIC;
        p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_2_V_read : OUT STD_LOGIC;
        p_dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_0_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_0_V_write : OUT STD_LOGIC;
        p_dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_1_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_1_V_write : OUT STD_LOGIC;
        p_dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_2_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_2_V_write : OUT STD_LOGIC;
        p_kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (2 downto 0);
        p_kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (1 downto 0);
        p_kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (1 downto 0);
        p_kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (2 downto 0);
        p_kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (1 downto 0);
        p_kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (3 downto 0) );
    end component;



begin
    grp_split_ip_Filter2D_fu_56 : component split_ip_Filter2D
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_split_ip_Filter2D_fu_56_ap_start,
        ap_done => grp_split_ip_Filter2D_fu_56_ap_done,
        ap_idle => grp_split_ip_Filter2D_fu_56_ap_idle,
        ap_ready => grp_split_ip_Filter2D_fu_56_ap_ready,
        p_src_data_stream_0_V_dout => img_in_data_stream_0_V_dout,
        p_src_data_stream_0_V_empty_n => img_in_data_stream_0_V_empty_n,
        p_src_data_stream_0_V_read => grp_split_ip_Filter2D_fu_56_p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout => img_in_data_stream_1_V_dout,
        p_src_data_stream_1_V_empty_n => img_in_data_stream_1_V_empty_n,
        p_src_data_stream_1_V_read => grp_split_ip_Filter2D_fu_56_p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout => img_in_data_stream_2_V_dout,
        p_src_data_stream_2_V_empty_n => img_in_data_stream_2_V_empty_n,
        p_src_data_stream_2_V_read => grp_split_ip_Filter2D_fu_56_p_src_data_stream_2_V_read,
        p_dst_data_stream_0_V_din => grp_split_ip_Filter2D_fu_56_p_dst_data_stream_0_V_din,
        p_dst_data_stream_0_V_full_n => img_out_data_stream_0_V_full_n,
        p_dst_data_stream_0_V_write => grp_split_ip_Filter2D_fu_56_p_dst_data_stream_0_V_write,
        p_dst_data_stream_1_V_din => grp_split_ip_Filter2D_fu_56_p_dst_data_stream_1_V_din,
        p_dst_data_stream_1_V_full_n => img_out_data_stream_1_V_full_n,
        p_dst_data_stream_1_V_write => grp_split_ip_Filter2D_fu_56_p_dst_data_stream_1_V_write,
        p_dst_data_stream_2_V_din => grp_split_ip_Filter2D_fu_56_p_dst_data_stream_2_V_din,
        p_dst_data_stream_2_V_full_n => img_out_data_stream_2_V_full_n,
        p_dst_data_stream_2_V_write => grp_split_ip_Filter2D_fu_56_p_dst_data_stream_2_V_write,
        p_kernel_val_0_V_1_read => grp_split_ip_Filter2D_fu_56_p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_read => grp_split_ip_Filter2D_fu_56_p_kernel_val_0_V_2_read,
        p_kernel_val_1_V_0_read => grp_split_ip_Filter2D_fu_56_p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_2_read => grp_split_ip_Filter2D_fu_56_p_kernel_val_1_V_2_read,
        p_kernel_val_2_V_0_read => grp_split_ip_Filter2D_fu_56_p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_read => grp_split_ip_Filter2D_fu_56_p_kernel_val_2_V_1_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((((tmp_i_reg_96 = ap_const_lv1_0) and (ap_const_logic_0 = grp_split_ip_Filter2D_fu_56_ap_done)) or (not((tmp_i_reg_96 = ap_const_lv1_0)) and (ap_const_logic_0 = grp_split_ip_Filter2D_fu_56_ap_done)))))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_split_ip_Filter2D_fu_56_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_split_ip_Filter2D_fu_56_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_66) and (tmp_i_fu_90_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_66) and not((tmp_i_fu_90_p2 = ap_const_lv1_0))))) then 
                    ap_reg_grp_split_ip_Filter2D_fu_56_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_split_ip_Filter2D_fu_56_ap_ready)) then 
                    ap_reg_grp_split_ip_Filter2D_fu_56_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_66))) then
                tmp_i_reg_96 <= tmp_i_fu_90_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, tmp_i_reg_96, ap_sig_66, grp_split_ip_Filter2D_fu_56_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_66)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((((tmp_i_reg_96 = ap_const_lv1_0) and (ap_const_logic_0 = grp_split_ip_Filter2D_fu_56_ap_done)) or (not((tmp_i_reg_96 = ap_const_lv1_0)) and (ap_const_logic_0 = grp_split_ip_Filter2D_fu_56_ap_done))))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_done_reg, tmp_i_reg_96, grp_split_ip_Filter2D_fu_56_ap_done, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((((tmp_i_reg_96 = ap_const_lv1_0) and (ap_const_logic_0 = grp_split_ip_Filter2D_fu_56_ap_done)) or (not((tmp_i_reg_96 = ap_const_lv1_0)) and (ap_const_logic_0 = grp_split_ip_Filter2D_fu_56_ap_done))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_i_reg_96, grp_split_ip_Filter2D_fu_56_ap_done, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((((tmp_i_reg_96 = ap_const_lv1_0) and (ap_const_logic_0 = grp_split_ip_Filter2D_fu_56_ap_done)) or (not((tmp_i_reg_96 = ap_const_lv1_0)) and (ap_const_logic_0 = grp_split_ip_Filter2D_fu_56_ap_done)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_112_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_112 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_20_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_20 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_66_assign_proc : process(ap_start, ap_done_reg, direction_empty_n)
    begin
                ap_sig_66 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (direction_empty_n = ap_const_logic_0));
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_20)
    begin
        if (ap_sig_20) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_112)
    begin
        if (ap_sig_112) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    direction_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_sig_cseq_ST_st1_fsm_0, direction_empty_n)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            direction_blk_n <= direction_empty_n;
        else 
            direction_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    direction_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_66)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_66))) then 
            direction_read <= ap_const_logic_1;
        else 
            direction_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_split_ip_Filter2D_fu_56_ap_start <= ap_reg_grp_split_ip_Filter2D_fu_56_ap_start;

    grp_split_ip_Filter2D_fu_56_p_kernel_val_0_V_1_read_assign_proc : process(tmp_i_reg_96, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
            if (not((tmp_i_reg_96 = ap_const_lv1_0))) then 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_0_V_1_read <= ap_const_lv3_0;
            elsif ((tmp_i_reg_96 = ap_const_lv1_0)) then 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_0_V_1_read <= ap_const_lv3_6;
            else 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_0_V_1_read <= "XXX";
            end if;
        else 
            grp_split_ip_Filter2D_fu_56_p_kernel_val_0_V_1_read <= "XXX";
        end if; 
    end process;


    grp_split_ip_Filter2D_fu_56_p_kernel_val_0_V_2_read_assign_proc : process(tmp_i_reg_96, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
            if (not((tmp_i_reg_96 = ap_const_lv1_0))) then 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_0_V_2_read <= ap_const_lv2_1;
            elsif ((tmp_i_reg_96 = ap_const_lv1_0)) then 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_0_V_2_read <= ap_const_lv2_3;
            else 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_0_V_2_read <= "XX";
            end if;
        else 
            grp_split_ip_Filter2D_fu_56_p_kernel_val_0_V_2_read <= "XX";
        end if; 
    end process;


    grp_split_ip_Filter2D_fu_56_p_kernel_val_1_V_0_read_assign_proc : process(tmp_i_reg_96, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
            if (not((tmp_i_reg_96 = ap_const_lv1_0))) then 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_1_V_0_read <= ap_const_lv2_2;
            elsif ((tmp_i_reg_96 = ap_const_lv1_0)) then 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_1_V_0_read <= ap_const_lv2_0;
            else 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_1_V_0_read <= "XX";
            end if;
        else 
            grp_split_ip_Filter2D_fu_56_p_kernel_val_1_V_0_read <= "XX";
        end if; 
    end process;


    grp_split_ip_Filter2D_fu_56_p_kernel_val_1_V_2_read_assign_proc : process(tmp_i_reg_96, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
            if (not((tmp_i_reg_96 = ap_const_lv1_0))) then 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_1_V_2_read <= ap_const_lv3_2;
            elsif ((tmp_i_reg_96 = ap_const_lv1_0)) then 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_1_V_2_read <= ap_const_lv3_0;
            else 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_1_V_2_read <= "XXX";
            end if;
        else 
            grp_split_ip_Filter2D_fu_56_p_kernel_val_1_V_2_read <= "XXX";
        end if; 
    end process;


    grp_split_ip_Filter2D_fu_56_p_kernel_val_2_V_0_read_assign_proc : process(tmp_i_reg_96, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
            if (not((tmp_i_reg_96 = ap_const_lv1_0))) then 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_2_V_0_read <= ap_const_lv2_3;
            elsif ((tmp_i_reg_96 = ap_const_lv1_0)) then 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_2_V_0_read <= ap_const_lv2_1;
            else 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_2_V_0_read <= "XX";
            end if;
        else 
            grp_split_ip_Filter2D_fu_56_p_kernel_val_2_V_0_read <= "XX";
        end if; 
    end process;


    grp_split_ip_Filter2D_fu_56_p_kernel_val_2_V_1_read_assign_proc : process(tmp_i_reg_96, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
            if (not((tmp_i_reg_96 = ap_const_lv1_0))) then 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_2_V_1_read <= ap_const_lv4_0;
            elsif ((tmp_i_reg_96 = ap_const_lv1_0)) then 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_2_V_1_read <= ap_const_lv4_2;
            else 
                grp_split_ip_Filter2D_fu_56_p_kernel_val_2_V_1_read <= "XXXX";
            end if;
        else 
            grp_split_ip_Filter2D_fu_56_p_kernel_val_2_V_1_read <= "XXXX";
        end if; 
    end process;


    img_in_data_stream_0_V_read_assign_proc : process(tmp_i_reg_96, grp_split_ip_Filter2D_fu_56_p_src_data_stream_0_V_read, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_i_reg_96 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_i_reg_96 = ap_const_lv1_0))))) then 
            img_in_data_stream_0_V_read <= grp_split_ip_Filter2D_fu_56_p_src_data_stream_0_V_read;
        else 
            img_in_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_in_data_stream_1_V_read_assign_proc : process(tmp_i_reg_96, grp_split_ip_Filter2D_fu_56_p_src_data_stream_1_V_read, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_i_reg_96 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_i_reg_96 = ap_const_lv1_0))))) then 
            img_in_data_stream_1_V_read <= grp_split_ip_Filter2D_fu_56_p_src_data_stream_1_V_read;
        else 
            img_in_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_in_data_stream_2_V_read_assign_proc : process(tmp_i_reg_96, grp_split_ip_Filter2D_fu_56_p_src_data_stream_2_V_read, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_i_reg_96 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_i_reg_96 = ap_const_lv1_0))))) then 
            img_in_data_stream_2_V_read <= grp_split_ip_Filter2D_fu_56_p_src_data_stream_2_V_read;
        else 
            img_in_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;

    img_out_data_stream_0_V_din <= grp_split_ip_Filter2D_fu_56_p_dst_data_stream_0_V_din;

    img_out_data_stream_0_V_write_assign_proc : process(tmp_i_reg_96, grp_split_ip_Filter2D_fu_56_p_dst_data_stream_0_V_write, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_i_reg_96 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_i_reg_96 = ap_const_lv1_0))))) then 
            img_out_data_stream_0_V_write <= grp_split_ip_Filter2D_fu_56_p_dst_data_stream_0_V_write;
        else 
            img_out_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    img_out_data_stream_1_V_din <= grp_split_ip_Filter2D_fu_56_p_dst_data_stream_1_V_din;

    img_out_data_stream_1_V_write_assign_proc : process(tmp_i_reg_96, grp_split_ip_Filter2D_fu_56_p_dst_data_stream_1_V_write, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_i_reg_96 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_i_reg_96 = ap_const_lv1_0))))) then 
            img_out_data_stream_1_V_write <= grp_split_ip_Filter2D_fu_56_p_dst_data_stream_1_V_write;
        else 
            img_out_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    img_out_data_stream_2_V_din <= grp_split_ip_Filter2D_fu_56_p_dst_data_stream_2_V_din;

    img_out_data_stream_2_V_write_assign_proc : process(tmp_i_reg_96, grp_split_ip_Filter2D_fu_56_p_dst_data_stream_2_V_write, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_i_reg_96 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_i_reg_96 = ap_const_lv1_0))))) then 
            img_out_data_stream_2_V_write <= grp_split_ip_Filter2D_fu_56_p_dst_data_stream_2_V_write;
        else 
            img_out_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_i_fu_90_p2 <= "1" when (direction_dout = ap_const_lv8_1) else "0";
end behav;
