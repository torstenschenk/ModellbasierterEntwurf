-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity split_ip_RGB2Gray is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_in_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_in_data_stream_0_V_empty_n : IN STD_LOGIC;
    img_in_data_stream_0_V_read : OUT STD_LOGIC;
    img_in_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_in_data_stream_1_V_empty_n : IN STD_LOGIC;
    img_in_data_stream_1_V_read : OUT STD_LOGIC;
    img_in_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_in_data_stream_2_V_empty_n : IN STD_LOGIC;
    img_in_data_stream_2_V_read : OUT STD_LOGIC;
    img_out_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_out_data_stream_0_V_full_n : IN STD_LOGIC;
    img_out_data_stream_0_V_write : OUT STD_LOGIC;
    img_out_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_out_data_stream_1_V_full_n : IN STD_LOGIC;
    img_out_data_stream_1_V_write : OUT STD_LOGIC;
    img_out_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_out_data_stream_2_V_full_n : IN STD_LOGIC;
    img_out_data_stream_2_V_write : OUT STD_LOGIC );
end;


architecture behav of split_ip_RGB2Gray is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st8_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv16_96 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010010110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv14_1D : STD_LOGIC_VECTOR (13 downto 0) := "00000000011101";
    constant ap_const_lv16_4D : STD_LOGIC_VECTOR (15 downto 0) := "0000000001001101";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_22 : BOOLEAN;
    signal img_in_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_59 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal exitcond_reg_210 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_in_data_stream_1_V_blk_n : STD_LOGIC;
    signal img_in_data_stream_2_V_blk_n : STD_LOGIC;
    signal img_out_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_reg_ppstg_exitcond_reg_210_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_out_data_stream_1_V_blk_n : STD_LOGIC;
    signal img_out_data_stream_2_V_blk_n : STD_LOGIC;
    signal col_reg_126 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond2_fu_137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_93 : BOOLEAN;
    signal row_1_fu_143_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_1_reg_205 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_fu_149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_106 : BOOLEAN;
    signal ap_sig_116 : BOOLEAN;
    signal ap_reg_ppstg_exitcond_reg_210_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_210_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_1_fu_155_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_reg_219 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_219_pp0_iter2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_reg_224 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_reg_229 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_229_pp0_iter2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_3_fu_164_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_3_reg_234 : STD_LOGIC_VECTOR (15 downto 0);
    signal gray_reg_239 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_reg_115 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_160 : BOOLEAN;
    signal ap_sig_cseq_ST_st8_fsm_3 : STD_LOGIC;
    signal ap_sig_168 : BOOLEAN;
    signal p_Val2_3_fu_164_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_192_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_185_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_185_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_192_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_192_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_185_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_185_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_192_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_3_fu_164_p00 : STD_LOGIC_VECTOR (15 downto 0);

    component split_ip_mac_muladd_8ns_6ns_16ns_16_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component split_ip_mac_muladd_8ns_8ns_16ns_16_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    split_ip_mac_muladd_8ns_6ns_16ns_16_1_U12 : component split_ip_mac_muladd_8ns_6ns_16ns_16_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_185_p0,
        din1 => grp_fu_185_p1,
        din2 => p_Val2_3_reg_234,
        dout => grp_fu_185_p3);

    split_ip_mac_muladd_8ns_8ns_16ns_16_1_U13 : component split_ip_mac_muladd_8ns_8ns_16ns_16_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_192_p0,
        din1 => grp_fu_192_p1,
        din2 => grp_fu_185_p3,
        dout => grp_fu_192_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond2_fu_137_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))) and not((ap_const_lv1_0 = exitcond_fu_149_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_137_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))) and (ap_const_lv1_0 = exitcond_fu_149_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_137_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))) and not((ap_const_lv1_0 = exitcond_fu_149_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116)))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116)))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_137_p2))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    col_reg_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))) and (ap_const_lv1_0 = exitcond_fu_149_p2))) then 
                col_reg_126 <= col_1_fu_155_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_137_p2))) then 
                col_reg_126 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    row_reg_115_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_3)) then 
                row_reg_115 <= row_1_reg_205;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_160))) then 
                row_reg_115 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))))) then
                ap_reg_ppstg_exitcond_reg_210_pp0_iter1 <= exitcond_reg_210;
                exitcond_reg_210 <= exitcond_fu_149_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116)))) then
                ap_reg_ppstg_exitcond_reg_210_pp0_iter2 <= ap_reg_ppstg_exitcond_reg_210_pp0_iter1;
                ap_reg_ppstg_exitcond_reg_210_pp0_iter3 <= ap_reg_ppstg_exitcond_reg_210_pp0_iter2;
                ap_reg_ppstg_tmp_6_reg_229_pp0_iter2 <= tmp_6_reg_229;
                ap_reg_ppstg_tmp_8_reg_219_pp0_iter2 <= tmp_8_reg_219;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_210_pp0_iter2))) then
                gray_reg_239 <= grp_fu_192_p3(15 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_210_pp0_iter1))) then
                    p_Val2_3_reg_234(15 downto 1) <= p_Val2_3_fu_164_p2(15 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                row_1_reg_205 <= row_1_fu_143_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_reg_210 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))))) then
                tmp_6_reg_229 <= img_in_data_stream_2_V_dout;
                tmp_8_reg_219 <= img_in_data_stream_0_V_dout;
                tmp_9_reg_224 <= img_in_data_stream_1_V_dout;
            end if;
        end if;
    end process;
    p_Val2_3_reg_234(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, exitcond2_fu_137_p2, exitcond_fu_149_p2, ap_sig_106, ap_sig_116, ap_sig_160)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_160)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond2_fu_137_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))) and not((ap_const_lv1_0 = exitcond_fu_149_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))) and not((ap_const_lv1_0 = exitcond_fu_149_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st8_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_done_reg, exitcond2_fu_137_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond2_fu_137_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond2_fu_137_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond2_fu_137_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_106_assign_proc : process(img_in_data_stream_0_V_empty_n, img_in_data_stream_1_V_empty_n, img_in_data_stream_2_V_empty_n, exitcond_reg_210)
    begin
                ap_sig_106 <= (((exitcond_reg_210 = ap_const_lv1_0) and (img_in_data_stream_0_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_210 = ap_const_lv1_0) and (img_in_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_210 = ap_const_lv1_0) and (img_in_data_stream_2_V_empty_n = ap_const_logic_0)));
    end process;


    ap_sig_116_assign_proc : process(img_out_data_stream_0_V_full_n, img_out_data_stream_1_V_full_n, img_out_data_stream_2_V_full_n, ap_reg_ppstg_exitcond_reg_210_pp0_iter3)
    begin
                ap_sig_116 <= (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_210_pp0_iter3) and (img_out_data_stream_0_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_210_pp0_iter3) and (img_out_data_stream_1_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_210_pp0_iter3) and (img_out_data_stream_2_V_full_n = ap_const_logic_0)));
    end process;


    ap_sig_160_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_160 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_sig_168_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_168 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_59_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_59 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_93_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_93 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_59)
    begin
        if (ap_sig_59) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_22)
    begin
        if (ap_sig_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_93)
    begin
        if (ap_sig_93) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_3_assign_proc : process(ap_sig_168)
    begin
        if (ap_sig_168) then 
            ap_sig_cseq_ST_st8_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;

    col_1_fu_155_p2 <= std_logic_vector(unsigned(col_reg_126) + unsigned(ap_const_lv11_1));
    exitcond2_fu_137_p2 <= "1" when (row_reg_115 = ap_const_lv11_438) else "0";
    exitcond_fu_149_p2 <= "1" when (col_reg_126 = ap_const_lv11_780) else "0";
    grp_fu_185_p0 <= grp_fu_185_p00(8 - 1 downto 0);
    grp_fu_185_p00 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_8_reg_219_pp0_iter2),14));
    grp_fu_185_p1 <= ap_const_lv14_1D(6 - 1 downto 0);
    grp_fu_192_p0 <= grp_fu_192_p00(8 - 1 downto 0);
    grp_fu_192_p00 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_6_reg_229_pp0_iter2),16));
    grp_fu_192_p1 <= ap_const_lv16_4D(8 - 1 downto 0);

    img_in_data_stream_0_V_blk_n_assign_proc : process(img_in_data_stream_0_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_210)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_210 = ap_const_lv1_0))) then 
            img_in_data_stream_0_V_blk_n <= img_in_data_stream_0_V_empty_n;
        else 
            img_in_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_in_data_stream_0_V_read_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, exitcond_reg_210, ap_sig_106, ap_sig_116)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_210 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))))) then 
            img_in_data_stream_0_V_read <= ap_const_logic_1;
        else 
            img_in_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_in_data_stream_1_V_blk_n_assign_proc : process(img_in_data_stream_1_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_210)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_210 = ap_const_lv1_0))) then 
            img_in_data_stream_1_V_blk_n <= img_in_data_stream_1_V_empty_n;
        else 
            img_in_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_in_data_stream_1_V_read_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, exitcond_reg_210, ap_sig_106, ap_sig_116)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_210 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))))) then 
            img_in_data_stream_1_V_read <= ap_const_logic_1;
        else 
            img_in_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_in_data_stream_2_V_blk_n_assign_proc : process(img_in_data_stream_2_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_210)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_210 = ap_const_lv1_0))) then 
            img_in_data_stream_2_V_blk_n <= img_in_data_stream_2_V_empty_n;
        else 
            img_in_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_in_data_stream_2_V_read_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, exitcond_reg_210, ap_sig_106, ap_sig_116)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_210 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))))) then 
            img_in_data_stream_2_V_read <= ap_const_logic_1;
        else 
            img_in_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_out_data_stream_0_V_blk_n_assign_proc : process(img_out_data_stream_0_V_full_n, ap_reg_ppiten_pp0_it4, ap_reg_ppstg_exitcond_reg_210_pp0_iter3)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_210_pp0_iter3))) then 
            img_out_data_stream_0_V_blk_n <= img_out_data_stream_0_V_full_n;
        else 
            img_out_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_out_data_stream_0_V_din <= gray_reg_239;

    img_out_data_stream_0_V_write_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, ap_reg_ppstg_exitcond_reg_210_pp0_iter3, ap_sig_106, ap_sig_116)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_210_pp0_iter3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))))) then 
            img_out_data_stream_0_V_write <= ap_const_logic_1;
        else 
            img_out_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    img_out_data_stream_1_V_blk_n_assign_proc : process(img_out_data_stream_1_V_full_n, ap_reg_ppiten_pp0_it4, ap_reg_ppstg_exitcond_reg_210_pp0_iter3)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_210_pp0_iter3))) then 
            img_out_data_stream_1_V_blk_n <= img_out_data_stream_1_V_full_n;
        else 
            img_out_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_out_data_stream_1_V_din <= gray_reg_239;

    img_out_data_stream_1_V_write_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, ap_reg_ppstg_exitcond_reg_210_pp0_iter3, ap_sig_106, ap_sig_116)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_210_pp0_iter3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))))) then 
            img_out_data_stream_1_V_write <= ap_const_logic_1;
        else 
            img_out_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    img_out_data_stream_2_V_blk_n_assign_proc : process(img_out_data_stream_2_V_full_n, ap_reg_ppiten_pp0_it4, ap_reg_ppstg_exitcond_reg_210_pp0_iter3)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_210_pp0_iter3))) then 
            img_out_data_stream_2_V_blk_n <= img_out_data_stream_2_V_full_n;
        else 
            img_out_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_out_data_stream_2_V_din <= gray_reg_239;

    img_out_data_stream_2_V_write_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, ap_reg_ppstg_exitcond_reg_210_pp0_iter3, ap_sig_106, ap_sig_116)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_210_pp0_iter3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_106) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and ap_sig_116))))) then 
            img_out_data_stream_2_V_write <= ap_const_logic_1;
        else 
            img_out_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Val2_3_fu_164_p0 <= p_Val2_3_fu_164_p00(8 - 1 downto 0);
    p_Val2_3_fu_164_p00 <= std_logic_vector(resize(unsigned(tmp_9_reg_224),16));
    p_Val2_3_fu_164_p2 <= std_logic_vector(resize(unsigned(p_Val2_3_fu_164_p0) * unsigned(ap_const_lv16_96), 16));
    row_1_fu_143_p2 <= std_logic_vector(unsigned(row_reg_115) + unsigned(ap_const_lv11_1));
end behav;
