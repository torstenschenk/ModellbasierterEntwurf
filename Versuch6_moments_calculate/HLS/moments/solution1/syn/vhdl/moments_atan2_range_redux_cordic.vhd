-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity moments_atan2_range_redux_cordic is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    y_in : IN STD_LOGIC_VECTOR (63 downto 0);
    x_in : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of moments_atan2_range_redux_cordic is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000001000000000000000000000";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000010000000000000000000000";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000100000000000000000000000";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000001000000000000000000000000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000010000000000000000000000000";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000100000000000000000000000000";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000001000000000000000000000000000";
    constant ap_ST_st29_fsm_28 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000010000000000000000000000000000";
    constant ap_ST_st30_fsm_29 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000100000000000000000000000000000";
    constant ap_ST_st31_fsm_30 : STD_LOGIC_VECTOR (41 downto 0) := "000000000001000000000000000000000000000000";
    constant ap_ST_st32_fsm_31 : STD_LOGIC_VECTOR (41 downto 0) := "000000000010000000000000000000000000000000";
    constant ap_ST_st33_fsm_32 : STD_LOGIC_VECTOR (41 downto 0) := "000000000100000000000000000000000000000000";
    constant ap_ST_st34_fsm_33 : STD_LOGIC_VECTOR (41 downto 0) := "000000001000000000000000000000000000000000";
    constant ap_ST_st35_fsm_34 : STD_LOGIC_VECTOR (41 downto 0) := "000000010000000000000000000000000000000000";
    constant ap_ST_st36_fsm_35 : STD_LOGIC_VECTOR (41 downto 0) := "000000100000000000000000000000000000000000";
    constant ap_ST_st37_fsm_36 : STD_LOGIC_VECTOR (41 downto 0) := "000001000000000000000000000000000000000000";
    constant ap_ST_st38_fsm_37 : STD_LOGIC_VECTOR (41 downto 0) := "000010000000000000000000000000000000000000";
    constant ap_ST_st39_fsm_38 : STD_LOGIC_VECTOR (41 downto 0) := "000100000000000000000000000000000000000000";
    constant ap_ST_st40_fsm_39 : STD_LOGIC_VECTOR (41 downto 0) := "001000000000000000000000000000000000000000";
    constant ap_ST_st41_fsm_40 : STD_LOGIC_VECTOR (41 downto 0) := "010000000000000000000000000000000000000000";
    constant ap_ST_st42_fsm_41 : STD_LOGIC_VECTOR (41 downto 0) := "100000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv87_0 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv12_1A : STD_LOGIC_VECTOR (11 downto 0) := "000000011010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv7_57 : STD_LOGIC_VECTOR (6 downto 0) := "1010111";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv86_0 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_FFFFFFCC : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001100";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv11_401 : STD_LOGIC_VECTOR (10 downto 0) := "10000000001";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv88_FFFFFFFFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (87 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_59 : BOOLEAN;
    signal hls_cordic_ctab_table_128_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal hls_cordic_ctab_table_128_V_ce0 : STD_LOGIC;
    signal hls_cordic_ctab_table_128_V_q0 : STD_LOGIC_VECTOR (125 downto 0);
    signal loc_V_1_fu_210_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal loc_V_1_reg_789 : STD_LOGIC_VECTOR (51 downto 0);
    signal loc_V_3_fu_228_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal loc_V_3_reg_794 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_5_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_799 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_803 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_fu_264_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_809 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_assign_fu_278_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_assign_reg_814 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_2_ph_fu_331_p3 : STD_LOGIC_VECTOR (86 downto 0);
    signal p_Val2_2_ph_reg_819 : STD_LOGIC_VECTOR (86 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_103 : BOOLEAN;
    signal p_Result_12_fu_339_p4 : STD_LOGIC_VECTOR (86 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_112 : BOOLEAN;
    signal k_fu_354_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_reg_832 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_121 : BOOLEAN;
    signal y_s_V_fu_364_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal y_s_V_reg_837 : STD_LOGIC_VECTOR (86 downto 0);
    signal exitcond_i_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_s_V_fu_370_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal x_s_V_reg_843 : STD_LOGIC_VECTOR (86 downto 0);
    signal tmp_10_fu_387_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal tmp_10_reg_857 : STD_LOGIC_VECTOR (86 downto 0);
    signal tmp_8_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_393_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_862 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_146 : BOOLEAN;
    signal tx_V_fu_413_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal tx_V_reg_867 : STD_LOGIC_VECTOR (86 downto 0);
    signal ty_V_fu_431_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal ty_V_reg_872 : STD_LOGIC_VECTOR (86 downto 0);
    signal p_Val2_11_fu_459_p2 : STD_LOGIC_VECTOR (84 downto 0);
    signal p_Val2_11_reg_877 : STD_LOGIC_VECTOR (84 downto 0);
    signal tz_V_fu_485_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_161 : BOOLEAN;
    signal isneg_fu_491_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_reg_887 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_170 : BOOLEAN;
    signal tmp_16_s_fu_499_p3 : STD_LOGIC_VECTOR (86 downto 0);
    signal tmp_16_s_reg_893 : STD_LOGIC_VECTOR (86 downto 0);
    signal tmp_30_fu_528_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_reg_898 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_904 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_568_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_reg_909 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_fu_582_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_914 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_187 : BOOLEAN;
    signal tmp_32_fu_588_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_32_reg_923 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_reg_928 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_reg_933 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_200 : BOOLEAN;
    signal tmp_34_fu_627_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_34_reg_940 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_35_fu_631_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_35_reg_947 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_38_fu_635_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_38_reg_953 : STD_LOGIC_VECTOR (6 downto 0);
    signal dp_fu_775_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_217 : BOOLEAN;
    signal grp_fu_192_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_reg_963 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st41_fsm_40 : STD_LOGIC;
    signal ap_sig_226 : BOOLEAN;
    signal p_Val2_3_reg_136 : STD_LOGIC_VECTOR (86 downto 0);
    signal p_Val2_2_reg_148 : STD_LOGIC_VECTOR (86 downto 0);
    signal p_Val2_5_reg_158 : STD_LOGIC_VECTOR (86 downto 0);
    signal sh_assign_1_reg_168 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_s_phi_fu_183_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_s_reg_179 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st42_fsm_41 : STD_LOGIC;
    signal ap_sig_245 : BOOLEAN;
    signal tmp_13_fu_376_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_262 : BOOLEAN;
    signal p_Val2_1_fu_196_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_4_fu_214_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal loc_V_2_fu_218_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal rhs_V_fu_232_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal loc_V_fu_200_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_fu_236_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_fu_242_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_1_fu_252_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_272_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_assign_1_cast_fu_295_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_286_p4 : STD_LOGIC_VECTOR (86 downto 0);
    signal tmp_2_fu_298_p1 : STD_LOGIC_VECTOR (86 downto 0);
    signal tmp_7_fu_308_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal sel_tmp2_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_302_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal sel_tmp_fu_314_p3 : STD_LOGIC_VECTOR (86 downto 0);
    signal tmp_4_fu_360_p1 : STD_LOGIC_VECTOR (86 downto 0);
    signal p_Val2_i_fu_401_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal p_Val2_6_fu_406_p3 : STD_LOGIC_VECTOR (86 downto 0);
    signal p_Val2_i1_fu_419_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal p_Val2_7_fu_424_p3 : STD_LOGIC_VECTOR (86 downto 0);
    signal tmp_19_fu_447_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_cast_fu_455_p1 : STD_LOGIC_VECTOR (84 downto 0);
    signal p_Val2_8_cast_fu_437_p4 : STD_LOGIC_VECTOR (84 downto 0);
    signal p_Val2_12_cast_fu_465_p1 : STD_LOGIC_VECTOR (85 downto 0);
    signal p_Val2_i2_fu_468_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal p_Val2_s_fu_474_p3 : STD_LOGIC_VECTOR (85 downto 0);
    signal p_Val2_cast_fu_481_p1 : STD_LOGIC_VECTOR (86 downto 0);
    signal tmp_11_fu_506_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_7_fu_516_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_520_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_5_fu_538_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_13_fu_548_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_560_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal NZeros_fu_572_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal NZeros_i_1_i_fu_576_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_603_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_608_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_616_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_9_trunc_fu_644_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_V_fu_641_p1 : STD_LOGIC_VECTOR (87 downto 0);
    signal tmp_37_fu_668_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_39_fu_672_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_36_fu_658_p4 : STD_LOGIC_VECTOR (87 downto 0);
    signal tmp_40_fu_676_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_42_fu_690_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_43_fu_695_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_41_fu_683_p3 : STD_LOGIC_VECTOR (87 downto 0);
    signal tmp_44_fu_701_p1 : STD_LOGIC_VECTOR (87 downto 0);
    signal tmp_45_fu_705_p1 : STD_LOGIC_VECTOR (87 downto 0);
    signal tmp_46_fu_709_p2 : STD_LOGIC_VECTOR (87 downto 0);
    signal tmp_47_fu_715_p2 : STD_LOGIC_VECTOR (87 downto 0);
    signal p_Result_10_fu_721_p2 : STD_LOGIC_VECTOR (87 downto 0);
    signal tmp_23_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_736_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_741_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal man_V_fu_727_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_26_fu_749_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal man_V_2_fu_753_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_14_fu_649_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_15_fu_759_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal res_V_fu_768_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (41 downto 0);

    component moments_ddiv_64ns_64ns_64_31 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component moments_atan2_range_redux_cordic_hls_cordic_ctab_table_128_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (125 downto 0) );
    end component;



begin
    hls_cordic_ctab_table_128_V_U : component moments_atan2_range_redux_cordic_hls_cordic_ctab_table_128_V
    generic map (
        DataWidth => 126,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_cordic_ctab_table_128_V_address0,
        ce0 => hls_cordic_ctab_table_128_V_ce0,
        q0 => hls_cordic_ctab_table_128_V_q0);

    moments_ddiv_64ns_64ns_64_31_U27 : component moments_ddiv_64ns_64ns_64_31
    generic map (
        ID => 1,
        NUM_STAGE => 31,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => y_in,
        din1 => x_in,
        ce => ap_const_logic_1,
        dout => grp_fu_192_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv64_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st42_fsm_41)) then 
                    ap_return_preg <= p_s_phi_fu_183_p6;
                end if; 
            end if;
        end if;
    end process;


    p_Val2_2_reg_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                p_Val2_2_reg_148 <= p_Val2_2_ph_reg_819;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                p_Val2_2_reg_148 <= ty_V_reg_872;
            end if; 
        end if;
    end process;

    p_Val2_3_reg_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                p_Val2_3_reg_136 <= ap_const_lv87_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                p_Val2_3_reg_136 <= tz_V_fu_485_p2;
            end if; 
        end if;
    end process;

    p_Val2_5_reg_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                p_Val2_5_reg_158 <= p_Result_12_fu_339_p4;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                p_Val2_5_reg_158 <= tx_V_reg_867;
            end if; 
        end if;
    end process;

    p_s_reg_179_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond_i_fu_348_p2)) and not((ap_const_lv1_0 = tmp_8_fu_381_p2)))) then 
                p_s_reg_179 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                p_s_reg_179 <= dp_fu_775_p1;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st42_fsm_41) and not((tmp_5_reg_799 = ap_const_lv1_0)))) then 
                p_s_reg_179 <= tmp_6_reg_963;
            end if; 
        end if;
    end process;

    sh_assign_1_reg_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                sh_assign_1_reg_168 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                sh_assign_1_reg_168 <= k_reg_832;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)) and (tmp_5_fu_246_p2 = ap_const_lv1_0))) then
                isNeg_reg_809 <= r_V_1_fu_252_p2(11 downto 11);
                sh_assign_reg_814 <= sh_assign_fu_278_p3;
                tmp_s_reg_803 <= tmp_s_fu_258_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then
                isneg_reg_887 <= p_Val2_3_reg_136(86 downto 86);
                tmp_15_reg_904 <= tmp_15_fu_532_p2;
                tmp_16_s_reg_893 <= tmp_16_s_fu_499_p3;
                tmp_30_reg_898 <= tmp_30_fu_528_p1;
                tmp_31_reg_909 <= tmp_31_fu_568_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                j_reg_914 <= j_fu_582_p2;
                tmp_17_reg_928 <= tmp_17_fu_592_p2;
                tmp_32_reg_923 <= tmp_32_fu_588_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                k_reg_832 <= k_fu_354_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                loc_V_1_reg_789 <= loc_V_1_fu_210_p1;
                loc_V_3_reg_794 <= loc_V_3_fu_228_p1;
                tmp_5_reg_799 <= tmp_5_fu_246_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                p_Val2_11_reg_877 <= p_Val2_11_fu_459_p2;
                tmp_reg_862 <= p_Val2_2_reg_148(86 downto 86);
                tx_V_reg_867 <= tx_V_fu_413_p2;
                ty_V_reg_872 <= ty_V_fu_431_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                p_Val2_2_ph_reg_819 <= p_Val2_2_ph_fu_331_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond_i_fu_348_p2)) and (ap_const_lv1_0 = tmp_8_fu_381_p2))) then
                tmp_10_reg_857 <= tmp_10_fu_387_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and (ap_const_lv1_0 = tmp_17_reg_928))) then
                tmp_33_reg_933 <= tmp_33_fu_621_p2;
                tmp_34_reg_940 <= tmp_34_fu_627_p1;
                tmp_35_reg_947 <= tmp_35_fu_631_p1;
                tmp_38_reg_953 <= tmp_38_fu_635_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40)) then
                tmp_6_reg_963 <= grp_fu_192_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond_i_fu_348_p2))) then
                x_s_V_reg_843 <= x_s_V_fu_370_p2;
                y_s_V_reg_837 <= y_s_V_fu_364_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_5_fu_246_p2, exitcond_i_fu_348_p2, tmp_8_fu_381_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if ((not((ap_start = ap_const_logic_0)) and not((tmp_5_fu_246_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                elsif ((not((ap_start = ap_const_logic_0)) and (tmp_5_fu_246_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                if ((not((ap_const_lv1_0 = exitcond_i_fu_348_p2)) and not((ap_const_lv1_0 = tmp_8_fu_381_p2)))) then
                    ap_NS_fsm <= ap_ST_st42_fsm_41;
                elsif ((not((ap_const_lv1_0 = exitcond_i_fu_348_p2)) and (ap_const_lv1_0 = tmp_8_fu_381_p2))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st42_fsm_41;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st24_fsm_23;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st26_fsm_25 => 
                ap_NS_fsm <= ap_ST_st27_fsm_26;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st28_fsm_27;
            when ap_ST_st28_fsm_27 => 
                ap_NS_fsm <= ap_ST_st29_fsm_28;
            when ap_ST_st29_fsm_28 => 
                ap_NS_fsm <= ap_ST_st30_fsm_29;
            when ap_ST_st30_fsm_29 => 
                ap_NS_fsm <= ap_ST_st31_fsm_30;
            when ap_ST_st31_fsm_30 => 
                ap_NS_fsm <= ap_ST_st32_fsm_31;
            when ap_ST_st32_fsm_31 => 
                ap_NS_fsm <= ap_ST_st33_fsm_32;
            when ap_ST_st33_fsm_32 => 
                ap_NS_fsm <= ap_ST_st34_fsm_33;
            when ap_ST_st34_fsm_33 => 
                ap_NS_fsm <= ap_ST_st35_fsm_34;
            when ap_ST_st35_fsm_34 => 
                ap_NS_fsm <= ap_ST_st36_fsm_35;
            when ap_ST_st36_fsm_35 => 
                ap_NS_fsm <= ap_ST_st37_fsm_36;
            when ap_ST_st37_fsm_36 => 
                ap_NS_fsm <= ap_ST_st38_fsm_37;
            when ap_ST_st38_fsm_37 => 
                ap_NS_fsm <= ap_ST_st39_fsm_38;
            when ap_ST_st39_fsm_38 => 
                ap_NS_fsm <= ap_ST_st40_fsm_39;
            when ap_ST_st40_fsm_39 => 
                ap_NS_fsm <= ap_ST_st41_fsm_40;
            when ap_ST_st41_fsm_40 => 
                ap_NS_fsm <= ap_ST_st42_fsm_41;
            when ap_ST_st42_fsm_41 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    NZeros_fu_572_p2 <= std_logic_vector(unsigned(tmp_30_reg_898) + unsigned(tmp_31_reg_909));
    NZeros_i_1_i_fu_576_p3 <= 
        NZeros_fu_572_p2 when (tmp_15_reg_904(0) = '1') else 
        tmp_30_reg_898;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st42_fsm_41)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or (ap_const_logic_1 = ap_sig_cseq_ST_st42_fsm_41))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st42_fsm_41)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st42_fsm_41)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(p_s_phi_fu_183_p6, ap_sig_cseq_ST_st42_fsm_41, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st42_fsm_41)) then 
            ap_return <= p_s_phi_fu_183_p6;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;


    ap_sig_103_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_103 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_112_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_112 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_121_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_121 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_146_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_146 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_161_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_161 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_170_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_170 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_187_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_187 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_200_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_200 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_217_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_217 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_226_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_226 <= (ap_const_lv1_1 = ap_CS_fsm(40 downto 40));
    end process;


    ap_sig_245_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_245 <= (ap_const_lv1_1 = ap_CS_fsm(41 downto 41));
    end process;


    ap_sig_262_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_262 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_59_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_59 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_217)
    begin
        if (ap_sig_217) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_262)
    begin
        if (ap_sig_262) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_59)
    begin
        if (ap_sig_59) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_103)
    begin
        if (ap_sig_103) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_112)
    begin
        if (ap_sig_112) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st41_fsm_40_assign_proc : process(ap_sig_226)
    begin
        if (ap_sig_226) then 
            ap_sig_cseq_ST_st41_fsm_40 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st41_fsm_40 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st42_fsm_41_assign_proc : process(ap_sig_245)
    begin
        if (ap_sig_245) then 
            ap_sig_cseq_ST_st42_fsm_41 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st42_fsm_41 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_121)
    begin
        if (ap_sig_121) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_146)
    begin
        if (ap_sig_146) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_161)
    begin
        if (ap_sig_161) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_170)
    begin
        if (ap_sig_170) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_187)
    begin
        if (ap_sig_187) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_200)
    begin
        if (ap_sig_200) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    dp_fu_775_p1 <= res_V_fu_768_p3;
    exitcond_i_fu_348_p2 <= "1" when (sh_assign_1_reg_168 = ap_const_lv7_57) else "0";
    hls_cordic_ctab_table_128_V_address0 <= tmp_13_fu_376_p1(7 - 1 downto 0);

    hls_cordic_ctab_table_128_V_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            hls_cordic_ctab_table_128_V_ce0 <= ap_const_logic_1;
        else 
            hls_cordic_ctab_table_128_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    isNeg_fu_264_p3 <= r_V_1_fu_252_p2(11 downto 11);
    isneg_fu_491_p3 <= p_Val2_3_reg_136(86 downto 86);
    j_fu_582_p2 <= std_logic_vector(unsigned(ap_const_lv32_57) - unsigned(NZeros_i_1_i_fu_576_p3));
    k_fu_354_p2 <= std_logic_vector(unsigned(sh_assign_1_reg_168) + unsigned(ap_const_lv7_1));
    lhs_V_fu_242_p1 <= std_logic_vector(resize(unsigned(loc_V_fu_200_p4),12));
    loc_V_1_fu_210_p1 <= p_Val2_1_fu_196_p1(52 - 1 downto 0);
    loc_V_2_fu_218_p4 <= p_Val2_4_fu_214_p1(62 downto 52);
    loc_V_3_fu_228_p1 <= p_Val2_4_fu_214_p1(52 - 1 downto 0);
    loc_V_fu_200_p4 <= p_Val2_1_fu_196_p1(62 downto 52);
    man_V_2_fu_753_p2 <= std_logic_vector(shift_left(unsigned(man_V_fu_727_p1),to_integer(unsigned('0' & tmp_26_fu_749_p1(31-1 downto 0)))));
    man_V_fu_727_p1 <= p_Result_10_fu_721_p2(52 - 1 downto 0);
    p_Repl2_9_trunc_fu_644_p2 <= std_logic_vector(signed(ap_const_lv11_401) - signed(tmp_32_reg_923));
    p_Result_10_fu_721_p2 <= (tmp_46_fu_709_p2 and tmp_47_fu_715_p2);
    p_Result_12_fu_339_p4 <= ((ap_const_lv5_1 & loc_V_1_reg_789) & ap_const_lv30_0);
    
    p_Result_13_fu_548_p5_proc : process(p_Result_5_fu_538_p4)
    begin
        for i in 64 - 1 downto 0 loop
            if (i > 63 or i < 40) then
                p_Result_13_fu_548_p5(i) <= ap_const_lv64_FFFFFFFFFFFFFFFF(i);
            elsif (63 - i >= 24) then
                p_Result_13_fu_548_p5(i) <= '0';
            else
                p_Result_13_fu_548_p5(i) <= p_Result_5_fu_538_p4(63 - i);
            end if;
        end loop;
    end process;

    p_Result_14_fu_649_p4 <= ((isneg_reg_887 & p_Repl2_9_trunc_fu_644_p2) & ap_const_lv52_0);
    p_Result_15_fu_759_p4 <= ((isneg_reg_887 & p_Repl2_9_trunc_fu_644_p2) & man_V_2_fu_753_p2);
    
    p_Result_5_fu_538_p4_proc : process(tmp_16_s_fu_499_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(87+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(87+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(87 - 1 downto 0);
    variable p_Result_5_fu_538_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(87 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(87 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(87 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_17(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := tmp_16_s_fu_499_p3;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(87-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(87-1-unsigned(ap_const_lv32_17(7-1 downto 0)));
            for p_Result_5_fu_538_p4_i in 0 to 87-1 loop
                v0_cpy(p_Result_5_fu_538_p4_i) := tmp_16_s_fu_499_p3(87-1-p_Result_5_fu_538_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(87-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_5_fu_538_p4 <= resvalue(24-1 downto 0);
    end process;

        p_Result_7_fu_516_p1 <= std_logic_vector(resize(signed(tmp_11_fu_506_p4),64));

    p_Result_s_fu_286_p4 <= ((ap_const_lv5_1 & loc_V_3_reg_794) & ap_const_lv30_0);
    p_Val2_11_fu_459_p2 <= std_logic_vector(unsigned(tmp_25_cast_fu_455_p1) + unsigned(p_Val2_8_cast_fu_437_p4));
    p_Val2_12_cast_fu_465_p1 <= std_logic_vector(resize(unsigned(p_Val2_11_reg_877),86));
    p_Val2_1_fu_196_p1 <= x_in;
    p_Val2_2_ph_fu_331_p3 <= 
        tmp_3_fu_302_p2 when (sel_tmp3_fu_326_p2(0) = '1') else 
        sel_tmp_fu_314_p3;
    p_Val2_4_fu_214_p1 <= y_in;
    p_Val2_6_fu_406_p3 <= 
        p_Val2_i_fu_401_p2 when (tmp_fu_393_p3(0) = '1') else 
        y_s_V_reg_837;
    p_Val2_7_fu_424_p3 <= 
        x_s_V_reg_843 when (tmp_fu_393_p3(0) = '1') else 
        p_Val2_i1_fu_419_p2;
    p_Val2_8_cast_fu_437_p4 <= hls_cordic_ctab_table_128_V_q0(125 downto 41);
        p_Val2_cast_fu_481_p1 <= std_logic_vector(resize(signed(p_Val2_s_fu_474_p3),87));

    p_Val2_i1_fu_419_p2 <= std_logic_vector(unsigned(ap_const_lv87_0) - unsigned(x_s_V_reg_843));
    p_Val2_i2_fu_468_p2 <= std_logic_vector(unsigned(ap_const_lv86_0) - unsigned(p_Val2_12_cast_fu_465_p1));
    p_Val2_i_fu_401_p2 <= std_logic_vector(unsigned(ap_const_lv87_0) - unsigned(y_s_V_reg_837));
    p_Val2_s_fu_474_p3 <= 
        p_Val2_i2_fu_468_p2 when (tmp_reg_862(0) = '1') else 
        p_Val2_12_cast_fu_465_p1;

    p_s_phi_fu_183_p6_assign_proc : process(tmp_5_reg_799, tmp_6_reg_963, p_s_reg_179, ap_sig_cseq_ST_st42_fsm_41)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st42_fsm_41) and not((tmp_5_reg_799 = ap_const_lv1_0)))) then 
            p_s_phi_fu_183_p6 <= tmp_6_reg_963;
        else 
            p_s_phi_fu_183_p6 <= p_s_reg_179;
        end if; 
    end process;

    r_V_1_fu_252_p2 <= std_logic_vector(unsigned(lhs_V_fu_242_p1) - unsigned(rhs_V_fu_232_p1));
    r_V_fu_236_p2 <= std_logic_vector(unsigned(ap_const_lv12_1A) + unsigned(rhs_V_fu_232_p1));
    res_V_fu_768_p3 <= 
        p_Result_14_fu_649_p4 when (tmp_17_reg_928(0) = '1') else 
        p_Result_15_fu_759_p4;
    rhs_V_fu_232_p1 <= std_logic_vector(resize(unsigned(loc_V_2_fu_218_p4),12));
    sel_tmp2_fu_321_p2 <= (tmp_s_reg_803 xor ap_const_lv1_1);
    sel_tmp3_fu_326_p2 <= (isNeg_reg_809 and sel_tmp2_fu_321_p2);
    sel_tmp_fu_314_p3 <= 
        p_Result_s_fu_286_p4 when (tmp_s_reg_803(0) = '1') else 
        tmp_7_fu_308_p2;
        sh_assign_1_cast_fu_295_p1 <= std_logic_vector(resize(signed(sh_assign_reg_814),32));

    sh_assign_fu_278_p3 <= 
        tmp_1_fu_272_p2 when (isNeg_fu_264_p3(0) = '1') else 
        r_V_1_fu_252_p2;
    tmp_10_fu_387_p2 <= std_logic_vector(unsigned(ap_const_lv87_0) - unsigned(p_Val2_3_reg_136));
    tmp_11_fu_506_p4 <= tmp_16_s_fu_499_p3(86 downto 24);
    tmp_13_fu_376_p1 <= std_logic_vector(resize(unsigned(sh_assign_1_reg_168),64));
    
    tmp_14_fu_520_p3_proc : process(p_Result_7_fu_516_p1)
    begin
        tmp_14_fu_520_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 64 - 1 downto 0 loop
            if p_Result_7_fu_516_p1(i) = '1' then
                tmp_14_fu_520_p3 <= std_logic_vector(to_unsigned(64-1-i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_15_fu_532_p2 <= "1" when (tmp_11_fu_506_p4 = ap_const_lv63_0) else "0";
    
    tmp_16_fu_560_p3_proc : process(p_Result_13_fu_548_p5)
    begin
        tmp_16_fu_560_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 64 - 1 downto 0 loop
            if p_Result_13_fu_548_p5(i) = '1' then
                tmp_16_fu_560_p3 <= std_logic_vector(to_unsigned(64-1-i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_16_s_fu_499_p3 <= 
        tmp_10_reg_857 when (isneg_fu_491_p3(0) = '1') else 
        p_Val2_3_reg_136;
    tmp_17_fu_592_p2 <= "1" when (NZeros_i_1_i_fu_576_p3 = ap_const_lv32_57) else "0";
    tmp_18_fu_598_p2 <= "1" when (signed(j_reg_914) > signed(ap_const_lv32_34)) else "0";
    tmp_19_fu_447_p3 <= hls_cordic_ctab_table_128_V_q0(40 downto 40);
    tmp_1_fu_272_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(r_V_1_fu_252_p2));
    tmp_20_fu_603_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCC) + signed(j_reg_914));
    tmp_21_fu_608_p3 <= 
        tmp_20_fu_603_p2 when (tmp_18_fu_598_p2(0) = '1') else 
        ap_const_lv32_0;
    tmp_22_fu_616_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(j_reg_914));
    tmp_23_fu_731_p2 <= "1" when (signed(j_reg_914) < signed(ap_const_lv32_34)) else "0";
    tmp_24_fu_736_p2 <= std_logic_vector(unsigned(ap_const_lv32_34) - unsigned(j_reg_914));
    tmp_25_cast_fu_455_p1 <= std_logic_vector(resize(unsigned(tmp_19_fu_447_p3),85));
    tmp_25_fu_741_p3 <= 
        tmp_24_fu_736_p2 when (tmp_23_fu_731_p2(0) = '1') else 
        ap_const_lv32_0;
    tmp_26_fu_749_p1 <= std_logic_vector(resize(unsigned(tmp_25_fu_741_p3),52));
    tmp_2_fu_298_p1 <= std_logic_vector(resize(unsigned(sh_assign_1_cast_fu_295_p1),87));
    tmp_30_fu_528_p1 <= tmp_14_fu_520_p3(32 - 1 downto 0);
    tmp_31_fu_568_p1 <= tmp_16_fu_560_p3(32 - 1 downto 0);
    tmp_32_fu_588_p1 <= NZeros_i_1_i_fu_576_p3(11 - 1 downto 0);
    tmp_33_fu_621_p2 <= "1" when (unsigned(tmp_21_fu_608_p3) > unsigned(tmp_22_fu_616_p2)) else "0";
    tmp_34_fu_627_p1 <= tmp_21_fu_608_p3(7 - 1 downto 0);
    tmp_35_fu_631_p1 <= tmp_22_fu_616_p2(7 - 1 downto 0);
    
    tmp_36_fu_658_p4_proc : process(tmp_V_fu_641_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(88+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(88+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(88 - 1 downto 0);
    variable tmp_36_fu_658_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(88 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(88 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(88 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_57(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := tmp_V_fu_641_p1;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(88-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(88-1-unsigned(ap_const_lv32_57(7-1 downto 0)));
            for tmp_36_fu_658_p4_i in 0 to 88-1 loop
                v0_cpy(tmp_36_fu_658_p4_i) := tmp_V_fu_641_p1(88-1-tmp_36_fu_658_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(88-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_36_fu_658_p4 <= resvalue(88-1 downto 0);
    end process;

    tmp_37_fu_668_p2 <= std_logic_vector(unsigned(tmp_34_reg_940) - unsigned(tmp_35_reg_947));
    tmp_38_fu_635_p2 <= std_logic_vector(signed(ap_const_lv7_57) - signed(tmp_34_fu_627_p1));
    tmp_39_fu_672_p2 <= std_logic_vector(unsigned(tmp_35_reg_947) - unsigned(tmp_34_reg_940));
    tmp_3_fu_302_p2 <= std_logic_vector(shift_left(unsigned(p_Result_s_fu_286_p4),to_integer(unsigned('0' & tmp_2_fu_298_p1(31-1 downto 0)))));
    tmp_40_fu_676_p3 <= 
        tmp_37_fu_668_p2 when (tmp_33_reg_933(0) = '1') else 
        tmp_39_fu_672_p2;
    tmp_41_fu_683_p3 <= 
        tmp_36_fu_658_p4 when (tmp_33_reg_933(0) = '1') else 
        tmp_V_fu_641_p1;
    tmp_42_fu_690_p3 <= 
        tmp_38_reg_953 when (tmp_33_reg_933(0) = '1') else 
        tmp_34_reg_940;
    tmp_43_fu_695_p2 <= std_logic_vector(signed(ap_const_lv7_57) - signed(tmp_40_fu_676_p3));
    tmp_44_fu_701_p1 <= std_logic_vector(resize(unsigned(tmp_42_fu_690_p3),88));
    tmp_45_fu_705_p1 <= std_logic_vector(resize(unsigned(tmp_43_fu_695_p2),88));
    tmp_46_fu_709_p2 <= std_logic_vector(shift_right(unsigned(tmp_41_fu_683_p3),to_integer(unsigned('0' & tmp_44_fu_701_p1(31-1 downto 0)))));
    tmp_47_fu_715_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv88_FFFFFFFFFFFFFFFFFFFFFF),to_integer(unsigned('0' & tmp_45_fu_705_p1(31-1 downto 0)))));
    tmp_4_fu_360_p1 <= std_logic_vector(resize(unsigned(sh_assign_1_reg_168),87));
    tmp_5_fu_246_p2 <= "1" when (unsigned(r_V_fu_236_p2) < unsigned(lhs_V_fu_242_p1)) else "0";
    tmp_7_fu_308_p2 <= std_logic_vector(shift_right(signed(p_Result_s_fu_286_p4),to_integer(unsigned('0' & tmp_2_fu_298_p1(31-1 downto 0)))));
    tmp_8_fu_381_p2 <= "1" when (p_Val2_3_reg_136 = ap_const_lv87_0) else "0";
        tmp_V_fu_641_p1 <= std_logic_vector(resize(signed(tmp_16_s_reg_893),88));

    tmp_fu_393_p3 <= p_Val2_2_reg_148(86 downto 86);
    tmp_s_fu_258_p2 <= "1" when (loc_V_fu_200_p4 = loc_V_2_fu_218_p4) else "0";
    tx_V_fu_413_p2 <= std_logic_vector(unsigned(p_Val2_5_reg_158) + unsigned(p_Val2_6_fu_406_p3));
    ty_V_fu_431_p2 <= std_logic_vector(unsigned(p_Val2_2_reg_148) + unsigned(p_Val2_7_fu_424_p3));
    tz_V_fu_485_p2 <= std_logic_vector(unsigned(p_Val2_3_reg_136) + unsigned(p_Val2_cast_fu_481_p1));
    x_s_V_fu_370_p2 <= std_logic_vector(shift_right(signed(p_Val2_5_reg_158),to_integer(unsigned('0' & tmp_4_fu_360_p1(31-1 downto 0)))));
    y_s_V_fu_364_p2 <= std_logic_vector(shift_right(signed(p_Val2_2_reg_148),to_integer(unsigned('0' & tmp_4_fu_360_p1(31-1 downto 0)))));
end behav;
