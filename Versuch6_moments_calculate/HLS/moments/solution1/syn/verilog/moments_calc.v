// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module moments_calc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_in_data_stream_0_V_dout,
        img_in_data_stream_0_V_empty_n,
        img_in_data_stream_0_V_read,
        img_in_data_stream_1_V_dout,
        img_in_data_stream_1_V_empty_n,
        img_in_data_stream_1_V_read,
        img_in_data_stream_2_V_dout,
        img_in_data_stream_2_V_empty_n,
        img_in_data_stream_2_V_read,
        img_out_data_stream_0_V_din,
        img_out_data_stream_0_V_full_n,
        img_out_data_stream_0_V_write,
        img_out_data_stream_1_V_din,
        img_out_data_stream_1_V_full_n,
        img_out_data_stream_1_V_write,
        img_out_data_stream_2_V_din,
        img_out_data_stream_2_V_full_n,
        img_out_data_stream_2_V_write,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3
);

parameter    ap_ST_st1_fsm_0 = 60'b1;
parameter    ap_ST_st2_fsm_1 = 60'b10;
parameter    ap_ST_st3_fsm_2 = 60'b100;
parameter    ap_ST_st4_fsm_3 = 60'b1000;
parameter    ap_ST_st5_fsm_4 = 60'b10000;
parameter    ap_ST_st6_fsm_5 = 60'b100000;
parameter    ap_ST_st7_fsm_6 = 60'b1000000;
parameter    ap_ST_st8_fsm_7 = 60'b10000000;
parameter    ap_ST_st9_fsm_8 = 60'b100000000;
parameter    ap_ST_st10_fsm_9 = 60'b1000000000;
parameter    ap_ST_st11_fsm_10 = 60'b10000000000;
parameter    ap_ST_st12_fsm_11 = 60'b100000000000;
parameter    ap_ST_st13_fsm_12 = 60'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 60'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 60'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 60'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 60'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 60'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 60'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 60'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 60'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 60'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 60'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 60'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 60'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 60'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 60'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 60'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 60'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 60'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 60'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 60'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 60'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 60'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 60'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 60'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 60'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 60'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 60'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 60'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 60'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 60'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 60'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 60'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 60'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 60'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 60'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 60'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 60'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 60'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 60'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 60'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 60'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 60'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 60'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 60'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 60'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 60'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 60'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 60'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv21_0 = 21'b000000000000000000000;
parameter    ap_const_lv42_0 = 42'b000000000000000000000000000000000000000000;
parameter    ap_const_lv11_438 = 11'b10000111000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv11_780 = 11'b11110000000;
parameter    ap_const_lv8_80 = 8'b10000000;
parameter    ap_const_lv21_1 = 21'b1;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv86_0 = 86'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv45_0 = 45'b000000000000000000000000000000000000000000000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] img_in_data_stream_0_V_dout;
input   img_in_data_stream_0_V_empty_n;
output   img_in_data_stream_0_V_read;
input  [7:0] img_in_data_stream_1_V_dout;
input   img_in_data_stream_1_V_empty_n;
output   img_in_data_stream_1_V_read;
input  [7:0] img_in_data_stream_2_V_dout;
input   img_in_data_stream_2_V_empty_n;
output   img_in_data_stream_2_V_read;
output  [7:0] img_out_data_stream_0_V_din;
input   img_out_data_stream_0_V_full_n;
output   img_out_data_stream_0_V_write;
output  [7:0] img_out_data_stream_1_V_din;
input   img_out_data_stream_1_V_full_n;
output   img_out_data_stream_1_V_write;
output  [7:0] img_out_data_stream_2_V_din;
input   img_out_data_stream_2_V_full_n;
output   img_out_data_stream_2_V_write;
output  [20:0] ap_return_0;
output  [20:0] ap_return_1;
output  [85:0] ap_return_2;
output  [44:0] ap_return_3;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_in_data_stream_0_V_read;
reg img_in_data_stream_1_V_read;
reg img_in_data_stream_2_V_read;
reg img_out_data_stream_0_V_write;
reg img_out_data_stream_1_V_write;
reg img_out_data_stream_2_V_write;
reg[20:0] ap_return_0;
reg[20:0] ap_return_1;
reg[85:0] ap_return_2;
reg[44:0] ap_return_3;

(* fsm_encoding = "none" *) reg   [59:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_77;
reg    img_in_data_stream_0_V_blk_n;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_117;
wire   [0:0] exitcond_fu_278_p2;
reg    img_in_data_stream_1_V_blk_n;
reg    img_in_data_stream_2_V_blk_n;
reg    img_out_data_stream_0_V_blk_n;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_131;
reg    img_out_data_stream_1_V_blk_n;
reg    img_out_data_stream_2_V_blk_n;
wire   [31:0] op2_assign_1_cast_fu_221_p1;
reg   [31:0] op2_assign_1_cast_reg_625;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_142;
wire   [20:0] op2_assign_1_cast1_cast_fu_229_p1;
reg   [20:0] op2_assign_1_cast1_cast_reg_630;
wire   [10:0] row_fu_239_p2;
reg   [10:0] row_reg_638;
wire   [41:0] tmp_3_fu_245_p1;
reg   [41:0] tmp_3_reg_643;
wire   [0:0] exitcond5_fu_233_p2;
wire   [41:0] tmp_1_fu_248_p1;
wire   [21:0] op2_assign_cast_fu_270_p1;
reg   [21:0] op2_assign_cast_reg_675;
reg    ap_sig_175;
wire   [31:0] op2_assign_cast1_fu_274_p1;
reg   [31:0] op2_assign_cast1_reg_681;
wire   [10:0] col_fu_284_p2;
reg   [10:0] col_reg_689;
wire   [20:0] next_mul_fu_308_p2;
reg   [20:0] next_mul_reg_694;
wire   [0:0] sel_tmp_fu_319_p2;
reg   [0:0] sel_tmp_reg_699;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_194;
wire   [31:0] tmp_fu_437_p1;
wire   [20:0] tmp_4_fu_452_p1;
reg   [20:0] tmp_4_reg_726;
reg    ap_sig_cseq_ST_st45_fsm_44;
reg    ap_sig_207;
wire   [20:0] tmp_5_fu_456_p1;
reg   [20:0] tmp_5_reg_732;
wire   [41:0] lhs_V_7_fu_460_p1;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_218;
wire   [41:0] rhs_V_7_fu_463_p1;
wire   [41:0] grp_fu_466_p2;
reg   [41:0] r_V_13_reg_752;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_229;
wire   [41:0] grp_fu_472_p2;
reg   [41:0] r_V_14_reg_757;
wire   [41:0] grp_fu_478_p2;
reg   [41:0] r_V_15_reg_762;
wire   [42:0] r_V_16_fu_491_p2;
reg   [42:0] r_V_16_reg_767;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_242;
wire   [42:0] r_V_17_fu_504_p2;
reg   [42:0] r_V_17_reg_772;
wire   [42:0] r_V_18_fu_517_p2;
reg   [42:0] r_V_18_reg_777;
wire   [85:0] lhs_V_8_fu_523_p1;
reg    ap_sig_cseq_ST_st50_fsm_49;
reg    ap_sig_255;
wire   [43:0] r_V_12_fu_538_p2;
reg   [43:0] r_V_12_reg_788;
reg   [10:0] op2_assign_1_reg_139;
reg   [10:0] op2_assign_reg_150;
reg    ap_sig_274;
reg   [20:0] phi_mul_reg_161;
wire   [7:0] tmp_6_fu_356_p3;
reg   [41:0] m20_V_2_fu_76;
wire   [41:0] m20_V_1_fu_400_p3;
reg   [41:0] m02_V_2_fu_80;
wire   [41:0] m02_V_1_fu_394_p3;
reg   [41:0] m11_V_2_fu_84;
wire   [41:0] m11_V_1_fu_387_p3;
reg   [31:0] m10_V_2_fu_88;
wire   [31:0] m10_V_1_fu_380_p3;
reg   [31:0] m01_V_2_fu_92;
wire   [31:0] m01_V_1_fu_373_p3;
reg   [20:0] m00_V_2_fu_96;
wire   [20:0] m00_V_1_fu_366_p3;
wire   [21:0] op2_assign_4_fu_576_p2;
wire   [20:0] grp_fu_252_p1;
wire   [20:0] grp_fu_258_p1;
wire   [20:0] grp_fu_264_p1;
wire   [0:0] tmp_s_fu_302_p2;
wire   [0:0] tmp_8_fu_290_p2;
wire   [0:0] tmp5_fu_313_p2;
wire   [0:0] tmp_9_fu_296_p2;
wire   [41:0] tmp_10_fu_341_p1;
wire   [20:0] m00_V_fu_325_p2;
wire   [31:0] m01_V_fu_331_p2;
wire   [31:0] m10_V_fu_336_p2;
wire   [41:0] m11_V_fu_345_p2;
wire   [41:0] grp_fu_569_p3;
wire   [41:0] m20_V_fu_351_p2;
wire   [20:0] grp_fu_440_p1;
wire   [20:0] grp_fu_446_p1;
wire   [31:0] grp_fu_440_p2;
wire   [31:0] grp_fu_446_p2;
wire   [20:0] grp_fu_466_p0;
wire   [20:0] grp_fu_466_p1;
wire   [20:0] grp_fu_472_p0;
wire   [20:0] grp_fu_472_p1;
wire   [20:0] grp_fu_478_p0;
wire   [20:0] grp_fu_478_p1;
wire   [41:0] grp_fu_252_p2;
wire   [42:0] lhs_V_fu_484_p1;
wire   [42:0] rhs_V_fu_488_p1;
wire   [41:0] grp_fu_258_p2;
wire   [42:0] lhs_V_2_fu_497_p1;
wire   [42:0] rhs_V_2_fu_501_p1;
wire   [41:0] grp_fu_264_p2;
wire   [42:0] lhs_V_3_fu_510_p1;
wire   [42:0] rhs_V_3_fu_514_p1;
wire   [42:0] grp_fu_526_p0;
wire   [42:0] grp_fu_526_p1;
wire   [43:0] lhs_V_5_fu_532_p1;
wire   [43:0] rhs_V_5_fu_535_p1;
reg    ap_sig_cseq_ST_st60_fsm_59;
reg    ap_sig_460;
wire   [85:0] grp_fu_526_p2;
wire  signed [44:0] ssdm_int_V_write_assign_1_fu_544_p1;
wire   [10:0] grp_fu_569_p0;
wire   [10:0] grp_fu_569_p1;
wire   [10:0] op2_assign_4_fu_576_p0;
wire   [21:0] op2_assign_1_cast1_fu_225_p1;
wire   [10:0] op2_assign_4_fu_576_p1;
reg    grp_fu_252_ap_start;
wire    grp_fu_252_ap_done;
reg    grp_fu_258_ap_start;
wire    grp_fu_258_ap_done;
reg    grp_fu_264_ap_start;
wire    grp_fu_264_ap_done;
reg    grp_fu_440_ap_start;
wire    grp_fu_440_ap_done;
reg    grp_fu_446_ap_start;
wire    grp_fu_446_ap_done;
reg   [20:0] ap_return_0_preg;
reg   [20:0] ap_return_1_preg;
reg   [85:0] ap_return_2_preg;
reg   [44:0] ap_return_3_preg;
reg   [59:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 60'b1;
#0 ap_return_0_preg = 21'b000000000000000000000;
#0 ap_return_1_preg = 21'b000000000000000000000;
#0 ap_return_2_preg = 86'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 ap_return_3_preg = 45'b000000000000000000000000000000000000000000000;
end

moments_udiv_42ns_21ns_42_46_seq #(
    .ID( 1 ),
    .NUM_STAGE( 46 ),
    .din0_WIDTH( 42 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 42 ))
moments_udiv_42ns_21ns_42_46_seq_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_252_ap_start),
    .done(grp_fu_252_ap_done),
    .din0(m11_V_2_fu_84),
    .din1(grp_fu_252_p1),
    .ce(1'b1),
    .dout(grp_fu_252_p2)
);

moments_udiv_42ns_21ns_42_46_seq #(
    .ID( 1 ),
    .NUM_STAGE( 46 ),
    .din0_WIDTH( 42 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 42 ))
moments_udiv_42ns_21ns_42_46_seq_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_258_ap_start),
    .done(grp_fu_258_ap_done),
    .din0(m02_V_2_fu_80),
    .din1(grp_fu_258_p1),
    .ce(1'b1),
    .dout(grp_fu_258_p2)
);

moments_udiv_42ns_21ns_42_46_seq #(
    .ID( 1 ),
    .NUM_STAGE( 46 ),
    .din0_WIDTH( 42 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 42 ))
moments_udiv_42ns_21ns_42_46_seq_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_264_ap_start),
    .done(grp_fu_264_ap_done),
    .din0(m20_V_2_fu_76),
    .din1(grp_fu_264_p1),
    .ce(1'b1),
    .dout(grp_fu_264_p2)
);

moments_udiv_32ns_21ns_32_36_seq #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 32 ))
moments_udiv_32ns_21ns_32_36_seq_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_440_ap_start),
    .done(grp_fu_440_ap_done),
    .din0(m10_V_2_fu_88),
    .din1(grp_fu_440_p1),
    .ce(1'b1),
    .dout(grp_fu_440_p2)
);

moments_udiv_32ns_21ns_32_36_seq #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 32 ))
moments_udiv_32ns_21ns_32_36_seq_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_446_ap_start),
    .done(grp_fu_446_ap_done),
    .din0(m01_V_2_fu_92),
    .din1(grp_fu_446_p1),
    .ce(1'b1),
    .dout(grp_fu_446_p2)
);

moments_mul_21ns_21ns_42_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 42 ))
moments_mul_21ns_21ns_42_3_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_466_p0),
    .din1(grp_fu_466_p1),
    .ce(1'b1),
    .dout(grp_fu_466_p2)
);

moments_mul_21ns_21ns_42_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 42 ))
moments_mul_21ns_21ns_42_3_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_472_p0),
    .din1(grp_fu_472_p1),
    .ce(1'b1),
    .dout(grp_fu_472_p2)
);

moments_mul_21ns_21ns_42_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 42 ))
moments_mul_21ns_21ns_42_3_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_478_p0),
    .din1(grp_fu_478_p1),
    .ce(1'b1),
    .dout(grp_fu_478_p2)
);

moments_mul_43ns_43ns_86_11 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 43 ),
    .din1_WIDTH( 43 ),
    .dout_WIDTH( 86 ))
moments_mul_43ns_43ns_86_11_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_526_p0),
    .din1(grp_fu_526_p1),
    .ce(1'b1),
    .dout(grp_fu_526_p2)
);

moments_mac_muladd_11ns_11ns_42ns_42_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 42 ),
    .dout_WIDTH( 42 ))
moments_mac_muladd_11ns_11ns_42ns_42_1_U19(
    .din0(grp_fu_569_p0),
    .din1(grp_fu_569_p1),
    .din2(m02_V_2_fu_80),
    .dout(grp_fu_569_p3)
);

moments_mul_mul_11ns_11ns_22_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 22 ))
moments_mul_mul_11ns_11ns_22_1_U20(
    .din0(op2_assign_4_fu_576_p0),
    .din1(op2_assign_4_fu_576_p1),
    .dout(op2_assign_4_fu_576_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= ap_const_lv21_0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st60_fsm_59)) begin
            ap_return_0_preg <= tmp_4_reg_726;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= ap_const_lv21_0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st60_fsm_59)) begin
            ap_return_1_preg <= tmp_5_reg_732;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= ap_const_lv86_0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st60_fsm_59)) begin
            ap_return_2_preg <= grp_fu_526_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= ap_const_lv45_0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st60_fsm_59)) begin
            ap_return_3_preg <= ssdm_int_V_write_assign_1_fu_544_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_274)) begin
        m00_V_2_fu_96 <= m00_V_1_fu_366_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        m00_V_2_fu_96 <= ap_const_lv21_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_274)) begin
        m01_V_2_fu_92 <= m01_V_1_fu_373_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        m01_V_2_fu_92 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_274)) begin
        m02_V_2_fu_80 <= m02_V_1_fu_394_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        m02_V_2_fu_80 <= ap_const_lv42_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_274)) begin
        m10_V_2_fu_88 <= m10_V_1_fu_380_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        m10_V_2_fu_88 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_274)) begin
        m11_V_2_fu_84 <= m11_V_1_fu_387_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        m11_V_2_fu_84 <= ap_const_lv42_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_274)) begin
        m20_V_2_fu_76 <= m20_V_1_fu_400_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        m20_V_2_fu_76 <= ap_const_lv42_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_175 & ~(exitcond_fu_278_p2 == 1'b0))) begin
        op2_assign_1_reg_139 <= row_reg_638;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        op2_assign_1_reg_139 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_274)) begin
        op2_assign_reg_150 <= col_reg_689;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond5_fu_233_p2))) begin
        op2_assign_reg_150 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_274)) begin
        phi_mul_reg_161 <= next_mul_reg_694;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond5_fu_233_p2))) begin
        phi_mul_reg_161 <= ap_const_lv21_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_175)) begin
        col_reg_689 <= col_fu_284_p2;
        op2_assign_cast1_reg_681[10 : 0] <= op2_assign_cast1_fu_274_p1[10 : 0];
        op2_assign_cast_reg_675[10 : 0] <= op2_assign_cast_fu_270_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond_fu_278_p2 == 1'b0) & ~ap_sig_175)) begin
        next_mul_reg_694 <= next_mul_fu_308_p2;
        sel_tmp_reg_699 <= sel_tmp_fu_319_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        op2_assign_1_cast1_cast_reg_630[10 : 0] <= op2_assign_1_cast1_cast_fu_229_p1[10 : 0];
        op2_assign_1_cast_reg_625[10 : 0] <= op2_assign_1_cast_fu_221_p1[10 : 0];
        row_reg_638 <= row_fu_239_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        r_V_12_reg_788 <= r_V_12_fu_538_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        r_V_13_reg_752 <= grp_fu_466_p2;
        r_V_14_reg_757 <= grp_fu_472_p2;
        r_V_15_reg_762 <= grp_fu_478_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        r_V_16_reg_767 <= r_V_16_fu_491_p2;
        r_V_17_reg_772 <= r_V_17_fu_504_p2;
        r_V_18_reg_777 <= r_V_18_fu_517_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond5_fu_233_p2))) begin
        tmp_3_reg_643[21 : 0] <= tmp_3_fu_245_p1[21 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        tmp_4_reg_726 <= tmp_4_fu_452_p1;
        tmp_5_reg_732 <= tmp_5_fu_456_p1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | (1'b1 == ap_sig_cseq_ST_st60_fsm_59))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st60_fsm_59)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st60_fsm_59)) begin
        ap_return_0 = tmp_4_reg_726;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st60_fsm_59)) begin
        ap_return_1 = tmp_5_reg_732;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st60_fsm_59)) begin
        ap_return_2 = grp_fu_526_p2;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st60_fsm_59)) begin
        ap_return_3 = ssdm_int_V_write_assign_1_fu_544_p1;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (ap_sig_194) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_77) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_142) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_117) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_207) begin
        ap_sig_cseq_ST_st45_fsm_44 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_44 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_218) begin
        ap_sig_cseq_ST_st46_fsm_45 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_45 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_229) begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_242) begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_131) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_255) begin
        ap_sig_cseq_ST_st50_fsm_49 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_49 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_460) begin
        ap_sig_cseq_ST_st60_fsm_59 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st60_fsm_59 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond5_fu_233_p2))) begin
        grp_fu_252_ap_start = 1'b1;
    end else begin
        grp_fu_252_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond5_fu_233_p2))) begin
        grp_fu_258_ap_start = 1'b1;
    end else begin
        grp_fu_258_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond5_fu_233_p2))) begin
        grp_fu_264_ap_start = 1'b1;
    end else begin
        grp_fu_264_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_fu_440_ap_start = 1'b1;
    end else begin
        grp_fu_440_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_fu_446_ap_start = 1'b1;
    end else begin
        grp_fu_446_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond_fu_278_p2 == 1'b0))) begin
        img_in_data_stream_0_V_blk_n = img_in_data_stream_0_V_empty_n;
    end else begin
        img_in_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond_fu_278_p2 == 1'b0) & ~ap_sig_175)) begin
        img_in_data_stream_0_V_read = 1'b1;
    end else begin
        img_in_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond_fu_278_p2 == 1'b0))) begin
        img_in_data_stream_1_V_blk_n = img_in_data_stream_1_V_empty_n;
    end else begin
        img_in_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond_fu_278_p2 == 1'b0) & ~ap_sig_175)) begin
        img_in_data_stream_1_V_read = 1'b1;
    end else begin
        img_in_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond_fu_278_p2 == 1'b0))) begin
        img_in_data_stream_2_V_blk_n = img_in_data_stream_2_V_empty_n;
    end else begin
        img_in_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond_fu_278_p2 == 1'b0) & ~ap_sig_175)) begin
        img_in_data_stream_2_V_read = 1'b1;
    end else begin
        img_in_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        img_out_data_stream_0_V_blk_n = img_out_data_stream_0_V_full_n;
    end else begin
        img_out_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_274)) begin
        img_out_data_stream_0_V_write = 1'b1;
    end else begin
        img_out_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        img_out_data_stream_1_V_blk_n = img_out_data_stream_1_V_full_n;
    end else begin
        img_out_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_274)) begin
        img_out_data_stream_1_V_write = 1'b1;
    end else begin
        img_out_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        img_out_data_stream_2_V_blk_n = img_out_data_stream_2_V_full_n;
    end else begin
        img_out_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_274)) begin
        img_out_data_stream_2_V_write = 1'b1;
    end else begin
        img_out_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((1'b0 == exitcond5_fu_233_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if ((~ap_sig_175 & ~(exitcond_fu_278_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if (((exitcond_fu_278_p2 == 1'b0) & ~ap_sig_175)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if (~ap_sig_274) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_117 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_131 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_142 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_175 = (((exitcond_fu_278_p2 == 1'b0) & (img_in_data_stream_0_V_empty_n == 1'b0)) | ((exitcond_fu_278_p2 == 1'b0) & (img_in_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_fu_278_p2 == 1'b0) & (img_in_data_stream_2_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_sig_194 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_207 = (1'b1 == ap_CS_fsm[ap_const_lv32_2C]);
end

always @ (*) begin
    ap_sig_218 = (1'b1 == ap_CS_fsm[ap_const_lv32_2D]);
end

always @ (*) begin
    ap_sig_229 = (1'b1 == ap_CS_fsm[ap_const_lv32_2F]);
end

always @ (*) begin
    ap_sig_242 = (1'b1 == ap_CS_fsm[ap_const_lv32_30]);
end

always @ (*) begin
    ap_sig_255 = (1'b1 == ap_CS_fsm[ap_const_lv32_31]);
end

always @ (*) begin
    ap_sig_274 = ((img_out_data_stream_0_V_full_n == 1'b0) | (img_out_data_stream_1_V_full_n == 1'b0) | (img_out_data_stream_2_V_full_n == 1'b0));
end

always @ (*) begin
    ap_sig_460 = (1'b1 == ap_CS_fsm[ap_const_lv32_3B]);
end

always @ (*) begin
    ap_sig_77 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

assign col_fu_284_p2 = (op2_assign_reg_150 + ap_const_lv11_1);

assign exitcond5_fu_233_p2 = ((op2_assign_1_reg_139 == ap_const_lv11_438) ? 1'b1 : 1'b0);

assign exitcond_fu_278_p2 = ((op2_assign_reg_150 == ap_const_lv11_780) ? 1'b1 : 1'b0);

assign grp_fu_252_p1 = tmp_1_fu_248_p1;

assign grp_fu_258_p1 = tmp_1_fu_248_p1;

assign grp_fu_264_p1 = tmp_1_fu_248_p1;

assign grp_fu_440_p1 = tmp_fu_437_p1;

assign grp_fu_446_p1 = tmp_fu_437_p1;

assign grp_fu_466_p0 = rhs_V_7_fu_463_p1;

assign grp_fu_466_p1 = lhs_V_7_fu_460_p1;

assign grp_fu_472_p0 = lhs_V_7_fu_460_p1;

assign grp_fu_472_p1 = lhs_V_7_fu_460_p1;

assign grp_fu_478_p0 = rhs_V_7_fu_463_p1;

assign grp_fu_478_p1 = rhs_V_7_fu_463_p1;

assign grp_fu_526_p0 = lhs_V_8_fu_523_p1;

assign grp_fu_526_p1 = lhs_V_8_fu_523_p1;

assign grp_fu_569_p0 = op2_assign_cast_reg_675;

assign grp_fu_569_p1 = op2_assign_cast_reg_675;

assign img_out_data_stream_0_V_din = tmp_6_fu_356_p3;

assign img_out_data_stream_1_V_din = tmp_6_fu_356_p3;

assign img_out_data_stream_2_V_din = tmp_6_fu_356_p3;

assign lhs_V_2_fu_497_p1 = grp_fu_258_p2;

assign lhs_V_3_fu_510_p1 = grp_fu_264_p2;

assign lhs_V_5_fu_532_p1 = r_V_18_reg_777;

assign lhs_V_7_fu_460_p1 = tmp_4_reg_726;

assign lhs_V_8_fu_523_p1 = r_V_16_reg_767;

assign lhs_V_fu_484_p1 = grp_fu_252_p2;

assign m00_V_1_fu_366_p3 = ((sel_tmp_reg_699[0:0] === 1'b1) ? m00_V_fu_325_p2 : m00_V_2_fu_96);

assign m00_V_fu_325_p2 = (ap_const_lv21_1 + m00_V_2_fu_96);

assign m01_V_1_fu_373_p3 = ((sel_tmp_reg_699[0:0] === 1'b1) ? m01_V_fu_331_p2 : m01_V_2_fu_92);

assign m01_V_fu_331_p2 = (op2_assign_cast1_reg_681 + m01_V_2_fu_92);

assign m02_V_1_fu_394_p3 = ((sel_tmp_reg_699[0:0] === 1'b1) ? grp_fu_569_p3 : m02_V_2_fu_80);

assign m10_V_1_fu_380_p3 = ((sel_tmp_reg_699[0:0] === 1'b1) ? m10_V_fu_336_p2 : m10_V_2_fu_88);

assign m10_V_fu_336_p2 = (m10_V_2_fu_88 + op2_assign_1_cast_reg_625);

assign m11_V_1_fu_387_p3 = ((sel_tmp_reg_699[0:0] === 1'b1) ? m11_V_fu_345_p2 : m11_V_2_fu_84);

assign m11_V_fu_345_p2 = (tmp_10_fu_341_p1 + m11_V_2_fu_84);

assign m20_V_1_fu_400_p3 = ((sel_tmp_reg_699[0:0] === 1'b1) ? m20_V_fu_351_p2 : m20_V_2_fu_76);

assign m20_V_fu_351_p2 = (tmp_3_reg_643 + m20_V_2_fu_76);

assign next_mul_fu_308_p2 = (op2_assign_1_cast1_cast_reg_630 + phi_mul_reg_161);

assign op2_assign_1_cast1_cast_fu_229_p1 = op2_assign_1_reg_139;

assign op2_assign_1_cast1_fu_225_p1 = op2_assign_1_reg_139;

assign op2_assign_1_cast_fu_221_p1 = op2_assign_1_reg_139;

assign op2_assign_4_fu_576_p0 = op2_assign_1_cast1_fu_225_p1;

assign op2_assign_4_fu_576_p1 = op2_assign_1_cast1_fu_225_p1;

assign op2_assign_cast1_fu_274_p1 = op2_assign_reg_150;

assign op2_assign_cast_fu_270_p1 = op2_assign_reg_150;

assign r_V_12_fu_538_p2 = (lhs_V_5_fu_532_p1 - rhs_V_5_fu_535_p1);

assign r_V_16_fu_491_p2 = (lhs_V_fu_484_p1 - rhs_V_fu_488_p1);

assign r_V_17_fu_504_p2 = (lhs_V_2_fu_497_p1 - rhs_V_2_fu_501_p1);

assign r_V_18_fu_517_p2 = (lhs_V_3_fu_510_p1 - rhs_V_3_fu_514_p1);

assign rhs_V_2_fu_501_p1 = r_V_15_reg_762;

assign rhs_V_3_fu_514_p1 = r_V_14_reg_757;

assign rhs_V_5_fu_535_p1 = r_V_17_reg_772;

assign rhs_V_7_fu_463_p1 = tmp_5_reg_732;

assign rhs_V_fu_488_p1 = r_V_13_reg_752;

assign row_fu_239_p2 = (op2_assign_1_reg_139 + ap_const_lv11_1);

assign sel_tmp_fu_319_p2 = (tmp5_fu_313_p2 | tmp_9_fu_296_p2);

assign ssdm_int_V_write_assign_1_fu_544_p1 = $signed(r_V_12_reg_788);

assign tmp5_fu_313_p2 = (tmp_s_fu_302_p2 | tmp_8_fu_290_p2);

assign tmp_10_fu_341_p1 = phi_mul_reg_161;

assign tmp_1_fu_248_p1 = m00_V_2_fu_96;

assign tmp_3_fu_245_p1 = op2_assign_4_fu_576_p2;

assign tmp_4_fu_452_p1 = grp_fu_440_p2[20:0];

assign tmp_5_fu_456_p1 = grp_fu_446_p2[20:0];

assign tmp_6_fu_356_p3 = ((sel_tmp_reg_699[0:0] === 1'b1) ? ap_const_lv8_FF : ap_const_lv8_0);

assign tmp_8_fu_290_p2 = ((img_in_data_stream_0_V_dout > ap_const_lv8_80) ? 1'b1 : 1'b0);

assign tmp_9_fu_296_p2 = ((img_in_data_stream_1_V_dout > ap_const_lv8_80) ? 1'b1 : 1'b0);

assign tmp_fu_437_p1 = m00_V_2_fu_96;

assign tmp_s_fu_302_p2 = ((img_in_data_stream_2_V_dout > ap_const_lv8_80) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    op2_assign_1_cast_reg_625[31:11] <= 21'b000000000000000000000;
    op2_assign_1_cast1_cast_reg_630[20:11] <= 10'b0000000000;
    tmp_3_reg_643[41:22] <= 20'b00000000000000000000;
    op2_assign_cast_reg_675[21:11] <= 11'b00000000000;
    op2_assign_cast1_reg_681[31:11] <= 21'b000000000000000000000;
end

endmodule //moments_calc
