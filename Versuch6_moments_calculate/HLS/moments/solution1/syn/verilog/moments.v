// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="moments,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.321000,HLS_SYN_LAT=8304200,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=31,HLS_SYN_FF=10446,HLS_SYN_LUT=16500}" *)

module moments (
        ap_clk,
        ap_rst_n,
        in_data_TDATA,
        in_data_TVALID,
        in_data_TREADY,
        in_data_TKEEP,
        in_data_TSTRB,
        in_data_TUSER,
        in_data_TLAST,
        in_data_TID,
        in_data_TDEST,
        out_data_TDATA,
        out_data_TVALID,
        out_data_TREADY,
        out_data_TKEEP,
        out_data_TSTRB,
        out_data_TUSER,
        out_data_TLAST,
        out_data_TID,
        out_data_TDEST,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_st1_fsm_0 = 20'b1;
parameter    ap_ST_st2_fsm_1 = 20'b10;
parameter    ap_ST_st3_fsm_2 = 20'b100;
parameter    ap_ST_st4_fsm_3 = 20'b1000;
parameter    ap_ST_st5_fsm_4 = 20'b10000;
parameter    ap_ST_st6_fsm_5 = 20'b100000;
parameter    ap_ST_st7_fsm_6 = 20'b1000000;
parameter    ap_ST_st8_fsm_7 = 20'b10000000;
parameter    ap_ST_st9_fsm_8 = 20'b100000000;
parameter    ap_ST_st10_fsm_9 = 20'b1000000000;
parameter    ap_ST_st11_fsm_10 = 20'b10000000000;
parameter    ap_ST_st12_fsm_11 = 20'b100000000000;
parameter    ap_ST_st13_fsm_12 = 20'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 20'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 20'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 20'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 20'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 20'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 20'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 20'b10000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv64_3FE0000000000000 = 64'b11111111100000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_D = 32'b1101;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (C_S_AXI_CONTROL_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [23:0] in_data_TDATA;
input   in_data_TVALID;
output   in_data_TREADY;
input  [2:0] in_data_TKEEP;
input  [2:0] in_data_TSTRB;
input  [0:0] in_data_TUSER;
input  [0:0] in_data_TLAST;
input  [0:0] in_data_TID;
input  [0:0] in_data_TDEST;
output  [23:0] out_data_TDATA;
output   out_data_TVALID;
input   out_data_TREADY;
output  [2:0] out_data_TKEEP;
output  [2:0] out_data_TSTRB;
output  [0:0] out_data_TUSER;
output  [0:0] out_data_TLAST;
output  [0:0] out_data_TID;
output  [0:0] out_data_TDEST;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1 : 0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1 : 0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1 : 0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1 : 0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1 : 0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_37;
reg    ap_ready;
reg   [23:0] in_data_V_data_V_0_data_out;
wire    in_data_V_data_V_0_vld_in;
wire    in_data_V_data_V_0_ack_out;
reg   [23:0] in_data_V_data_V_0_data_reg;
reg    in_data_V_data_V_0_in_rdy;
reg    in_data_V_data_V_0_has_vld_data_reg_i;
reg    in_data_V_data_V_0_has_vld_data_reg;
reg   [2:0] in_data_V_keep_V_0_data_out;
wire    in_data_V_keep_V_0_vld_in;
wire    in_data_V_keep_V_0_ack_out;
reg   [2:0] in_data_V_keep_V_0_data_reg;
reg    in_data_V_keep_V_0_in_rdy;
reg    in_data_V_keep_V_0_has_vld_data_reg_i;
reg    in_data_V_keep_V_0_has_vld_data_reg;
reg   [2:0] in_data_V_strb_V_0_data_out;
wire    in_data_V_strb_V_0_vld_in;
wire    in_data_V_strb_V_0_ack_out;
reg   [2:0] in_data_V_strb_V_0_data_reg;
reg    in_data_V_strb_V_0_in_rdy;
reg    in_data_V_strb_V_0_has_vld_data_reg_i;
reg    in_data_V_strb_V_0_has_vld_data_reg;
reg   [0:0] in_data_V_user_V_0_data_out;
wire    in_data_V_user_V_0_vld_in;
wire    in_data_V_user_V_0_ack_out;
reg   [0:0] in_data_V_user_V_0_data_reg;
reg    in_data_V_user_V_0_in_rdy;
reg    in_data_V_user_V_0_has_vld_data_reg_i;
reg    in_data_V_user_V_0_has_vld_data_reg;
reg   [0:0] in_data_V_last_V_0_data_out;
wire    in_data_V_last_V_0_vld_in;
wire    in_data_V_last_V_0_ack_out;
reg   [0:0] in_data_V_last_V_0_data_reg;
reg    in_data_V_last_V_0_in_rdy;
reg    in_data_V_last_V_0_has_vld_data_reg_i;
reg    in_data_V_last_V_0_has_vld_data_reg;
reg   [0:0] in_data_V_id_V_0_data_out;
wire    in_data_V_id_V_0_vld_in;
wire    in_data_V_id_V_0_ack_out;
reg   [0:0] in_data_V_id_V_0_data_reg;
reg    in_data_V_id_V_0_in_rdy;
reg    in_data_V_id_V_0_has_vld_data_reg_i;
reg    in_data_V_id_V_0_has_vld_data_reg;
reg   [0:0] in_data_V_dest_V_0_data_out;
wire    in_data_V_dest_V_0_vld_in;
wire    in_data_V_dest_V_0_ack_out;
reg   [0:0] in_data_V_dest_V_0_data_reg;
reg    in_data_V_dest_V_0_areset_d;
reg    in_data_V_dest_V_0_in_rdy;
reg    in_data_V_dest_V_0_has_vld_data_reg_i;
reg    in_data_V_dest_V_0_has_vld_data_reg;
wire    out_data_V_data_V_1_vld_in;
wire    out_data_V_data_V_1_ack_out;
reg   [23:0] out_data_V_data_V_1_data_reg;
reg    out_data_V_data_V_1_sRdy;
reg    out_data_V_data_V_1_mVld;
reg    out_data_V_data_V_1_areset_d;
wire    out_data_V_keep_V_1_vld_in;
wire    out_data_V_keep_V_1_ack_out;
reg   [2:0] out_data_V_keep_V_1_data_reg;
reg    out_data_V_keep_V_1_sRdy;
reg    out_data_V_keep_V_1_mVld;
reg    out_data_V_keep_V_1_areset_d;
wire    out_data_V_strb_V_1_vld_in;
wire    out_data_V_strb_V_1_ack_out;
reg   [2:0] out_data_V_strb_V_1_data_reg;
reg    out_data_V_strb_V_1_sRdy;
reg    out_data_V_strb_V_1_mVld;
reg    out_data_V_strb_V_1_areset_d;
wire    out_data_V_user_V_1_vld_in;
wire    out_data_V_user_V_1_ack_out;
reg   [0:0] out_data_V_user_V_1_data_reg;
reg    out_data_V_user_V_1_sRdy;
reg    out_data_V_user_V_1_mVld;
reg    out_data_V_user_V_1_areset_d;
wire    out_data_V_last_V_1_vld_in;
wire    out_data_V_last_V_1_ack_out;
reg   [0:0] out_data_V_last_V_1_data_reg;
reg    out_data_V_last_V_1_sRdy;
reg    out_data_V_last_V_1_mVld;
reg    out_data_V_last_V_1_areset_d;
wire    out_data_V_id_V_1_vld_in;
wire    out_data_V_id_V_1_ack_out;
reg   [0:0] out_data_V_id_V_1_data_reg;
reg    out_data_V_id_V_1_sRdy;
reg    out_data_V_id_V_1_mVld;
reg    out_data_V_id_V_1_areset_d;
wire    out_data_V_dest_V_1_vld_in;
wire    out_data_V_dest_V_1_ack_out;
reg   [0:0] out_data_V_dest_V_1_data_reg;
reg    out_data_V_dest_V_1_sRdy;
reg    out_data_V_dest_V_1_mVld;
reg    out_data_V_dest_V_1_areset_d;
wire   [31:0] x;
reg    x_ap_vld;
wire   [31:0] y;
reg    y_ap_vld;
reg    angle_ap_vld;
reg   [20:0] x_center_V_reg_278;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_468;
wire    grp_moments_calc_fu_147_ap_done;
reg   [20:0] y_center_V_reg_283;
reg   [44:0] sub45_V_reg_288;
wire   [63:0] tmp_fu_226_p1;
reg   [63:0] tmp_reg_293;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_487;
wire   [63:0] grp_fu_204_p1;
reg   [63:0] multi_reg_303;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_496;
wire   [63:0] grp_fu_207_p1;
reg   [63:0] subtr_reg_308;
wire   [63:0] grp_moments_atan2_cordic_double_s_fu_139_ap_return;
reg   [63:0] tmp_i_i_reg_313;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_507;
wire    grp_moments_atan2_cordic_double_s_fu_139_ap_done;
wire    grp_moments_Mat2AXIvideo_fu_178_ap_done;
wire   [63:0] grp_fu_199_p2;
reg   [63:0] tmp_4_reg_318;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_523;
wire    grp_moments_atan2_cordic_double_s_fu_139_ap_start;
wire    grp_moments_atan2_cordic_double_s_fu_139_ap_idle;
wire    grp_moments_atan2_cordic_double_s_fu_139_ap_ready;
wire    grp_moments_calc_fu_147_ap_start;
wire    grp_moments_calc_fu_147_ap_idle;
wire    grp_moments_calc_fu_147_ap_ready;
wire    grp_moments_calc_fu_147_img_in_data_stream_0_V_read;
wire    grp_moments_calc_fu_147_img_in_data_stream_1_V_read;
wire    grp_moments_calc_fu_147_img_in_data_stream_2_V_read;
wire   [7:0] grp_moments_calc_fu_147_img_out_data_stream_0_V_din;
wire    grp_moments_calc_fu_147_img_out_data_stream_0_V_write;
wire   [7:0] grp_moments_calc_fu_147_img_out_data_stream_1_V_din;
wire    grp_moments_calc_fu_147_img_out_data_stream_1_V_write;
wire   [7:0] grp_moments_calc_fu_147_img_out_data_stream_2_V_din;
wire    grp_moments_calc_fu_147_img_out_data_stream_2_V_write;
wire   [20:0] grp_moments_calc_fu_147_ap_return_0;
wire   [20:0] grp_moments_calc_fu_147_ap_return_1;
wire   [85:0] grp_moments_calc_fu_147_ap_return_2;
wire   [44:0] grp_moments_calc_fu_147_ap_return_3;
wire    grp_moments_AXIvideo2Mat_fu_157_ap_start;
wire    grp_moments_AXIvideo2Mat_fu_157_ap_done;
wire    grp_moments_AXIvideo2Mat_fu_157_ap_idle;
wire    grp_moments_AXIvideo2Mat_fu_157_ap_ready;
wire    grp_moments_AXIvideo2Mat_fu_157_in_data_TVALID;
wire    grp_moments_AXIvideo2Mat_fu_157_in_data_TREADY;
wire   [7:0] grp_moments_AXIvideo2Mat_fu_157_img_data_stream_0_V_din;
wire    grp_moments_AXIvideo2Mat_fu_157_img_data_stream_0_V_write;
wire   [7:0] grp_moments_AXIvideo2Mat_fu_157_img_data_stream_1_V_din;
wire    grp_moments_AXIvideo2Mat_fu_157_img_data_stream_1_V_write;
wire   [7:0] grp_moments_AXIvideo2Mat_fu_157_img_data_stream_2_V_din;
wire    grp_moments_AXIvideo2Mat_fu_157_img_data_stream_2_V_write;
wire    grp_moments_Mat2AXIvideo_fu_178_ap_start;
wire    grp_moments_Mat2AXIvideo_fu_178_ap_idle;
wire    grp_moments_Mat2AXIvideo_fu_178_ap_ready;
wire    grp_moments_Mat2AXIvideo_fu_178_img_data_stream_0_V_read;
wire    grp_moments_Mat2AXIvideo_fu_178_img_data_stream_1_V_read;
wire    grp_moments_Mat2AXIvideo_fu_178_img_data_stream_2_V_read;
wire   [23:0] grp_moments_Mat2AXIvideo_fu_178_out_data_TDATA;
wire    grp_moments_Mat2AXIvideo_fu_178_out_data_TVALID;
wire   [2:0] grp_moments_Mat2AXIvideo_fu_178_out_data_TKEEP;
wire   [2:0] grp_moments_Mat2AXIvideo_fu_178_out_data_TSTRB;
wire   [0:0] grp_moments_Mat2AXIvideo_fu_178_out_data_TUSER;
wire   [0:0] grp_moments_Mat2AXIvideo_fu_178_out_data_TLAST;
wire   [0:0] grp_moments_Mat2AXIvideo_fu_178_out_data_TID;
wire   [0:0] grp_moments_Mat2AXIvideo_fu_178_out_data_TDEST;
reg    ap_reg_grp_moments_atan2_cordic_double_s_fu_139_ap_start;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_613;
reg    ap_reg_grp_moments_calc_fu_147_ap_start;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_630;
wire   [7:0] img_0_data_stream_0_V_dout;
wire    img_0_data_stream_0_V_empty_n;
reg    img_0_data_stream_0_V_read;
wire   [7:0] img_0_data_stream_1_V_dout;
wire    img_0_data_stream_1_V_empty_n;
reg    img_0_data_stream_1_V_read;
wire   [7:0] img_0_data_stream_2_V_dout;
wire    img_0_data_stream_2_V_empty_n;
reg    img_0_data_stream_2_V_read;
wire    img_1_data_stream_0_V_full_n;
reg    img_1_data_stream_0_V_write;
wire    img_1_data_stream_1_V_full_n;
reg    img_1_data_stream_1_V_write;
wire    img_1_data_stream_2_V_full_n;
reg    img_1_data_stream_2_V_write;
reg    ap_reg_grp_moments_AXIvideo2Mat_fu_157_ap_start;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_663;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_670;
wire    img_0_data_stream_0_V_full_n;
reg    img_0_data_stream_0_V_write;
wire    img_0_data_stream_1_V_full_n;
reg    img_0_data_stream_1_V_write;
wire    img_0_data_stream_2_V_full_n;
reg    img_0_data_stream_2_V_write;
reg    ap_reg_grp_moments_Mat2AXIvideo_fu_178_ap_start;
wire   [7:0] img_1_data_stream_0_V_dout;
wire    img_1_data_stream_0_V_empty_n;
reg    img_1_data_stream_0_V_read;
wire   [7:0] img_1_data_stream_1_V_dout;
wire    img_1_data_stream_1_V_empty_n;
reg    img_1_data_stream_1_V_read;
wire   [7:0] img_1_data_stream_2_V_dout;
wire    img_1_data_stream_2_V_empty_n;
reg    img_1_data_stream_2_V_read;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_712;
reg    ap_sig_727;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_746;
wire  signed [63:0] grp_fu_207_p0;
reg   [19:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'b1;
#0 in_data_V_data_V_0_in_rdy = 1'b0;
#0 in_data_V_data_V_0_has_vld_data_reg = 1'b0;
#0 in_data_V_keep_V_0_in_rdy = 1'b0;
#0 in_data_V_keep_V_0_has_vld_data_reg = 1'b0;
#0 in_data_V_strb_V_0_in_rdy = 1'b0;
#0 in_data_V_strb_V_0_has_vld_data_reg = 1'b0;
#0 in_data_V_user_V_0_in_rdy = 1'b0;
#0 in_data_V_user_V_0_has_vld_data_reg = 1'b0;
#0 in_data_V_last_V_0_in_rdy = 1'b0;
#0 in_data_V_last_V_0_has_vld_data_reg = 1'b0;
#0 in_data_V_id_V_0_in_rdy = 1'b0;
#0 in_data_V_id_V_0_has_vld_data_reg = 1'b0;
#0 in_data_V_dest_V_0_in_rdy = 1'b0;
#0 in_data_V_dest_V_0_has_vld_data_reg = 1'b0;
#0 out_data_V_data_V_1_mVld = 1'b0;
#0 out_data_V_keep_V_1_mVld = 1'b0;
#0 out_data_V_strb_V_1_mVld = 1'b0;
#0 out_data_V_user_V_1_mVld = 1'b0;
#0 out_data_V_last_V_1_mVld = 1'b0;
#0 out_data_V_id_V_1_mVld = 1'b0;
#0 out_data_V_dest_V_1_mVld = 1'b0;
#0 ap_reg_grp_moments_atan2_cordic_double_s_fu_139_ap_start = 1'b0;
#0 ap_reg_grp_moments_calc_fu_147_ap_start = 1'b0;
#0 ap_reg_grp_moments_AXIvideo2Mat_fu_157_ap_start = 1'b0;
#0 ap_reg_grp_moments_Mat2AXIvideo_fu_178_ap_start = 1'b0;
end

moments_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
moments_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .x(x),
    .x_ap_vld(x_ap_vld),
    .y(y),
    .y_ap_vld(y_ap_vld),
    .angle(tmp_4_reg_318),
    .angle_ap_vld(angle_ap_vld)
);

moments_atan2_cordic_double_s grp_moments_atan2_cordic_double_s_fu_139(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_moments_atan2_cordic_double_s_fu_139_ap_start),
    .ap_done(grp_moments_atan2_cordic_double_s_fu_139_ap_done),
    .ap_idle(grp_moments_atan2_cordic_double_s_fu_139_ap_idle),
    .ap_ready(grp_moments_atan2_cordic_double_s_fu_139_ap_ready),
    .y_in(multi_reg_303),
    .x_in(subtr_reg_308),
    .ap_return(grp_moments_atan2_cordic_double_s_fu_139_ap_return)
);

moments_calc grp_moments_calc_fu_147(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_moments_calc_fu_147_ap_start),
    .ap_done(grp_moments_calc_fu_147_ap_done),
    .ap_idle(grp_moments_calc_fu_147_ap_idle),
    .ap_ready(grp_moments_calc_fu_147_ap_ready),
    .img_in_data_stream_0_V_dout(img_0_data_stream_0_V_dout),
    .img_in_data_stream_0_V_empty_n(img_0_data_stream_0_V_empty_n),
    .img_in_data_stream_0_V_read(grp_moments_calc_fu_147_img_in_data_stream_0_V_read),
    .img_in_data_stream_1_V_dout(img_0_data_stream_1_V_dout),
    .img_in_data_stream_1_V_empty_n(img_0_data_stream_1_V_empty_n),
    .img_in_data_stream_1_V_read(grp_moments_calc_fu_147_img_in_data_stream_1_V_read),
    .img_in_data_stream_2_V_dout(img_0_data_stream_2_V_dout),
    .img_in_data_stream_2_V_empty_n(img_0_data_stream_2_V_empty_n),
    .img_in_data_stream_2_V_read(grp_moments_calc_fu_147_img_in_data_stream_2_V_read),
    .img_out_data_stream_0_V_din(grp_moments_calc_fu_147_img_out_data_stream_0_V_din),
    .img_out_data_stream_0_V_full_n(img_1_data_stream_0_V_full_n),
    .img_out_data_stream_0_V_write(grp_moments_calc_fu_147_img_out_data_stream_0_V_write),
    .img_out_data_stream_1_V_din(grp_moments_calc_fu_147_img_out_data_stream_1_V_din),
    .img_out_data_stream_1_V_full_n(img_1_data_stream_1_V_full_n),
    .img_out_data_stream_1_V_write(grp_moments_calc_fu_147_img_out_data_stream_1_V_write),
    .img_out_data_stream_2_V_din(grp_moments_calc_fu_147_img_out_data_stream_2_V_din),
    .img_out_data_stream_2_V_full_n(img_1_data_stream_2_V_full_n),
    .img_out_data_stream_2_V_write(grp_moments_calc_fu_147_img_out_data_stream_2_V_write),
    .ap_return_0(grp_moments_calc_fu_147_ap_return_0),
    .ap_return_1(grp_moments_calc_fu_147_ap_return_1),
    .ap_return_2(grp_moments_calc_fu_147_ap_return_2),
    .ap_return_3(grp_moments_calc_fu_147_ap_return_3)
);

moments_AXIvideo2Mat grp_moments_AXIvideo2Mat_fu_157(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_moments_AXIvideo2Mat_fu_157_ap_start),
    .ap_done(grp_moments_AXIvideo2Mat_fu_157_ap_done),
    .ap_idle(grp_moments_AXIvideo2Mat_fu_157_ap_idle),
    .ap_ready(grp_moments_AXIvideo2Mat_fu_157_ap_ready),
    .in_data_TDATA(in_data_V_data_V_0_data_out),
    .in_data_TVALID(grp_moments_AXIvideo2Mat_fu_157_in_data_TVALID),
    .in_data_TREADY(grp_moments_AXIvideo2Mat_fu_157_in_data_TREADY),
    .in_data_TKEEP(in_data_V_keep_V_0_data_out),
    .in_data_TSTRB(in_data_V_strb_V_0_data_out),
    .in_data_TUSER(in_data_V_user_V_0_data_out),
    .in_data_TLAST(in_data_V_last_V_0_data_out),
    .in_data_TID(in_data_V_id_V_0_data_out),
    .in_data_TDEST(in_data_V_dest_V_0_data_out),
    .img_data_stream_0_V_din(grp_moments_AXIvideo2Mat_fu_157_img_data_stream_0_V_din),
    .img_data_stream_0_V_full_n(img_0_data_stream_0_V_full_n),
    .img_data_stream_0_V_write(grp_moments_AXIvideo2Mat_fu_157_img_data_stream_0_V_write),
    .img_data_stream_1_V_din(grp_moments_AXIvideo2Mat_fu_157_img_data_stream_1_V_din),
    .img_data_stream_1_V_full_n(img_0_data_stream_1_V_full_n),
    .img_data_stream_1_V_write(grp_moments_AXIvideo2Mat_fu_157_img_data_stream_1_V_write),
    .img_data_stream_2_V_din(grp_moments_AXIvideo2Mat_fu_157_img_data_stream_2_V_din),
    .img_data_stream_2_V_full_n(img_0_data_stream_2_V_full_n),
    .img_data_stream_2_V_write(grp_moments_AXIvideo2Mat_fu_157_img_data_stream_2_V_write)
);

moments_Mat2AXIvideo grp_moments_Mat2AXIvideo_fu_178(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_moments_Mat2AXIvideo_fu_178_ap_start),
    .ap_done(grp_moments_Mat2AXIvideo_fu_178_ap_done),
    .ap_idle(grp_moments_Mat2AXIvideo_fu_178_ap_idle),
    .ap_ready(grp_moments_Mat2AXIvideo_fu_178_ap_ready),
    .img_data_stream_0_V_dout(img_1_data_stream_0_V_dout),
    .img_data_stream_0_V_empty_n(img_1_data_stream_0_V_empty_n),
    .img_data_stream_0_V_read(grp_moments_Mat2AXIvideo_fu_178_img_data_stream_0_V_read),
    .img_data_stream_1_V_dout(img_1_data_stream_1_V_dout),
    .img_data_stream_1_V_empty_n(img_1_data_stream_1_V_empty_n),
    .img_data_stream_1_V_read(grp_moments_Mat2AXIvideo_fu_178_img_data_stream_1_V_read),
    .img_data_stream_2_V_dout(img_1_data_stream_2_V_dout),
    .img_data_stream_2_V_empty_n(img_1_data_stream_2_V_empty_n),
    .img_data_stream_2_V_read(grp_moments_Mat2AXIvideo_fu_178_img_data_stream_2_V_read),
    .out_data_TDATA(grp_moments_Mat2AXIvideo_fu_178_out_data_TDATA),
    .out_data_TVALID(grp_moments_Mat2AXIvideo_fu_178_out_data_TVALID),
    .out_data_TREADY(out_data_V_dest_V_1_sRdy),
    .out_data_TKEEP(grp_moments_Mat2AXIvideo_fu_178_out_data_TKEEP),
    .out_data_TSTRB(grp_moments_Mat2AXIvideo_fu_178_out_data_TSTRB),
    .out_data_TUSER(grp_moments_Mat2AXIvideo_fu_178_out_data_TUSER),
    .out_data_TLAST(grp_moments_Mat2AXIvideo_fu_178_out_data_TLAST),
    .out_data_TID(grp_moments_Mat2AXIvideo_fu_178_out_data_TID),
    .out_data_TDEST(grp_moments_Mat2AXIvideo_fu_178_out_data_TDEST)
);

moments_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
moments_dmul_64ns_64ns_64_6_max_dsp_U45(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_i_i_reg_313),
    .din1(ap_const_lv64_3FE0000000000000),
    .ce(1'b1),
    .dout(grp_fu_199_p2)
);

moments_uitodp_64ns_64_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
moments_uitodp_64ns_64_6_U46(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_reg_293),
    .ce(1'b1),
    .dout(grp_fu_204_p1)
);

moments_sitodp_64s_64_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
moments_sitodp_64s_64_6_U47(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_207_p0),
    .ce(1'b1),
    .dout(grp_fu_207_p1)
);

FIFO_moments_img_0_data_stream_0_V img_0_data_stream_0_V_img_0_data_stream_0_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_moments_AXIvideo2Mat_fu_157_img_data_stream_0_V_din),
    .if_full_n(img_0_data_stream_0_V_full_n),
    .if_write(img_0_data_stream_0_V_write),
    .if_dout(img_0_data_stream_0_V_dout),
    .if_empty_n(img_0_data_stream_0_V_empty_n),
    .if_read(img_0_data_stream_0_V_read)
);

FIFO_moments_img_0_data_stream_1_V img_0_data_stream_1_V_img_0_data_stream_1_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_moments_AXIvideo2Mat_fu_157_img_data_stream_1_V_din),
    .if_full_n(img_0_data_stream_1_V_full_n),
    .if_write(img_0_data_stream_1_V_write),
    .if_dout(img_0_data_stream_1_V_dout),
    .if_empty_n(img_0_data_stream_1_V_empty_n),
    .if_read(img_0_data_stream_1_V_read)
);

FIFO_moments_img_0_data_stream_2_V img_0_data_stream_2_V_img_0_data_stream_2_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_moments_AXIvideo2Mat_fu_157_img_data_stream_2_V_din),
    .if_full_n(img_0_data_stream_2_V_full_n),
    .if_write(img_0_data_stream_2_V_write),
    .if_dout(img_0_data_stream_2_V_dout),
    .if_empty_n(img_0_data_stream_2_V_empty_n),
    .if_read(img_0_data_stream_2_V_read)
);

FIFO_moments_img_1_data_stream_0_V img_1_data_stream_0_V_img_1_data_stream_0_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_moments_calc_fu_147_img_out_data_stream_0_V_din),
    .if_full_n(img_1_data_stream_0_V_full_n),
    .if_write(img_1_data_stream_0_V_write),
    .if_dout(img_1_data_stream_0_V_dout),
    .if_empty_n(img_1_data_stream_0_V_empty_n),
    .if_read(img_1_data_stream_0_V_read)
);

FIFO_moments_img_1_data_stream_1_V img_1_data_stream_1_V_img_1_data_stream_1_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_moments_calc_fu_147_img_out_data_stream_1_V_din),
    .if_full_n(img_1_data_stream_1_V_full_n),
    .if_write(img_1_data_stream_1_V_write),
    .if_dout(img_1_data_stream_1_V_dout),
    .if_empty_n(img_1_data_stream_1_V_empty_n),
    .if_read(img_1_data_stream_1_V_read)
);

FIFO_moments_img_1_data_stream_2_V img_1_data_stream_2_V_img_1_data_stream_2_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_moments_calc_fu_147_img_out_data_stream_2_V_din),
    .if_full_n(img_1_data_stream_2_V_full_n),
    .if_write(img_1_data_stream_2_V_write),
    .if_dout(img_1_data_stream_2_V_dout),
    .if_empty_n(img_1_data_stream_2_V_empty_n),
    .if_read(img_1_data_stream_2_V_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_moments_AXIvideo2Mat_fu_157_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            ap_reg_grp_moments_AXIvideo2Mat_fu_157_ap_start <= 1'b1;
        end else if ((1'b1 == grp_moments_AXIvideo2Mat_fu_157_ap_ready)) begin
            ap_reg_grp_moments_AXIvideo2Mat_fu_157_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_moments_Mat2AXIvideo_fu_178_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
            ap_reg_grp_moments_Mat2AXIvideo_fu_178_ap_start <= 1'b1;
        end else if ((1'b1 == grp_moments_Mat2AXIvideo_fu_178_ap_ready)) begin
            ap_reg_grp_moments_Mat2AXIvideo_fu_178_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_moments_atan2_cordic_double_s_fu_139_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
            ap_reg_grp_moments_atan2_cordic_double_s_fu_139_ap_start <= 1'b1;
        end else if ((1'b1 == grp_moments_atan2_cordic_double_s_fu_139_ap_ready)) begin
            ap_reg_grp_moments_atan2_cordic_double_s_fu_139_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_moments_calc_fu_147_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            ap_reg_grp_moments_calc_fu_147_ap_start <= 1'b1;
        end else if ((1'b1 == grp_moments_calc_fu_147_ap_ready)) begin
            ap_reg_grp_moments_calc_fu_147_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_data_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        in_data_V_data_V_0_has_vld_data_reg <= in_data_V_data_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_data_V_0_in_rdy <= 1'b0;
    end else begin
        in_data_V_data_V_0_in_rdy <= (in_data_V_data_V_0_ack_out | ~in_data_V_data_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_dest_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        in_data_V_dest_V_0_has_vld_data_reg <= in_data_V_dest_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_dest_V_0_in_rdy <= 1'b0;
    end else begin
        in_data_V_dest_V_0_in_rdy <= (in_data_V_dest_V_0_ack_out | ~in_data_V_dest_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_id_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        in_data_V_id_V_0_has_vld_data_reg <= in_data_V_id_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_id_V_0_in_rdy <= 1'b0;
    end else begin
        in_data_V_id_V_0_in_rdy <= (in_data_V_id_V_0_ack_out | ~in_data_V_id_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_keep_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        in_data_V_keep_V_0_has_vld_data_reg <= in_data_V_keep_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_keep_V_0_in_rdy <= 1'b0;
    end else begin
        in_data_V_keep_V_0_in_rdy <= (in_data_V_keep_V_0_ack_out | ~in_data_V_keep_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_last_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        in_data_V_last_V_0_has_vld_data_reg <= in_data_V_last_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_last_V_0_in_rdy <= 1'b0;
    end else begin
        in_data_V_last_V_0_in_rdy <= (in_data_V_last_V_0_ack_out | ~in_data_V_last_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_strb_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        in_data_V_strb_V_0_has_vld_data_reg <= in_data_V_strb_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_strb_V_0_in_rdy <= 1'b0;
    end else begin
        in_data_V_strb_V_0_in_rdy <= (in_data_V_strb_V_0_ack_out | ~in_data_V_strb_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_user_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        in_data_V_user_V_0_has_vld_data_reg <= in_data_V_user_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_data_V_user_V_0_in_rdy <= 1'b0;
    end else begin
        in_data_V_user_V_0_in_rdy <= (in_data_V_user_V_0_ack_out | ~in_data_V_user_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_data_V_data_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == out_data_V_data_V_1_vld_in)) begin
            out_data_V_data_V_1_mVld <= 1'b1;
        end else if ((1'b1 == out_data_V_data_V_1_ack_out)) begin
            out_data_V_data_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_data_V_dest_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == out_data_V_dest_V_1_vld_in)) begin
            out_data_V_dest_V_1_mVld <= 1'b1;
        end else if ((1'b1 == out_data_V_dest_V_1_ack_out)) begin
            out_data_V_dest_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_data_V_id_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == out_data_V_id_V_1_vld_in)) begin
            out_data_V_id_V_1_mVld <= 1'b1;
        end else if ((1'b1 == out_data_V_id_V_1_ack_out)) begin
            out_data_V_id_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_data_V_keep_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == out_data_V_keep_V_1_vld_in)) begin
            out_data_V_keep_V_1_mVld <= 1'b1;
        end else if ((1'b1 == out_data_V_keep_V_1_ack_out)) begin
            out_data_V_keep_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_data_V_last_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == out_data_V_last_V_1_vld_in)) begin
            out_data_V_last_V_1_mVld <= 1'b1;
        end else if ((1'b1 == out_data_V_last_V_1_ack_out)) begin
            out_data_V_last_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_data_V_strb_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == out_data_V_strb_V_1_vld_in)) begin
            out_data_V_strb_V_1_mVld <= 1'b1;
        end else if ((1'b1 == out_data_V_strb_V_1_ack_out)) begin
            out_data_V_strb_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_data_V_user_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == out_data_V_user_V_1_vld_in)) begin
            out_data_V_user_V_1_mVld <= 1'b1;
        end else if ((1'b1 == out_data_V_user_V_1_ack_out)) begin
            out_data_V_user_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == in_data_V_data_V_0_vld_in) & (1'b1 == in_data_V_data_V_0_in_rdy))) begin
        in_data_V_data_V_0_data_reg <= in_data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        in_data_V_dest_V_0_areset_d <= ap_rst_n_inv;
        out_data_V_data_V_1_areset_d <= ap_rst_n_inv;
        out_data_V_dest_V_1_areset_d <= ap_rst_n_inv;
        out_data_V_id_V_1_areset_d <= ap_rst_n_inv;
        out_data_V_keep_V_1_areset_d <= ap_rst_n_inv;
        out_data_V_last_V_1_areset_d <= ap_rst_n_inv;
        out_data_V_strb_V_1_areset_d <= ap_rst_n_inv;
        out_data_V_user_V_1_areset_d <= ap_rst_n_inv;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == in_data_V_dest_V_0_vld_in) & (1'b1 == in_data_V_dest_V_0_in_rdy))) begin
        in_data_V_dest_V_0_data_reg <= in_data_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == in_data_V_id_V_0_vld_in) & (1'b1 == in_data_V_id_V_0_in_rdy))) begin
        in_data_V_id_V_0_data_reg <= in_data_TID;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == in_data_V_keep_V_0_vld_in) & (1'b1 == in_data_V_keep_V_0_in_rdy))) begin
        in_data_V_keep_V_0_data_reg <= in_data_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == in_data_V_last_V_0_vld_in) & (1'b1 == in_data_V_last_V_0_in_rdy))) begin
        in_data_V_last_V_0_data_reg <= in_data_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == in_data_V_strb_V_0_vld_in) & (1'b1 == in_data_V_strb_V_0_in_rdy))) begin
        in_data_V_strb_V_0_data_reg <= in_data_TSTRB;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == in_data_V_user_V_0_vld_in) & (1'b1 == in_data_V_user_V_0_in_rdy))) begin
        in_data_V_user_V_0_data_reg <= in_data_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        multi_reg_303 <= grp_fu_204_p1;
        subtr_reg_308 <= grp_fu_207_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == out_data_V_data_V_1_vld_in) & (1'b1 == out_data_V_data_V_1_sRdy))) begin
        out_data_V_data_V_1_data_reg <= grp_moments_Mat2AXIvideo_fu_178_out_data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == out_data_V_dest_V_1_vld_in) & (1'b1 == out_data_V_dest_V_1_sRdy))) begin
        out_data_V_dest_V_1_data_reg <= grp_moments_Mat2AXIvideo_fu_178_out_data_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == out_data_V_id_V_1_vld_in) & (1'b1 == out_data_V_id_V_1_sRdy))) begin
        out_data_V_id_V_1_data_reg <= grp_moments_Mat2AXIvideo_fu_178_out_data_TID;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == out_data_V_keep_V_1_vld_in) & (1'b1 == out_data_V_keep_V_1_sRdy))) begin
        out_data_V_keep_V_1_data_reg <= grp_moments_Mat2AXIvideo_fu_178_out_data_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == out_data_V_last_V_1_vld_in) & (1'b1 == out_data_V_last_V_1_sRdy))) begin
        out_data_V_last_V_1_data_reg <= grp_moments_Mat2AXIvideo_fu_178_out_data_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == out_data_V_strb_V_1_vld_in) & (1'b1 == out_data_V_strb_V_1_sRdy))) begin
        out_data_V_strb_V_1_data_reg <= grp_moments_Mat2AXIvideo_fu_178_out_data_TSTRB;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == out_data_V_user_V_1_vld_in) & (1'b1 == out_data_V_user_V_1_sRdy))) begin
        out_data_V_user_V_1_data_reg <= grp_moments_Mat2AXIvideo_fu_178_out_data_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == grp_moments_calc_fu_147_ap_done))) begin
        sub45_V_reg_288 <= grp_moments_calc_fu_147_ap_return_3;
        tmp_reg_293 <= tmp_fu_226_p1;
        x_center_V_reg_278 <= grp_moments_calc_fu_147_ap_return_0;
        y_center_V_reg_283 <= grp_moments_calc_fu_147_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        tmp_4_reg_318 <= grp_fu_199_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~((1'b0 == grp_moments_atan2_cordic_double_s_fu_139_ap_done) | (1'b0 == grp_moments_Mat2AXIvideo_fu_178_ap_done)))) begin
        tmp_i_i_reg_313 <= grp_moments_atan2_cordic_double_s_fu_139_ap_return;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & ~ap_sig_727)) begin
        angle_ap_vld = 1'b1;
    end else begin
        angle_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & ~ap_sig_727)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & ~ap_sig_727)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_496) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_613) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_507) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_746) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_523) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_37) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_712) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_663) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_670) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_630) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_468) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_487) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        img_0_data_stream_0_V_read = grp_moments_calc_fu_147_img_in_data_stream_0_V_read;
    end else begin
        img_0_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        img_0_data_stream_0_V_write = grp_moments_AXIvideo2Mat_fu_157_img_data_stream_0_V_write;
    end else begin
        img_0_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        img_0_data_stream_1_V_read = grp_moments_calc_fu_147_img_in_data_stream_1_V_read;
    end else begin
        img_0_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        img_0_data_stream_1_V_write = grp_moments_AXIvideo2Mat_fu_157_img_data_stream_1_V_write;
    end else begin
        img_0_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        img_0_data_stream_2_V_read = grp_moments_calc_fu_147_img_in_data_stream_2_V_read;
    end else begin
        img_0_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        img_0_data_stream_2_V_write = grp_moments_AXIvideo2Mat_fu_157_img_data_stream_2_V_write;
    end else begin
        img_0_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        img_1_data_stream_0_V_read = grp_moments_Mat2AXIvideo_fu_178_img_data_stream_0_V_read;
    end else begin
        img_1_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        img_1_data_stream_0_V_write = grp_moments_calc_fu_147_img_out_data_stream_0_V_write;
    end else begin
        img_1_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        img_1_data_stream_1_V_read = grp_moments_Mat2AXIvideo_fu_178_img_data_stream_1_V_read;
    end else begin
        img_1_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        img_1_data_stream_1_V_write = grp_moments_calc_fu_147_img_out_data_stream_1_V_write;
    end else begin
        img_1_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        img_1_data_stream_2_V_read = grp_moments_Mat2AXIvideo_fu_178_img_data_stream_2_V_read;
    end else begin
        img_1_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        img_1_data_stream_2_V_write = grp_moments_calc_fu_147_img_out_data_stream_2_V_write;
    end else begin
        img_1_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == in_data_V_data_V_0_has_vld_data_reg)) begin
        in_data_V_data_V_0_data_out = in_data_V_data_V_0_data_reg;
    end else begin
        in_data_V_data_V_0_data_out = in_data_TDATA;
    end
end

always @ (*) begin
    if (((1'b1 == in_data_V_data_V_0_vld_in) & (1'b0 == in_data_V_data_V_0_ack_out) & (1'b1 == in_data_V_data_V_0_in_rdy))) begin
        in_data_V_data_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == in_data_V_data_V_0_ack_out) & (1'b1 == in_data_V_data_V_0_has_vld_data_reg) & ((1'b0 == in_data_V_data_V_0_vld_in) | (1'b0 == in_data_V_data_V_0_in_rdy)))) begin
        in_data_V_data_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        in_data_V_data_V_0_has_vld_data_reg_i = in_data_V_data_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((1'b1 == in_data_V_dest_V_0_has_vld_data_reg)) begin
        in_data_V_dest_V_0_data_out = in_data_V_dest_V_0_data_reg;
    end else begin
        in_data_V_dest_V_0_data_out = in_data_TDEST;
    end
end

always @ (*) begin
    if (((1'b1 == in_data_V_dest_V_0_vld_in) & (1'b0 == in_data_V_dest_V_0_ack_out) & (1'b1 == in_data_V_dest_V_0_in_rdy))) begin
        in_data_V_dest_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == in_data_V_dest_V_0_ack_out) & (1'b1 == in_data_V_dest_V_0_has_vld_data_reg) & ((1'b0 == in_data_V_dest_V_0_vld_in) | (1'b0 == in_data_V_dest_V_0_in_rdy)))) begin
        in_data_V_dest_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        in_data_V_dest_V_0_has_vld_data_reg_i = in_data_V_dest_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((1'b1 == in_data_V_id_V_0_has_vld_data_reg)) begin
        in_data_V_id_V_0_data_out = in_data_V_id_V_0_data_reg;
    end else begin
        in_data_V_id_V_0_data_out = in_data_TID;
    end
end

always @ (*) begin
    if (((1'b1 == in_data_V_id_V_0_vld_in) & (1'b0 == in_data_V_id_V_0_ack_out) & (1'b1 == in_data_V_id_V_0_in_rdy))) begin
        in_data_V_id_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == in_data_V_id_V_0_ack_out) & (1'b1 == in_data_V_id_V_0_has_vld_data_reg) & ((1'b0 == in_data_V_id_V_0_vld_in) | (1'b0 == in_data_V_id_V_0_in_rdy)))) begin
        in_data_V_id_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        in_data_V_id_V_0_has_vld_data_reg_i = in_data_V_id_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((1'b1 == in_data_V_keep_V_0_has_vld_data_reg)) begin
        in_data_V_keep_V_0_data_out = in_data_V_keep_V_0_data_reg;
    end else begin
        in_data_V_keep_V_0_data_out = in_data_TKEEP;
    end
end

always @ (*) begin
    if (((1'b1 == in_data_V_keep_V_0_vld_in) & (1'b0 == in_data_V_keep_V_0_ack_out) & (1'b1 == in_data_V_keep_V_0_in_rdy))) begin
        in_data_V_keep_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == in_data_V_keep_V_0_ack_out) & (1'b1 == in_data_V_keep_V_0_has_vld_data_reg) & ((1'b0 == in_data_V_keep_V_0_vld_in) | (1'b0 == in_data_V_keep_V_0_in_rdy)))) begin
        in_data_V_keep_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        in_data_V_keep_V_0_has_vld_data_reg_i = in_data_V_keep_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((1'b1 == in_data_V_last_V_0_has_vld_data_reg)) begin
        in_data_V_last_V_0_data_out = in_data_V_last_V_0_data_reg;
    end else begin
        in_data_V_last_V_0_data_out = in_data_TLAST;
    end
end

always @ (*) begin
    if (((1'b1 == in_data_V_last_V_0_vld_in) & (1'b0 == in_data_V_last_V_0_ack_out) & (1'b1 == in_data_V_last_V_0_in_rdy))) begin
        in_data_V_last_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == in_data_V_last_V_0_ack_out) & (1'b1 == in_data_V_last_V_0_has_vld_data_reg) & ((1'b0 == in_data_V_last_V_0_vld_in) | (1'b0 == in_data_V_last_V_0_in_rdy)))) begin
        in_data_V_last_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        in_data_V_last_V_0_has_vld_data_reg_i = in_data_V_last_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((1'b1 == in_data_V_strb_V_0_has_vld_data_reg)) begin
        in_data_V_strb_V_0_data_out = in_data_V_strb_V_0_data_reg;
    end else begin
        in_data_V_strb_V_0_data_out = in_data_TSTRB;
    end
end

always @ (*) begin
    if (((1'b1 == in_data_V_strb_V_0_vld_in) & (1'b0 == in_data_V_strb_V_0_ack_out) & (1'b1 == in_data_V_strb_V_0_in_rdy))) begin
        in_data_V_strb_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == in_data_V_strb_V_0_ack_out) & (1'b1 == in_data_V_strb_V_0_has_vld_data_reg) & ((1'b0 == in_data_V_strb_V_0_vld_in) | (1'b0 == in_data_V_strb_V_0_in_rdy)))) begin
        in_data_V_strb_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        in_data_V_strb_V_0_has_vld_data_reg_i = in_data_V_strb_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((1'b1 == in_data_V_user_V_0_has_vld_data_reg)) begin
        in_data_V_user_V_0_data_out = in_data_V_user_V_0_data_reg;
    end else begin
        in_data_V_user_V_0_data_out = in_data_TUSER;
    end
end

always @ (*) begin
    if (((1'b1 == in_data_V_user_V_0_vld_in) & (1'b0 == in_data_V_user_V_0_ack_out) & (1'b1 == in_data_V_user_V_0_in_rdy))) begin
        in_data_V_user_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == in_data_V_user_V_0_ack_out) & (1'b1 == in_data_V_user_V_0_has_vld_data_reg) & ((1'b0 == in_data_V_user_V_0_vld_in) | (1'b0 == in_data_V_user_V_0_in_rdy)))) begin
        in_data_V_user_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        in_data_V_user_V_0_has_vld_data_reg_i = in_data_V_user_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & ~ap_sig_727)) begin
        x_ap_vld = 1'b1;
    end else begin
        x_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & ~ap_sig_727)) begin
        y_ap_vld = 1'b1;
    end else begin
        y_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            if (~(1'b0 == grp_moments_AXIvideo2Mat_fu_157_ap_done)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            if (~(1'b0 == grp_moments_calc_fu_147_ap_done)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            if (~((1'b0 == grp_moments_atan2_cordic_double_s_fu_139_ap_done) | (1'b0 == grp_moments_Mat2AXIvideo_fu_178_ap_done))) begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            if (~ap_sig_727) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_37 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_468 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_487 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_496 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_507 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_523 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_613 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_630 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_663 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_670 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_712 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_727 = ((out_data_V_data_V_1_sRdy == 1'b0) | (out_data_V_keep_V_1_sRdy == 1'b0) | (out_data_V_strb_V_1_sRdy == 1'b0) | (out_data_V_user_V_1_sRdy == 1'b0) | (out_data_V_last_V_1_sRdy == 1'b0) | (out_data_V_id_V_1_sRdy == 1'b0) | (out_data_V_dest_V_1_sRdy == 1'b0));
end

always @ (*) begin
    ap_sig_746 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

assign grp_fu_207_p0 = $signed(sub45_V_reg_288);

assign grp_moments_AXIvideo2Mat_fu_157_ap_start = ap_reg_grp_moments_AXIvideo2Mat_fu_157_ap_start;

assign grp_moments_AXIvideo2Mat_fu_157_in_data_TVALID = ((in_data_TVALID | in_data_V_dest_V_0_has_vld_data_reg) & ~in_data_V_dest_V_0_areset_d);

assign grp_moments_Mat2AXIvideo_fu_178_ap_start = ap_reg_grp_moments_Mat2AXIvideo_fu_178_ap_start;

assign grp_moments_atan2_cordic_double_s_fu_139_ap_start = ap_reg_grp_moments_atan2_cordic_double_s_fu_139_ap_start;

assign grp_moments_calc_fu_147_ap_start = ap_reg_grp_moments_calc_fu_147_ap_start;

assign in_data_TREADY = in_data_V_dest_V_0_in_rdy;

assign in_data_V_data_V_0_ack_out = grp_moments_AXIvideo2Mat_fu_157_in_data_TREADY;

assign in_data_V_data_V_0_vld_in = in_data_TVALID;

assign in_data_V_dest_V_0_ack_out = grp_moments_AXIvideo2Mat_fu_157_in_data_TREADY;

assign in_data_V_dest_V_0_vld_in = in_data_TVALID;

assign in_data_V_id_V_0_ack_out = grp_moments_AXIvideo2Mat_fu_157_in_data_TREADY;

assign in_data_V_id_V_0_vld_in = in_data_TVALID;

assign in_data_V_keep_V_0_ack_out = grp_moments_AXIvideo2Mat_fu_157_in_data_TREADY;

assign in_data_V_keep_V_0_vld_in = in_data_TVALID;

assign in_data_V_last_V_0_ack_out = grp_moments_AXIvideo2Mat_fu_157_in_data_TREADY;

assign in_data_V_last_V_0_vld_in = in_data_TVALID;

assign in_data_V_strb_V_0_ack_out = grp_moments_AXIvideo2Mat_fu_157_in_data_TREADY;

assign in_data_V_strb_V_0_vld_in = in_data_TVALID;

assign in_data_V_user_V_0_ack_out = grp_moments_AXIvideo2Mat_fu_157_in_data_TREADY;

assign in_data_V_user_V_0_vld_in = in_data_TVALID;

assign out_data_TDATA = out_data_V_data_V_1_data_reg;

assign out_data_TDEST = out_data_V_dest_V_1_data_reg;

assign out_data_TID = out_data_V_id_V_1_data_reg;

assign out_data_TKEEP = out_data_V_keep_V_1_data_reg;

assign out_data_TLAST = out_data_V_last_V_1_data_reg;

assign out_data_TSTRB = out_data_V_strb_V_1_data_reg;

assign out_data_TUSER = out_data_V_user_V_1_data_reg;

assign out_data_TVALID = out_data_V_dest_V_1_mVld;

assign out_data_V_data_V_1_ack_out = out_data_TREADY;

always @ (*) begin
    out_data_V_data_V_1_sRdy = (~out_data_V_data_V_1_areset_d & (out_data_TREADY | ~out_data_V_data_V_1_mVld));
end

assign out_data_V_data_V_1_vld_in = grp_moments_Mat2AXIvideo_fu_178_out_data_TVALID;

assign out_data_V_dest_V_1_ack_out = out_data_TREADY;

always @ (*) begin
    out_data_V_dest_V_1_sRdy = (~out_data_V_dest_V_1_areset_d & (out_data_TREADY | ~out_data_V_dest_V_1_mVld));
end

assign out_data_V_dest_V_1_vld_in = grp_moments_Mat2AXIvideo_fu_178_out_data_TVALID;

assign out_data_V_id_V_1_ack_out = out_data_TREADY;

always @ (*) begin
    out_data_V_id_V_1_sRdy = (~out_data_V_id_V_1_areset_d & (out_data_TREADY | ~out_data_V_id_V_1_mVld));
end

assign out_data_V_id_V_1_vld_in = grp_moments_Mat2AXIvideo_fu_178_out_data_TVALID;

assign out_data_V_keep_V_1_ack_out = out_data_TREADY;

always @ (*) begin
    out_data_V_keep_V_1_sRdy = (~out_data_V_keep_V_1_areset_d & (out_data_TREADY | ~out_data_V_keep_V_1_mVld));
end

assign out_data_V_keep_V_1_vld_in = grp_moments_Mat2AXIvideo_fu_178_out_data_TVALID;

assign out_data_V_last_V_1_ack_out = out_data_TREADY;

always @ (*) begin
    out_data_V_last_V_1_sRdy = (~out_data_V_last_V_1_areset_d & (out_data_TREADY | ~out_data_V_last_V_1_mVld));
end

assign out_data_V_last_V_1_vld_in = grp_moments_Mat2AXIvideo_fu_178_out_data_TVALID;

assign out_data_V_strb_V_1_ack_out = out_data_TREADY;

always @ (*) begin
    out_data_V_strb_V_1_sRdy = (~out_data_V_strb_V_1_areset_d & (out_data_TREADY | ~out_data_V_strb_V_1_mVld));
end

assign out_data_V_strb_V_1_vld_in = grp_moments_Mat2AXIvideo_fu_178_out_data_TVALID;

assign out_data_V_user_V_1_ack_out = out_data_TREADY;

always @ (*) begin
    out_data_V_user_V_1_sRdy = (~out_data_V_user_V_1_areset_d & (out_data_TREADY | ~out_data_V_user_V_1_mVld));
end

assign out_data_V_user_V_1_vld_in = grp_moments_Mat2AXIvideo_fu_178_out_data_TVALID;

assign tmp_fu_226_p1 = grp_moments_calc_fu_147_ap_return_2[63:0];

assign x = x_center_V_reg_278;

assign y = y_center_V_reg_283;

endmodule //moments
